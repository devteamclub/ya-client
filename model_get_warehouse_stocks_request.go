/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the GetWarehouseStocksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWarehouseStocksRequest{}

// GetWarehouseStocksRequest Фильтры для запроса остатков. 
type GetWarehouseStocksRequest struct {
	// Возвращать ли информацию по оборачиваемости (FBY).  Значение по умолчанию — `false`. Передавайте `true`, если информация нужна. 
	WithTurnover *bool `json:"withTurnover,omitempty"`
	// Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве. 
	Archived *bool `json:"archived,omitempty"`
	// Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token`; * `limit`; * `archived`.  {% endnote %}    
	OfferIds []string `json:"offerIds,omitempty"`
}

// NewGetWarehouseStocksRequest instantiates a new GetWarehouseStocksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWarehouseStocksRequest() *GetWarehouseStocksRequest {
	this := GetWarehouseStocksRequest{}
	var withTurnover bool = false
	this.WithTurnover = &withTurnover
	return &this
}

// NewGetWarehouseStocksRequestWithDefaults instantiates a new GetWarehouseStocksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWarehouseStocksRequestWithDefaults() *GetWarehouseStocksRequest {
	this := GetWarehouseStocksRequest{}
	var withTurnover bool = false
	this.WithTurnover = &withTurnover
	return &this
}

// GetWithTurnover returns the WithTurnover field value if set, zero value otherwise.
func (o *GetWarehouseStocksRequest) GetWithTurnover() bool {
	if o == nil || IsNil(o.WithTurnover) {
		var ret bool
		return ret
	}
	return *o.WithTurnover
}

// GetWithTurnoverOk returns a tuple with the WithTurnover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWarehouseStocksRequest) GetWithTurnoverOk() (*bool, bool) {
	if o == nil || IsNil(o.WithTurnover) {
		return nil, false
	}
	return o.WithTurnover, true
}

// HasWithTurnover returns a boolean if a field has been set.
func (o *GetWarehouseStocksRequest) HasWithTurnover() bool {
	if o != nil && !IsNil(o.WithTurnover) {
		return true
	}

	return false
}

// SetWithTurnover gets a reference to the given bool and assigns it to the WithTurnover field.
func (o *GetWarehouseStocksRequest) SetWithTurnover(v bool) {
	o.WithTurnover = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *GetWarehouseStocksRequest) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWarehouseStocksRequest) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *GetWarehouseStocksRequest) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *GetWarehouseStocksRequest) SetArchived(v bool) {
	o.Archived = &v
}

// GetOfferIds returns the OfferIds field value if set, zero value otherwise.
func (o *GetWarehouseStocksRequest) GetOfferIds() []string {
	if o == nil || IsNil(o.OfferIds) {
		var ret []string
		return ret
	}
	return o.OfferIds
}

// GetOfferIdsOk returns a tuple with the OfferIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWarehouseStocksRequest) GetOfferIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OfferIds) {
		return nil, false
	}
	return o.OfferIds, true
}

// HasOfferIds returns a boolean if a field has been set.
func (o *GetWarehouseStocksRequest) HasOfferIds() bool {
	if o != nil && !IsNil(o.OfferIds) {
		return true
	}

	return false
}

// SetOfferIds gets a reference to the given []string and assigns it to the OfferIds field.
func (o *GetWarehouseStocksRequest) SetOfferIds(v []string) {
	o.OfferIds = v
}

func (o GetWarehouseStocksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWarehouseStocksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WithTurnover) {
		toSerialize["withTurnover"] = o.WithTurnover
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.OfferIds) {
		toSerialize["offerIds"] = o.OfferIds
	}
	return toSerialize, nil
}

type NullableGetWarehouseStocksRequest struct {
	value *GetWarehouseStocksRequest
	isSet bool
}

func (v NullableGetWarehouseStocksRequest) Get() *GetWarehouseStocksRequest {
	return v.value
}

func (v *NullableGetWarehouseStocksRequest) Set(val *GetWarehouseStocksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWarehouseStocksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWarehouseStocksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWarehouseStocksRequest(val *GetWarehouseStocksRequest) *NullableGetWarehouseStocksRequest {
	return &NullableGetWarehouseStocksRequest{value: val, isSet: true}
}

func (v NullableGetWarehouseStocksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWarehouseStocksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


