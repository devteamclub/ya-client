/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the OfferMappingEntriesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferMappingEntriesDTO{}

// OfferMappingEntriesDTO Информация о товарах в каталоге.
type OfferMappingEntriesDTO struct {
	Paging *ScrollingPagerDTO `json:"paging,omitempty"`
	// Информация о товарах в каталоге.
	OfferMappingEntries []OfferMappingEntryDTO `json:"offerMappingEntries,omitempty"`
}

// NewOfferMappingEntriesDTO instantiates a new OfferMappingEntriesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferMappingEntriesDTO() *OfferMappingEntriesDTO {
	this := OfferMappingEntriesDTO{}
	return &this
}

// NewOfferMappingEntriesDTOWithDefaults instantiates a new OfferMappingEntriesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferMappingEntriesDTOWithDefaults() *OfferMappingEntriesDTO {
	this := OfferMappingEntriesDTO{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *OfferMappingEntriesDTO) GetPaging() ScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferMappingEntriesDTO) GetPagingOk() (*ScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *OfferMappingEntriesDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ScrollingPagerDTO and assigns it to the Paging field.
func (o *OfferMappingEntriesDTO) SetPaging(v ScrollingPagerDTO) {
	o.Paging = &v
}

// GetOfferMappingEntries returns the OfferMappingEntries field value if set, zero value otherwise.
func (o *OfferMappingEntriesDTO) GetOfferMappingEntries() []OfferMappingEntryDTO {
	if o == nil || IsNil(o.OfferMappingEntries) {
		var ret []OfferMappingEntryDTO
		return ret
	}
	return o.OfferMappingEntries
}

// GetOfferMappingEntriesOk returns a tuple with the OfferMappingEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferMappingEntriesDTO) GetOfferMappingEntriesOk() ([]OfferMappingEntryDTO, bool) {
	if o == nil || IsNil(o.OfferMappingEntries) {
		return nil, false
	}
	return o.OfferMappingEntries, true
}

// HasOfferMappingEntries returns a boolean if a field has been set.
func (o *OfferMappingEntriesDTO) HasOfferMappingEntries() bool {
	if o != nil && !IsNil(o.OfferMappingEntries) {
		return true
	}

	return false
}

// SetOfferMappingEntries gets a reference to the given []OfferMappingEntryDTO and assigns it to the OfferMappingEntries field.
func (o *OfferMappingEntriesDTO) SetOfferMappingEntries(v []OfferMappingEntryDTO) {
	o.OfferMappingEntries = v
}

func (o OfferMappingEntriesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferMappingEntriesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.OfferMappingEntries) {
		toSerialize["offerMappingEntries"] = o.OfferMappingEntries
	}
	return toSerialize, nil
}

type NullableOfferMappingEntriesDTO struct {
	value *OfferMappingEntriesDTO
	isSet bool
}

func (v NullableOfferMappingEntriesDTO) Get() *OfferMappingEntriesDTO {
	return v.value
}

func (v *NullableOfferMappingEntriesDTO) Set(val *OfferMappingEntriesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferMappingEntriesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferMappingEntriesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferMappingEntriesDTO(val *OfferMappingEntriesDTO) *NullableOfferMappingEntriesDTO {
	return &NullableOfferMappingEntriesDTO{value: val, isSet: true}
}

func (v NullableOfferMappingEntriesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferMappingEntriesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


