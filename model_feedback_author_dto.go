/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the FeedbackAuthorDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedbackAuthorDTO{}

// FeedbackAuthorDTO Информация об авторе отзыва.  Если отзыв оставлен анонимно, параметр не возвращается. 
type FeedbackAuthorDTO struct {
	// Имя автора отзыва.
	Name *string `json:"name,omitempty"`
	Region *RegionDTO `json:"region,omitempty"`
}

// NewFeedbackAuthorDTO instantiates a new FeedbackAuthorDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackAuthorDTO() *FeedbackAuthorDTO {
	this := FeedbackAuthorDTO{}
	return &this
}

// NewFeedbackAuthorDTOWithDefaults instantiates a new FeedbackAuthorDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackAuthorDTOWithDefaults() *FeedbackAuthorDTO {
	this := FeedbackAuthorDTO{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FeedbackAuthorDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackAuthorDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FeedbackAuthorDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FeedbackAuthorDTO) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FeedbackAuthorDTO) GetRegion() RegionDTO {
	if o == nil || IsNil(o.Region) {
		var ret RegionDTO
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackAuthorDTO) GetRegionOk() (*RegionDTO, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FeedbackAuthorDTO) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given RegionDTO and assigns it to the Region field.
func (o *FeedbackAuthorDTO) SetRegion(v RegionDTO) {
	o.Region = &v
}

func (o FeedbackAuthorDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedbackAuthorDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableFeedbackAuthorDTO struct {
	value *FeedbackAuthorDTO
	isSet bool
}

func (v NullableFeedbackAuthorDTO) Get() *FeedbackAuthorDTO {
	return v.value
}

func (v *NullableFeedbackAuthorDTO) Set(val *FeedbackAuthorDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackAuthorDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackAuthorDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackAuthorDTO(val *FeedbackAuthorDTO) *NullableFeedbackAuthorDTO {
	return &NullableFeedbackAuthorDTO{value: val, isSet: true}
}

func (v NullableFeedbackAuthorDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackAuthorDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


