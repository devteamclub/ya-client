/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
	"time"
)

// checks if the ReturnDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnDTO{}

// ReturnDTO Возврат заказа.
type ReturnDTO struct {
	// Идентификатор возврата.
	Id *int64 `json:"id,omitempty"`
	// Номер заказа.
	OrderId *int64 `json:"orderId,omitempty"`
	// Дата создания возврата клиентом.
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// Дата обновления заказа.
	UpdateDate *time.Time `json:"updateDate,omitempty"`
	RefundStatus *RefundStatusType `json:"refundStatus,omitempty"`
	LogisticPickupPoint *LogisticPickupPointDTO `json:"logisticPickupPoint,omitempty"`
	ShipmentRecipientType *RecipientType `json:"shipmentRecipientType,omitempty"`
	ShipmentStatus *ReturnShipmentStatusType `json:"shipmentStatus,omitempty"`
	// Сумма возврата.
	RefundAmount *int64 `json:"refundAmount,omitempty"`
	// Список товаров в возврате.
	Items []ReturnItemDTO `json:"items,omitempty"`
	ReturnType *ReturnType `json:"returnType,omitempty"`
}

// NewReturnDTO instantiates a new ReturnDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnDTO() *ReturnDTO {
	this := ReturnDTO{}
	return &this
}

// NewReturnDTOWithDefaults instantiates a new ReturnDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnDTOWithDefaults() *ReturnDTO {
	this := ReturnDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReturnDTO) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReturnDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ReturnDTO) SetId(v int64) {
	o.Id = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *ReturnDTO) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *ReturnDTO) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *ReturnDTO) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ReturnDTO) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ReturnDTO) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *ReturnDTO) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ReturnDTO) GetUpdateDate() time.Time {
	if o == nil || IsNil(o.UpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ReturnDTO) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given time.Time and assigns it to the UpdateDate field.
func (o *ReturnDTO) SetUpdateDate(v time.Time) {
	o.UpdateDate = &v
}

// GetRefundStatus returns the RefundStatus field value if set, zero value otherwise.
func (o *ReturnDTO) GetRefundStatus() RefundStatusType {
	if o == nil || IsNil(o.RefundStatus) {
		var ret RefundStatusType
		return ret
	}
	return *o.RefundStatus
}

// GetRefundStatusOk returns a tuple with the RefundStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetRefundStatusOk() (*RefundStatusType, bool) {
	if o == nil || IsNil(o.RefundStatus) {
		return nil, false
	}
	return o.RefundStatus, true
}

// HasRefundStatus returns a boolean if a field has been set.
func (o *ReturnDTO) HasRefundStatus() bool {
	if o != nil && !IsNil(o.RefundStatus) {
		return true
	}

	return false
}

// SetRefundStatus gets a reference to the given RefundStatusType and assigns it to the RefundStatus field.
func (o *ReturnDTO) SetRefundStatus(v RefundStatusType) {
	o.RefundStatus = &v
}

// GetLogisticPickupPoint returns the LogisticPickupPoint field value if set, zero value otherwise.
func (o *ReturnDTO) GetLogisticPickupPoint() LogisticPickupPointDTO {
	if o == nil || IsNil(o.LogisticPickupPoint) {
		var ret LogisticPickupPointDTO
		return ret
	}
	return *o.LogisticPickupPoint
}

// GetLogisticPickupPointOk returns a tuple with the LogisticPickupPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetLogisticPickupPointOk() (*LogisticPickupPointDTO, bool) {
	if o == nil || IsNil(o.LogisticPickupPoint) {
		return nil, false
	}
	return o.LogisticPickupPoint, true
}

// HasLogisticPickupPoint returns a boolean if a field has been set.
func (o *ReturnDTO) HasLogisticPickupPoint() bool {
	if o != nil && !IsNil(o.LogisticPickupPoint) {
		return true
	}

	return false
}

// SetLogisticPickupPoint gets a reference to the given LogisticPickupPointDTO and assigns it to the LogisticPickupPoint field.
func (o *ReturnDTO) SetLogisticPickupPoint(v LogisticPickupPointDTO) {
	o.LogisticPickupPoint = &v
}

// GetShipmentRecipientType returns the ShipmentRecipientType field value if set, zero value otherwise.
func (o *ReturnDTO) GetShipmentRecipientType() RecipientType {
	if o == nil || IsNil(o.ShipmentRecipientType) {
		var ret RecipientType
		return ret
	}
	return *o.ShipmentRecipientType
}

// GetShipmentRecipientTypeOk returns a tuple with the ShipmentRecipientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetShipmentRecipientTypeOk() (*RecipientType, bool) {
	if o == nil || IsNil(o.ShipmentRecipientType) {
		return nil, false
	}
	return o.ShipmentRecipientType, true
}

// HasShipmentRecipientType returns a boolean if a field has been set.
func (o *ReturnDTO) HasShipmentRecipientType() bool {
	if o != nil && !IsNil(o.ShipmentRecipientType) {
		return true
	}

	return false
}

// SetShipmentRecipientType gets a reference to the given RecipientType and assigns it to the ShipmentRecipientType field.
func (o *ReturnDTO) SetShipmentRecipientType(v RecipientType) {
	o.ShipmentRecipientType = &v
}

// GetShipmentStatus returns the ShipmentStatus field value if set, zero value otherwise.
func (o *ReturnDTO) GetShipmentStatus() ReturnShipmentStatusType {
	if o == nil || IsNil(o.ShipmentStatus) {
		var ret ReturnShipmentStatusType
		return ret
	}
	return *o.ShipmentStatus
}

// GetShipmentStatusOk returns a tuple with the ShipmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetShipmentStatusOk() (*ReturnShipmentStatusType, bool) {
	if o == nil || IsNil(o.ShipmentStatus) {
		return nil, false
	}
	return o.ShipmentStatus, true
}

// HasShipmentStatus returns a boolean if a field has been set.
func (o *ReturnDTO) HasShipmentStatus() bool {
	if o != nil && !IsNil(o.ShipmentStatus) {
		return true
	}

	return false
}

// SetShipmentStatus gets a reference to the given ReturnShipmentStatusType and assigns it to the ShipmentStatus field.
func (o *ReturnDTO) SetShipmentStatus(v ReturnShipmentStatusType) {
	o.ShipmentStatus = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *ReturnDTO) GetRefundAmount() int64 {
	if o == nil || IsNil(o.RefundAmount) {
		var ret int64
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetRefundAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.RefundAmount) {
		return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *ReturnDTO) HasRefundAmount() bool {
	if o != nil && !IsNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given int64 and assigns it to the RefundAmount field.
func (o *ReturnDTO) SetRefundAmount(v int64) {
	o.RefundAmount = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ReturnDTO) GetItems() []ReturnItemDTO {
	if o == nil || IsNil(o.Items) {
		var ret []ReturnItemDTO
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetItemsOk() ([]ReturnItemDTO, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ReturnDTO) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ReturnItemDTO and assigns it to the Items field.
func (o *ReturnDTO) SetItems(v []ReturnItemDTO) {
	o.Items = v
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *ReturnDTO) GetReturnType() ReturnType {
	if o == nil || IsNil(o.ReturnType) {
		var ret ReturnType
		return ret
	}
	return *o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnDTO) GetReturnTypeOk() (*ReturnType, bool) {
	if o == nil || IsNil(o.ReturnType) {
		return nil, false
	}
	return o.ReturnType, true
}

// HasReturnType returns a boolean if a field has been set.
func (o *ReturnDTO) HasReturnType() bool {
	if o != nil && !IsNil(o.ReturnType) {
		return true
	}

	return false
}

// SetReturnType gets a reference to the given ReturnType and assigns it to the ReturnType field.
func (o *ReturnDTO) SetReturnType(v ReturnType) {
	o.ReturnType = &v
}

func (o ReturnDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if !IsNil(o.RefundStatus) {
		toSerialize["refundStatus"] = o.RefundStatus
	}
	if !IsNil(o.LogisticPickupPoint) {
		toSerialize["logisticPickupPoint"] = o.LogisticPickupPoint
	}
	if !IsNil(o.ShipmentRecipientType) {
		toSerialize["shipmentRecipientType"] = o.ShipmentRecipientType
	}
	if !IsNil(o.ShipmentStatus) {
		toSerialize["shipmentStatus"] = o.ShipmentStatus
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refundAmount"] = o.RefundAmount
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.ReturnType) {
		toSerialize["returnType"] = o.ReturnType
	}
	return toSerialize, nil
}

type NullableReturnDTO struct {
	value *ReturnDTO
	isSet bool
}

func (v NullableReturnDTO) Get() *ReturnDTO {
	return v.value
}

func (v *NullableReturnDTO) Set(val *ReturnDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnDTO(val *ReturnDTO) *NullableReturnDTO {
	return &NullableReturnDTO{value: val, isSet: true}
}

func (v NullableReturnDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


