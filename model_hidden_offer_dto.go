/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the HiddenOfferDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HiddenOfferDTO{}

// HiddenOfferDTO Информация о скрытии.
type HiddenOfferDTO struct {
	FeedId *int64 `json:"feedId,omitempty"`
	//   **Ваш SKU**  Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \\ ( ) [ ] - = _`  Максимальная длина — 80 знаков.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields). 
	OfferId *string `json:"offerId,omitempty"`
	// {% note alert \"Это поле устарело\" %}  Не используйте его — это может привести к ошибкам.  {% endnote %}  Количество часов до возобновления показа товара.  Минимальное значение — `1`.  Максимальное значение — `720`.  Значение по умолчанию — `48`.  Используется только совместно с параметром `priority=\"true\"`. 
	// Deprecated
	TtlInHours *int32 `json:"ttlInHours,omitempty"`
	// {% note alert \"Это поле устарело\" %}  Не используйте его — это может привести к ошибкам.  {% endnote %}  Комментарий магазина.  Максимальная длина комментария — 100 символов.  Используется только совместно с параметром `priority=\"true\"`. Если скрытие было без приоритета, комментарий не вернется в ответе. 
	// Deprecated
	Comment *string `json:"comment,omitempty"`
	// SKU на Маркете.
	MarketSku *int64 `json:"marketSku,omitempty"`
	// {% note alert \"Это поле устарело\" %}  Не используйте его — это может привести к ошибкам.  {% endnote %}  Приоритет скрытия предложений через API над скрытием в личном кабинете. Параметр принимает только значение true. 
	// Deprecated
	Priority *bool `json:"priority,omitempty"`
}

// NewHiddenOfferDTO instantiates a new HiddenOfferDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHiddenOfferDTO() *HiddenOfferDTO {
	this := HiddenOfferDTO{}
	return &this
}

// NewHiddenOfferDTOWithDefaults instantiates a new HiddenOfferDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHiddenOfferDTOWithDefaults() *HiddenOfferDTO {
	this := HiddenOfferDTO{}
	return &this
}

// GetFeedId returns the FeedId field value if set, zero value otherwise.
func (o *HiddenOfferDTO) GetFeedId() int64 {
	if o == nil || IsNil(o.FeedId) {
		var ret int64
		return ret
	}
	return *o.FeedId
}

// GetFeedIdOk returns a tuple with the FeedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HiddenOfferDTO) GetFeedIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FeedId) {
		return nil, false
	}
	return o.FeedId, true
}

// HasFeedId returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasFeedId() bool {
	if o != nil && !IsNil(o.FeedId) {
		return true
	}

	return false
}

// SetFeedId gets a reference to the given int64 and assigns it to the FeedId field.
func (o *HiddenOfferDTO) SetFeedId(v int64) {
	o.FeedId = &v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *HiddenOfferDTO) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HiddenOfferDTO) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *HiddenOfferDTO) SetOfferId(v string) {
	o.OfferId = &v
}

// GetTtlInHours returns the TtlInHours field value if set, zero value otherwise.
// Deprecated
func (o *HiddenOfferDTO) GetTtlInHours() int32 {
	if o == nil || IsNil(o.TtlInHours) {
		var ret int32
		return ret
	}
	return *o.TtlInHours
}

// GetTtlInHoursOk returns a tuple with the TtlInHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *HiddenOfferDTO) GetTtlInHoursOk() (*int32, bool) {
	if o == nil || IsNil(o.TtlInHours) {
		return nil, false
	}
	return o.TtlInHours, true
}

// HasTtlInHours returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasTtlInHours() bool {
	if o != nil && !IsNil(o.TtlInHours) {
		return true
	}

	return false
}

// SetTtlInHours gets a reference to the given int32 and assigns it to the TtlInHours field.
// Deprecated
func (o *HiddenOfferDTO) SetTtlInHours(v int32) {
	o.TtlInHours = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
// Deprecated
func (o *HiddenOfferDTO) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *HiddenOfferDTO) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
// Deprecated
func (o *HiddenOfferDTO) SetComment(v string) {
	o.Comment = &v
}

// GetMarketSku returns the MarketSku field value if set, zero value otherwise.
func (o *HiddenOfferDTO) GetMarketSku() int64 {
	if o == nil || IsNil(o.MarketSku) {
		var ret int64
		return ret
	}
	return *o.MarketSku
}

// GetMarketSkuOk returns a tuple with the MarketSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HiddenOfferDTO) GetMarketSkuOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketSku) {
		return nil, false
	}
	return o.MarketSku, true
}

// HasMarketSku returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasMarketSku() bool {
	if o != nil && !IsNil(o.MarketSku) {
		return true
	}

	return false
}

// SetMarketSku gets a reference to the given int64 and assigns it to the MarketSku field.
func (o *HiddenOfferDTO) SetMarketSku(v int64) {
	o.MarketSku = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
// Deprecated
func (o *HiddenOfferDTO) GetPriority() bool {
	if o == nil || IsNil(o.Priority) {
		var ret bool
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *HiddenOfferDTO) GetPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *HiddenOfferDTO) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given bool and assigns it to the Priority field.
// Deprecated
func (o *HiddenOfferDTO) SetPriority(v bool) {
	o.Priority = &v
}

func (o HiddenOfferDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HiddenOfferDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FeedId) {
		toSerialize["feedId"] = o.FeedId
	}
	if !IsNil(o.OfferId) {
		toSerialize["offerId"] = o.OfferId
	}
	if !IsNil(o.TtlInHours) {
		toSerialize["ttlInHours"] = o.TtlInHours
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.MarketSku) {
		toSerialize["marketSku"] = o.MarketSku
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	return toSerialize, nil
}

type NullableHiddenOfferDTO struct {
	value *HiddenOfferDTO
	isSet bool
}

func (v NullableHiddenOfferDTO) Get() *HiddenOfferDTO {
	return v.value
}

func (v *NullableHiddenOfferDTO) Set(val *HiddenOfferDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableHiddenOfferDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableHiddenOfferDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHiddenOfferDTO(val *HiddenOfferDTO) *NullableHiddenOfferDTO {
	return &NullableHiddenOfferDTO{value: val, isSet: true}
}

func (v NullableHiddenOfferDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHiddenOfferDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


