/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the UpdateOfferMappingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOfferMappingsRequest{}

// UpdateOfferMappingsRequest struct for UpdateOfferMappingsRequest
type UpdateOfferMappingsRequest struct {
	// Перечень товаров, которые нужно добавить или обновить.
	OfferMappings []UpdateOfferMappingDTO `json:"offerMappings"`
}

type _UpdateOfferMappingsRequest UpdateOfferMappingsRequest

// NewUpdateOfferMappingsRequest instantiates a new UpdateOfferMappingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOfferMappingsRequest(offerMappings []UpdateOfferMappingDTO) *UpdateOfferMappingsRequest {
	this := UpdateOfferMappingsRequest{}
	this.OfferMappings = offerMappings
	return &this
}

// NewUpdateOfferMappingsRequestWithDefaults instantiates a new UpdateOfferMappingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOfferMappingsRequestWithDefaults() *UpdateOfferMappingsRequest {
	this := UpdateOfferMappingsRequest{}
	return &this
}

// GetOfferMappings returns the OfferMappings field value
func (o *UpdateOfferMappingsRequest) GetOfferMappings() []UpdateOfferMappingDTO {
	if o == nil {
		var ret []UpdateOfferMappingDTO
		return ret
	}

	return o.OfferMappings
}

// GetOfferMappingsOk returns a tuple with the OfferMappings field value
// and a boolean to check if the value has been set.
func (o *UpdateOfferMappingsRequest) GetOfferMappingsOk() ([]UpdateOfferMappingDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.OfferMappings, true
}

// SetOfferMappings sets field value
func (o *UpdateOfferMappingsRequest) SetOfferMappings(v []UpdateOfferMappingDTO) {
	o.OfferMappings = v
}

func (o UpdateOfferMappingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOfferMappingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["offerMappings"] = o.OfferMappings
	return toSerialize, nil
}

func (o *UpdateOfferMappingsRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"offerMappings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateOfferMappingsRequest := _UpdateOfferMappingsRequest{}

	err = json.Unmarshal(bytes, &varUpdateOfferMappingsRequest)

	if err != nil {
		return err
	}

	*o = UpdateOfferMappingsRequest(varUpdateOfferMappingsRequest)

	return err
}

type NullableUpdateOfferMappingsRequest struct {
	value *UpdateOfferMappingsRequest
	isSet bool
}

func (v NullableUpdateOfferMappingsRequest) Get() *UpdateOfferMappingsRequest {
	return v.value
}

func (v *NullableUpdateOfferMappingsRequest) Set(val *UpdateOfferMappingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOfferMappingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOfferMappingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOfferMappingsRequest(val *UpdateOfferMappingsRequest) *NullableUpdateOfferMappingsRequest {
	return &NullableUpdateOfferMappingsRequest{value: val, isSet: true}
}

func (v NullableUpdateOfferMappingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOfferMappingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


