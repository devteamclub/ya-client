/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ShipmentBoxesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentBoxesDTO{}

// ShipmentBoxesDTO В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания. 
type ShipmentBoxesDTO struct {
	// Список грузовых мест. Маркет определил количество мест по длине этого списка. 
	Boxes []ParcelBoxDTO `json:"boxes,omitempty"`
}

// NewShipmentBoxesDTO instantiates a new ShipmentBoxesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentBoxesDTO() *ShipmentBoxesDTO {
	this := ShipmentBoxesDTO{}
	return &this
}

// NewShipmentBoxesDTOWithDefaults instantiates a new ShipmentBoxesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentBoxesDTOWithDefaults() *ShipmentBoxesDTO {
	this := ShipmentBoxesDTO{}
	return &this
}

// GetBoxes returns the Boxes field value if set, zero value otherwise.
func (o *ShipmentBoxesDTO) GetBoxes() []ParcelBoxDTO {
	if o == nil || IsNil(o.Boxes) {
		var ret []ParcelBoxDTO
		return ret
	}
	return o.Boxes
}

// GetBoxesOk returns a tuple with the Boxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentBoxesDTO) GetBoxesOk() ([]ParcelBoxDTO, bool) {
	if o == nil || IsNil(o.Boxes) {
		return nil, false
	}
	return o.Boxes, true
}

// HasBoxes returns a boolean if a field has been set.
func (o *ShipmentBoxesDTO) HasBoxes() bool {
	if o != nil && !IsNil(o.Boxes) {
		return true
	}

	return false
}

// SetBoxes gets a reference to the given []ParcelBoxDTO and assigns it to the Boxes field.
func (o *ShipmentBoxesDTO) SetBoxes(v []ParcelBoxDTO) {
	o.Boxes = v
}

func (o ShipmentBoxesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentBoxesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Boxes) {
		toSerialize["boxes"] = o.Boxes
	}
	return toSerialize, nil
}

type NullableShipmentBoxesDTO struct {
	value *ShipmentBoxesDTO
	isSet bool
}

func (v NullableShipmentBoxesDTO) Get() *ShipmentBoxesDTO {
	return v.value
}

func (v *NullableShipmentBoxesDTO) Set(val *ShipmentBoxesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentBoxesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentBoxesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentBoxesDTO(val *ShipmentBoxesDTO) *NullableShipmentBoxesDTO {
	return &NullableShipmentBoxesDTO{value: val, isSet: true}
}

func (v NullableShipmentBoxesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentBoxesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


