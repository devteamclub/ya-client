/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the OrderTrackDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderTrackDTO{}

// OrderTrackDTO Информация о трек-номерах.
type OrderTrackDTO struct {
	// Трек‑номер посылки.
	TrackCode *string `json:"trackCode,omitempty"`
	// Идентификатор службы доставки.
	DeliveryServiceId *int64 `json:"deliveryServiceId,omitempty"`
}

// NewOrderTrackDTO instantiates a new OrderTrackDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderTrackDTO() *OrderTrackDTO {
	this := OrderTrackDTO{}
	return &this
}

// NewOrderTrackDTOWithDefaults instantiates a new OrderTrackDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderTrackDTOWithDefaults() *OrderTrackDTO {
	this := OrderTrackDTO{}
	return &this
}

// GetTrackCode returns the TrackCode field value if set, zero value otherwise.
func (o *OrderTrackDTO) GetTrackCode() string {
	if o == nil || IsNil(o.TrackCode) {
		var ret string
		return ret
	}
	return *o.TrackCode
}

// GetTrackCodeOk returns a tuple with the TrackCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTrackDTO) GetTrackCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TrackCode) {
		return nil, false
	}
	return o.TrackCode, true
}

// HasTrackCode returns a boolean if a field has been set.
func (o *OrderTrackDTO) HasTrackCode() bool {
	if o != nil && !IsNil(o.TrackCode) {
		return true
	}

	return false
}

// SetTrackCode gets a reference to the given string and assigns it to the TrackCode field.
func (o *OrderTrackDTO) SetTrackCode(v string) {
	o.TrackCode = &v
}

// GetDeliveryServiceId returns the DeliveryServiceId field value if set, zero value otherwise.
func (o *OrderTrackDTO) GetDeliveryServiceId() int64 {
	if o == nil || IsNil(o.DeliveryServiceId) {
		var ret int64
		return ret
	}
	return *o.DeliveryServiceId
}

// GetDeliveryServiceIdOk returns a tuple with the DeliveryServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTrackDTO) GetDeliveryServiceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeliveryServiceId) {
		return nil, false
	}
	return o.DeliveryServiceId, true
}

// HasDeliveryServiceId returns a boolean if a field has been set.
func (o *OrderTrackDTO) HasDeliveryServiceId() bool {
	if o != nil && !IsNil(o.DeliveryServiceId) {
		return true
	}

	return false
}

// SetDeliveryServiceId gets a reference to the given int64 and assigns it to the DeliveryServiceId field.
func (o *OrderTrackDTO) SetDeliveryServiceId(v int64) {
	o.DeliveryServiceId = &v
}

func (o OrderTrackDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderTrackDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrackCode) {
		toSerialize["trackCode"] = o.TrackCode
	}
	if !IsNil(o.DeliveryServiceId) {
		toSerialize["deliveryServiceId"] = o.DeliveryServiceId
	}
	return toSerialize, nil
}

type NullableOrderTrackDTO struct {
	value *OrderTrackDTO
	isSet bool
}

func (v NullableOrderTrackDTO) Get() *OrderTrackDTO {
	return v.value
}

func (v *NullableOrderTrackDTO) Set(val *OrderTrackDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderTrackDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderTrackDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderTrackDTO(val *OrderTrackDTO) *NullableOrderTrackDTO {
	return &NullableOrderTrackDTO{value: val, isSet: true}
}

func (v NullableOrderTrackDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderTrackDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


