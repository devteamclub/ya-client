/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the FeedbackOrderDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedbackOrderDTO{}

// FeedbackOrderDTO Информация о заказе, указанная в отзыве.
type FeedbackOrderDTO struct {
	// Номер заказа, указанный в отзыве.
	ShopOrderId *string `json:"shopOrderId,omitempty"`
	Delivery *FeedbackDeliveryType `json:"delivery,omitempty"`
}

// NewFeedbackOrderDTO instantiates a new FeedbackOrderDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackOrderDTO() *FeedbackOrderDTO {
	this := FeedbackOrderDTO{}
	return &this
}

// NewFeedbackOrderDTOWithDefaults instantiates a new FeedbackOrderDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackOrderDTOWithDefaults() *FeedbackOrderDTO {
	this := FeedbackOrderDTO{}
	return &this
}

// GetShopOrderId returns the ShopOrderId field value if set, zero value otherwise.
func (o *FeedbackOrderDTO) GetShopOrderId() string {
	if o == nil || IsNil(o.ShopOrderId) {
		var ret string
		return ret
	}
	return *o.ShopOrderId
}

// GetShopOrderIdOk returns a tuple with the ShopOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackOrderDTO) GetShopOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShopOrderId) {
		return nil, false
	}
	return o.ShopOrderId, true
}

// HasShopOrderId returns a boolean if a field has been set.
func (o *FeedbackOrderDTO) HasShopOrderId() bool {
	if o != nil && !IsNil(o.ShopOrderId) {
		return true
	}

	return false
}

// SetShopOrderId gets a reference to the given string and assigns it to the ShopOrderId field.
func (o *FeedbackOrderDTO) SetShopOrderId(v string) {
	o.ShopOrderId = &v
}

// GetDelivery returns the Delivery field value if set, zero value otherwise.
func (o *FeedbackOrderDTO) GetDelivery() FeedbackDeliveryType {
	if o == nil || IsNil(o.Delivery) {
		var ret FeedbackDeliveryType
		return ret
	}
	return *o.Delivery
}

// GetDeliveryOk returns a tuple with the Delivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackOrderDTO) GetDeliveryOk() (*FeedbackDeliveryType, bool) {
	if o == nil || IsNil(o.Delivery) {
		return nil, false
	}
	return o.Delivery, true
}

// HasDelivery returns a boolean if a field has been set.
func (o *FeedbackOrderDTO) HasDelivery() bool {
	if o != nil && !IsNil(o.Delivery) {
		return true
	}

	return false
}

// SetDelivery gets a reference to the given FeedbackDeliveryType and assigns it to the Delivery field.
func (o *FeedbackOrderDTO) SetDelivery(v FeedbackDeliveryType) {
	o.Delivery = &v
}

func (o FeedbackOrderDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedbackOrderDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShopOrderId) {
		toSerialize["shopOrderId"] = o.ShopOrderId
	}
	if !IsNil(o.Delivery) {
		toSerialize["delivery"] = o.Delivery
	}
	return toSerialize, nil
}

type NullableFeedbackOrderDTO struct {
	value *FeedbackOrderDTO
	isSet bool
}

func (v NullableFeedbackOrderDTO) Get() *FeedbackOrderDTO {
	return v.value
}

func (v *NullableFeedbackOrderDTO) Set(val *FeedbackOrderDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackOrderDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackOrderDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackOrderDTO(val *FeedbackOrderDTO) *NullableFeedbackOrderDTO {
	return &NullableFeedbackOrderDTO{value: val, isSet: true}
}

func (v NullableFeedbackOrderDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackOrderDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


