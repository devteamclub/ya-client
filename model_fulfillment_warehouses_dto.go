/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FulfillmentWarehousesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FulfillmentWarehousesDTO{}

// FulfillmentWarehousesDTO Список складов Маркета (FBY).
type FulfillmentWarehousesDTO struct {
	// Список складов Маркета (FBY).
	Warehouses []FulfillmentWarehouseDTO `json:"warehouses,omitempty"`
}

// NewFulfillmentWarehousesDTO instantiates a new FulfillmentWarehousesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFulfillmentWarehousesDTO() *FulfillmentWarehousesDTO {
	this := FulfillmentWarehousesDTO{}
	return &this
}

// NewFulfillmentWarehousesDTOWithDefaults instantiates a new FulfillmentWarehousesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFulfillmentWarehousesDTOWithDefaults() *FulfillmentWarehousesDTO {
	this := FulfillmentWarehousesDTO{}
	return &this
}

// GetWarehouses returns the Warehouses field value if set, zero value otherwise.
func (o *FulfillmentWarehousesDTO) GetWarehouses() []FulfillmentWarehouseDTO {
	if o == nil || IsNil(o.Warehouses) {
		var ret []FulfillmentWarehouseDTO
		return ret
	}
	return o.Warehouses
}

// GetWarehousesOk returns a tuple with the Warehouses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentWarehousesDTO) GetWarehousesOk() ([]FulfillmentWarehouseDTO, bool) {
	if o == nil || IsNil(o.Warehouses) {
		return nil, false
	}
	return o.Warehouses, true
}

// HasWarehouses returns a boolean if a field has been set.
func (o *FulfillmentWarehousesDTO) HasWarehouses() bool {
	if o != nil && !IsNil(o.Warehouses) {
		return true
	}

	return false
}

// SetWarehouses gets a reference to the given []FulfillmentWarehouseDTO and assigns it to the Warehouses field.
func (o *FulfillmentWarehousesDTO) SetWarehouses(v []FulfillmentWarehouseDTO) {
	o.Warehouses = v
}

func (o FulfillmentWarehousesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FulfillmentWarehousesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Warehouses) {
		toSerialize["warehouses"] = o.Warehouses
	}
	return toSerialize, nil
}

type NullableFulfillmentWarehousesDTO struct {
	value *FulfillmentWarehousesDTO
	isSet bool
}

func (v NullableFulfillmentWarehousesDTO) Get() *FulfillmentWarehousesDTO {
	return v.value
}

func (v *NullableFulfillmentWarehousesDTO) Set(val *FulfillmentWarehousesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFulfillmentWarehousesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFulfillmentWarehousesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFulfillmentWarehousesDTO(val *FulfillmentWarehousesDTO) *NullableFulfillmentWarehousesDTO {
	return &NullableFulfillmentWarehousesDTO{value: val, isSet: true}
}

func (v NullableFulfillmentWarehousesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFulfillmentWarehousesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


