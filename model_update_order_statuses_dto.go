/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateOrderStatusesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrderStatusesDTO{}

// UpdateOrderStatusesDTO Список заказов, статус которых обновился.
type UpdateOrderStatusesDTO struct {
	// Список с обновленными заказами.
	Orders []UpdateOrderStatusDTO `json:"orders,omitempty"`
}

// NewUpdateOrderStatusesDTO instantiates a new UpdateOrderStatusesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrderStatusesDTO() *UpdateOrderStatusesDTO {
	this := UpdateOrderStatusesDTO{}
	return &this
}

// NewUpdateOrderStatusesDTOWithDefaults instantiates a new UpdateOrderStatusesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrderStatusesDTOWithDefaults() *UpdateOrderStatusesDTO {
	this := UpdateOrderStatusesDTO{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *UpdateOrderStatusesDTO) GetOrders() []UpdateOrderStatusDTO {
	if o == nil || IsNil(o.Orders) {
		var ret []UpdateOrderStatusDTO
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrderStatusesDTO) GetOrdersOk() ([]UpdateOrderStatusDTO, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *UpdateOrderStatusesDTO) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []UpdateOrderStatusDTO and assigns it to the Orders field.
func (o *UpdateOrderStatusesDTO) SetOrders(v []UpdateOrderStatusDTO) {
	o.Orders = v
}

func (o UpdateOrderStatusesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrderStatusesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	return toSerialize, nil
}

type NullableUpdateOrderStatusesDTO struct {
	value *UpdateOrderStatusesDTO
	isSet bool
}

func (v NullableUpdateOrderStatusesDTO) Get() *UpdateOrderStatusesDTO {
	return v.value
}

func (v *NullableUpdateOrderStatusesDTO) Set(val *UpdateOrderStatusesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrderStatusesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrderStatusesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrderStatusesDTO(val *UpdateOrderStatusesDTO) *NullableUpdateOrderStatusesDTO {
	return &NullableUpdateOrderStatusesDTO{value: val, isSet: true}
}

func (v NullableUpdateOrderStatusesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrderStatusesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


