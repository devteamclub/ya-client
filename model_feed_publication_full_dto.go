/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
	"time"
)

// checks if the FeedPublicationFullDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedPublicationFullDTO{}

// FeedPublicationFullDTO Информация о последней публикации предложений из прайс-листа на Маркете. 
type FeedPublicationFullDTO struct {
	// Дата и время, которые магазин указал в прайс-листе. Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
	FileTime *time.Time `json:"fileTime,omitempty"`
	// Дата и время публикации предложений из прайс-листа на Маркете. Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
	PublishedTime *time.Time `json:"publishedTime,omitempty"`
}

// NewFeedPublicationFullDTO instantiates a new FeedPublicationFullDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedPublicationFullDTO() *FeedPublicationFullDTO {
	this := FeedPublicationFullDTO{}
	return &this
}

// NewFeedPublicationFullDTOWithDefaults instantiates a new FeedPublicationFullDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedPublicationFullDTOWithDefaults() *FeedPublicationFullDTO {
	this := FeedPublicationFullDTO{}
	return &this
}

// GetFileTime returns the FileTime field value if set, zero value otherwise.
func (o *FeedPublicationFullDTO) GetFileTime() time.Time {
	if o == nil || IsNil(o.FileTime) {
		var ret time.Time
		return ret
	}
	return *o.FileTime
}

// GetFileTimeOk returns a tuple with the FileTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedPublicationFullDTO) GetFileTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FileTime) {
		return nil, false
	}
	return o.FileTime, true
}

// HasFileTime returns a boolean if a field has been set.
func (o *FeedPublicationFullDTO) HasFileTime() bool {
	if o != nil && !IsNil(o.FileTime) {
		return true
	}

	return false
}

// SetFileTime gets a reference to the given time.Time and assigns it to the FileTime field.
func (o *FeedPublicationFullDTO) SetFileTime(v time.Time) {
	o.FileTime = &v
}

// GetPublishedTime returns the PublishedTime field value if set, zero value otherwise.
func (o *FeedPublicationFullDTO) GetPublishedTime() time.Time {
	if o == nil || IsNil(o.PublishedTime) {
		var ret time.Time
		return ret
	}
	return *o.PublishedTime
}

// GetPublishedTimeOk returns a tuple with the PublishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedPublicationFullDTO) GetPublishedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PublishedTime) {
		return nil, false
	}
	return o.PublishedTime, true
}

// HasPublishedTime returns a boolean if a field has been set.
func (o *FeedPublicationFullDTO) HasPublishedTime() bool {
	if o != nil && !IsNil(o.PublishedTime) {
		return true
	}

	return false
}

// SetPublishedTime gets a reference to the given time.Time and assigns it to the PublishedTime field.
func (o *FeedPublicationFullDTO) SetPublishedTime(v time.Time) {
	o.PublishedTime = &v
}

func (o FeedPublicationFullDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedPublicationFullDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileTime) {
		toSerialize["fileTime"] = o.FileTime
	}
	if !IsNil(o.PublishedTime) {
		toSerialize["publishedTime"] = o.PublishedTime
	}
	return toSerialize, nil
}

type NullableFeedPublicationFullDTO struct {
	value *FeedPublicationFullDTO
	isSet bool
}

func (v NullableFeedPublicationFullDTO) Get() *FeedPublicationFullDTO {
	return v.value
}

func (v *NullableFeedPublicationFullDTO) Set(val *FeedPublicationFullDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedPublicationFullDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedPublicationFullDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedPublicationFullDTO(val *FeedPublicationFullDTO) *NullableFeedPublicationFullDTO {
	return &NullableFeedPublicationFullDTO{value: val, isSet: true}
}

func (v NullableFeedPublicationFullDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedPublicationFullDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


