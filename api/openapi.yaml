openapi: 3.0.3
info:
  description: |
    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.

    В числе возможностей интеграции:

    * управление каталогом товаров и витриной,

    * обработка заказов,

    * изменение настроек магазина,

    * получение отчетов.
  license:
    name: BSD 3-Clause
    url: https://opensource.org/license/bsd-3-clause/
  title: Партнерский API Маркета
  version: LATEST
externalDocs:
  description: Документация API
  url: https://yandex.ru/dev/market/partner-api/doc/
servers:
- url: https://api.partner.market.yandex.ru
security:
- OAuth:
  - market:partner-api
paths:
  /campaigns:
    get:
      description: |
        Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getCampaigns
      parameters:
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
          description: Магазины пользователя.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Магазины пользователя
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
  /campaigns/{campaignId}:
    get:
      description: |
        Возвращает информацию о магазине.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getCampaign
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignResponse'
          description: Информация о магазине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о магазине
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
  /campaigns/{campaignId}/logins:
    get:
      description: |
        Возвращает список логинов, у которых есть доступ к магазину.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getCampaignLogins
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignLoginsResponse'
          description: "Список логинов, связанных с магазином."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Логины, связанные с магазином"
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
  /campaigns/{campaignId}/settings:
    get:
      description: |
        Возвращает информацию о настройках магазина, идентификатор которого указан в запросе.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getCampaignSettings
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignSettingsResponse'
          description: Настройки магазина
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Настройки магазина
      tags:
      - campaigns
      - dbs
  /campaigns/by_login/{login}:
    get:
      description: |
        Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getCampaignsByLogin
      parameters:
      - description: Логин пользователя.
        in: path
        name: login
        required: true
        schema:
          type: string
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
          description: Информация о магазинах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Магазины, доступные логину"
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
  /campaigns/{campaignId}/region:
    get:
      description: |
        Возвращает регион, в котором находится магазин.
        |**⚙️ Лимит:** 5 000 запросов в час|
        |-|
      operationId: getCampaignRegion
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignRegionResponse'
          description: |
            Возвращает регион, в котором находится магазин.

            |**⚙️ Лимит:** 1000 запросов в час|
            |-|
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Регион магазина
      tags:
      - campaigns
      - dbs
  /campaigns/{campaignId}/orders/{orderId}:
    get:
      description: |
        Возвращает информацию о заказе.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: getOrder
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: Информация о заказе
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о заказе
      tags:
      - orders
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders:
    get:
      description: |
        Возвращает информацию о заказах.

        Доступна фильтрация по нескольким характеристикам заказов:

        * дате оформления;

        * статусу;

        * этапу обработки или причине отмены;

        * типу (настоящий или тестовый);

        * дате отгрузки в службу доставки;

        * дате и времени обновления заказа.

        Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе `GET /campaigns/{campaignId}/orders/{orderId}` (если у вас есть идентификатор заказа) или запроса отчета по заказам `POST /campaigns/{campaignId}/stats/orders`.

        Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: getOrders
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Статус заказа:

          * `CANCELLED` — заказ отменен.

          * `DELIVERED` — заказ получен покупателем.

          * `DELIVERY` — заказ передан в службу доставки.

          * `PICKUP` — заказ доставлен в пункт самовывоза.

          * `PROCESSING` — заказ находится в обработке.

          * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).

          Также могут возвращаться другие значения. Обрабатывать их не требуется.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/OrderStatusType'
      - description: |
          Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

          Возможные значения для заказа в статусе `PROCESSING`:

          * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
          * `READY_TO_SHIP` — заказ собран и готов к отправке.
          * `SHIPPED` — заказ передан службе доставки.

          Возможные значения для заказа в статусе `CANCELLED`:

          * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.

          * `PROCESSING_EXPIRED` — значение более не используется.

          * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

          * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

          * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.

          * `SHOP_FAILED` — магазин не может выполнить заказ.

          * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

          * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

          * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

          * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

          * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

          * `USER_UNREACHABLE` — не удалось связаться с покупателем.
          * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.
          * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.

          Также могут возвращаться другие значения. Обрабатывать их не требуется.
        in: query
        name: substatus
        required: false
        schema:
          $ref: '#/components/schemas/OrderSubstatusType'
      - description: |
          Начальная дата для фильтрации заказов по дате оформления.

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.

          Значение по умолчанию: 30 дней назад от текущей даты.
        in: query
        name: fromDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате оформления.

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.

          Значение по умолчанию: текущая дата.
        in: query
        name: toDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.

          Начальная дата включается в интервал для фильтрации.
        in: query
        name: supplierShipmentDateFrom
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.

          Конечная дата не включается в интервал для фильтрации.
        in: query
        name: supplierShipmentDateTo
        required: false
        schema:
          format: date
          type: string
      - description: |
          Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

          Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.

          Начальная дата включается в интервал для фильтрации.
        in: query
        name: updatedAtFrom
        required: false
        schema:
          format: date-time
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

          Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.

          Конечная дата не включается в интервал для фильтрации.
        in: query
        name: updatedAtTo
        required: false
        schema:
          format: date-time
          type: string
      - description: Способ отгрузки
        in: query
        name: dispatchType
        required: false
        schema:
          $ref: '#/components/schemas/OrderDeliveryDispatchType'
      - description: |
          Фильтрация заказов по типам:

          * `false` — заказ пользователя.

          * `true` — тестовый заказ Маркета.
        in: query
        name: fake
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации из системы «Честный ЗНАК»:

          * `true` — да;

          * `false` — нет.

          Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
        in: query
        name: hasCis
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Фильтрация заказов по наличию запросов покупателей на отмену:

          * `true` — возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить. Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).
        in: query
        name: onlyWaitingForCancellationApprove
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:

          * `true` — возвращаются только заказы с неподтвержденной датой доставки.
          * `false` — фильтрация не применяется.
        in: query
        name: onlyEstimatedDelivery
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
          description: Информация о заказах
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о заказах
      tags:
      - orders
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/identifiers:
    put:
      description: |
        Передает Маркету коды маркировки для единиц товара в указанном заказе.

        Принимаются коды следующих типов:

        * Коды «Честного знака».
        * УИН для ювелирных изделий.
        * РНПТ и ГТД для импортных прослеживаемых товаров.

        {% note warning %}

        Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).

        {% endnote %}

        Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: provideOrderItemIdentifiers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderItemIdentifiersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvideOrderItemIdentifiersResponse'
          description: "Ответ 200 обозначает, что коды успешно записались. Ответ с\
            одержит краткие сведения о промаркированных товарах."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача уникальных кодов маркировки единиц товара
      tags:
      - orders
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/items:
    put:
      description: |
        Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:

        * покупатель уменьшил количество товара;
        * магазин не может поставить все товары в заказе.

        Для этого заказ должен находится в статусе `"status": "PROCESSING"` этапа обработки `"substatus": "STARTED"`. После передачи статуса `"substatus": "READY_TO_SHIP"` изменить состав невозможно.

        Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.

        Чтобы полностью удалить товар из заказа:

        * передайте значение `0`; или
        * не передавайте параметр `item`.

        Нельзя удалить или уменьшить количество товара, если он:

        * добавлен по акции;
        * составляет 99% стоимости заказа;
        * единственный товар в заказе.

        Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом `PUT campaigns/{campaignId}/orders/{orderId}/status` и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.

        {% note info "Увеличить заказ нельзя" %}

        С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.

        {% endnote %}

        **Возврат денег покупателю**

        Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:

        * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;

        * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: updateOrderItems
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemRequest'
        required: true
      responses:
        "200":
          description: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товара из заказа или уменьшение числа единиц
      tags:
      - orders
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/status:
    put:
      description: |
        Изменяет статус заказа. Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: updateOrderStatus
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusResponse'
          description: В случае успешного изменения статуса заказа возвращается обновленная
            информация о заказе
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение статуса заказа
      tags:
      - orders
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/status-update:
    post:
      description: |
        Изменяет статусы нескольких заказов. Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.

        Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"`и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: updateOrderStatuses
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusesResponse'
          description: Возвращается информация об обновленных статусах заказов
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение статусов заказа
      tags:
      - orders
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes:
    put:
      description: |
        Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.

        Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).

        Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.

        Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.

        {% cut "Как было раньше" %}

        Структура тела PUT-запроса:

        ```
        {
          "boxes":
          [
            {
              "fulfilmentId": "{string}",
              "weight": {int64},
              "width": {int64},
              "height": {int64},
              "depth": {int64},
              "items":
              [
                {
                  "id": {int64},
                  "count": {int32}
                },
                ...
              ]
            },
            ...
          ]
        }
        ```
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `boxes`       |           | Список грузовых мест.       |

        **Параметры, вложенные в `boxes`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. |
        | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. |
        | `width`       | Int64   | Ширина грузового места в сантиметрах.       |
        | `height`       | Int64   | Высота грузового места в сантиметрах.       |
        | `depth`       | Int64   | Глубина грузового места в сантиметрах.        |
        | `items`       | Int64   | Список товаров в грузовом месте.       |

        **Параметры, вложенные в `items`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `id`       | Int64     | Идентификатор товара в рамках заказа.   |
        | `count`    | Int32     | Количество единиц товара в грузовом месте.       |

        {% endcut %}

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: setOrderShipmentBoxes
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderShipmentBoxesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOrderShipmentBoxesResponse'
          description: "Имеет значение только тип ответа. Если вы получили `ОК`, к\
            оличество грузомест записано."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача количества грузовых мест в заказе
      tags:
      - orders
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/cancellation/accept:
    put:
      description: |
        Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.

        Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.

        Если заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса `PUT /campaigns/{campaignId}/orders/{orderId}/cancellation/accept`. Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.

        Чтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос `GET /campaigns/{campaignId}/orders`. В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах через личный кабинет или почту — на нее придет уведомление об отмене.

        Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.

        |**⚙️ Лимит:** 500 запросов в час|
        |-|
      operationId: acceptOrderCancellation
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOrderCancellationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Ответ на отмену заказа был успешно передан.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отмена заказа покупателем
      tags:
      - orders
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods:
    post:
      description: |
        Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.

        Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.

        Если в один заказ входят несколько ключей, передавайте их все в одном запросе.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: provideOrderDigitalCodes
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderDigitalCodesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача ключей цифровых товаров
      tags:
      - orders
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/delivery/date:
    put:
      description: |
        Метод изменяет дату доставки заказа в статусе PROCESSING или DELIVERY. Для заказов с другими статусами дату доставки изменить нельзя.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: setOrderDeliveryDate
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Успешное изменение даты доставки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение даты доставки заказа
      tags:
      - order-delivery
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/delivery/track:
    post:
      description: |
        Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.

        Вы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.

        Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: setOrderDeliveryTrackCode
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryTrackCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Трек‑номер посылки и идентификатор службы доставки были успешно
            переданы.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача трек‑номера посылки
      tags:
      - order-delivery
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/buyer:
    get:
      description: |
        Возвращает информацию о покупателе по идентификатору заказа.

        |**⚙️ Лимит:** 3 000 запросов в час|
        |-|
      operationId: getOrderBuyerInfo
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
          description: Информация о покупателе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о покупателе
      tags:
      - order-delivery
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/verifyEac:
    put:
      description: |
        Отправляет Маркету код подтверждения для его проверки.

        Код подтверждает передачу заказа или невыкупа:

        * курьеру — курьер должен назвать магазину код;
        * магазину — магазин называет код курьеру.

        Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из личного кабинета или приложения.

        Если у магазина настроена работа с кодами подтверждения, в запросах [POST /order/status](https://yandex.ru/dev/market/partner-api/doc/ru/pushapi/reference/post-order-status), [PUT campaigns/{campaignId}/orders/{orderId}/status](https://yandex.ru/dev/market/partner-api/doc/ru/reference/orders/updateOrderStatus), [GET campaigns/{campaignId}/orders](https://yandex.ru/dev/market/partner-api/doc/ru/reference/orders/getOrders), [GET campaigns/{campaignId}/orders/{orderId}](https://yandex.ru/dev/market/partner-api/doc/ru/reference/orders/getOrder) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.

        Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.

        Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: количество товаров в каталоге / 200, но не менее 500 товаров в минуту)
      operationId: verifyOrderEac
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOrderEacRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOrderEacResponse'
          description: Проверка кода выполнена успешно
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача кода проверки
      tags:
      - order-delivery
      - express
  /campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit:
    put:
      description: |
        Продлевает срок хранения заказа в пункте выдачи продавца.

        Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.

        Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: updateOrderStorageLimit
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStorageLimitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Продление срока хранения заказа
      tags:
      - order-delivery
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label:
    get:
      description: |
        Формирует ярлык‑наклейку на отдельное грузовое место в заказе и возвращает ярлык в PDF‑файле.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: generateOrderLabel
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор грузоместа
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор коробки
        in: path
        name: boxId
        required: true
        schema:
          format: int64
          type: integer
      - description: "Настройка размещения ярлыков на странице. Если параметра нет\
          , возвращается PDF с ярлыками формата A6."
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/PageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками на отдельное грузовое место. Файл содержит
            одну страницу с ярлыком.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Ярлык‑наклейка на отдельное грузовое место в заказе
      tags:
      - order-labels
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels:
    get:
      description: |
        Возвращает PDF-файл с ярлыками, которые нужно наклеить на посылки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).

        На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: generateOrderLabels
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: "Настройка размещения ярлыков на странице. Если параметра нет\
          , возвращается PDF с ярлыками формата A6."
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/PageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками на все грузовые места.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Ярлыки‑наклейки на все грузовые места в заказе
      tags:
      - order-labels
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data:
    get:
      description: |
        Возвращает информацию на ярлыках, которые клеятся на грузовые места в заказе.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: getOrderLabelsData
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderLabelsDataResponse'
          description: Информация для печати ярлыков
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация на ярлыках‑наклейках
      tags:
      - order-labels
      - fbs
      - express
  /campaigns/{campaignId}/returns:
    get:
      description: |
        Получает список возвратов и невыкупов.

        Чтобы получить информацию по одному возврату или невыкупу, выполните запрос `GET /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}`.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturns
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Идентификаторы заказов — для фильтрации результатов.

          Несколько идентификаторов перечисляются через запятую без пробела.
        in: query
        name: orderIds
        required: false
        schema:
          items:
            example: 123543
            format: int64
            type: integer
          type: array
      - description: |
          Статусы возвратов или невыкупов — для фильтрации результатов.

          Возможные значения:

          * CREATED — возврат создан.

          * RECEIVED — принят у покупателя.

          * IN_TRANSIT — возврат в пути.

          * READY_FOR_PICKUP — возврат готов к выдаче магазину.

          * PICKED — возврат выдан магазину.

          * LOST — возврат утерян при транспортировке.

          * CANCELLED — возврат отменен.

          * EXPIRED — возврат просрочен, покупатель не передал товар.

          * FULFILMENT_RECEIVED — возврат принят на складе Маркета.

          * PREPARED_FOR_UTILIZATION — возврат передан в утилизацию.

          * UTILIZED — возврат утилизирован.

          Несколько статусов перечисляются через запятую.
        example: "STARTED_BY_USER,WAITING_FOR_DECISION"
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RefundStatusType'
          type: array
      - description: |
          Тип заказа для фильтрации:

          * RETURN — возврат.

          * UNREDEEMED — невыкуп.

          Если не указывать, в ответе будут и возвраты, и невыкупы.
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ReturnType'
      - description: |
          Начальные дата и время для фильтрации возвратов или невыкупов по дате оформления.

          Формат: ГГГГ-ММ-ДД.
        example: 2022-10-31
        in: query
        name: fromDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечные дата и время для фильтрации возвратов или невыкупов по дате оформления.

          Формат: ГГГГ-ММ-ДД.
        example: 2022-11-30
        in: query
        name: toDate
        required: false
        schema:
          format: date
          type: string
      - deprecated: true
        description: "Дата, с которой интересуют возвраты (устаревшее, будет удале\
          но)"
        example: 2022-10-31
        in: query
        name: from_date
        required: false
        schema:
          format: date
          type: string
      - deprecated: true
        description: "Дата, до которой интересуют возвраты (устаревшее, будет удал\
          ено)"
        example: 2022-11-30
        in: query
        name: to_date
        required: false
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnsResponse'
          description: Постраничные возвраты партнера
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список возвратов и невыкупов
      tags:
      - returns
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}:
    get:
      description: |
        Получает информацию по одному возврату или невыкупу.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturn
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор возврата
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnResponse'
          description: Детали возврата.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о возврате или невыкупе
      tags:
      - returns
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision:
    post:
      description: |
        Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: setReturnDecision
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор возврата
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReturnDecisionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Детали возврата
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Принятие/изменение решения по позиции в возврате
      tags:
      - returns
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit:
    post:
      description: |
        Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: submitReturnDecision
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор возврата
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Статус выполнения операции
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение решения по возвратным позициям
      tags:
      - returns
      - dbs
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application:
    get:
      description: |
        Загружает заявление покупателя на возврат товара.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturnApplication
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор возврата
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Заявление на возврат.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение заявления на возврат
      tags:
      - returns
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}:
    get:
      description: |
        Получает фотографии, которые покупатель приложил к заявлению на возврат товара.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturnPhoto
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор возврата
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор товара в возврате
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
      - description: Хеш ссылки изображения для загрузки
        in: path
        name: imageHash
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Фотография возврата.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение фотографии возврата
      tags:
      - returns
      - fbs
      - dbs
      - express
  /regions:
    get:
      description: |
        Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.

        Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.

        Для методов `GET /regions`, `GET /regions/{regionId}` и `GET /regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**⚙️ Лимит:** 50 000 запросов в час|
        |-|
      operationId: searchRegionsByName
      parameters:
      - description: |
          Название региона.

          Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
          description: Список найденных регионов
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Метод для поиска регионов по их имени
      tags:
      - regions
      - fby
      - fbs
      - dbs
  /regions/{regionId}:
    get:
      description: "Возвращает информацию о регионе. \n\nДля методов `GET /regions`,\
        \ `GET /regions/{regionId}` и `GET /regions/{regionId}/children` действует\
        \ групповое ресурсное ограничение. Ограничение вводится на суммарное колич\
        ество регионов, информация о которых запрошена при помощи этих методов (не\
        \ более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно в\
        ыполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙\
        ️ Лимит:** 50 000 запросов в час|\n|-|\n"
      operationId: searchRegionsById
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: path
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
          description: Найденный регион
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о регионе
      tags:
      - regions
      - fby
      - fbs
      - dbs
  /regions/{regionId}/children:
    get:
      description: "Возвращает информацию о регионах, являющихся дочерними по отно\
        шению к региону, идентификатор которого указан в запросе. \n\nДля методов\
        \ `GET /regions`, `GET /regions/{regionId}` и `GET /regions/{regionId}/children`\
        \ действует групповое ресурсное ограничение. Ограничение вводится на сумма\
        рное количество регионов, информация о которых запрошена при помощи этих м\
        етодов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который в\
        озможно выполнить в течение суток, зависит от суммарного количества регион\
        ов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n"
      operationId: searchRegionChildren
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: path
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionWithChildrenResponse'
          description: "Регионы, являющиеся дочерними к указанному в запросе"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о дочерних регионах
      tags:
      - regions
      - fby
      - fbs
      - dbs
  /campaigns/{campaignId}/shipments/reception-transfer-act:
    get:
      description: "Запрос подтверждает ближайшую отгрузку и возвращает акт приема\
        -передачи в формате PDF. Можно запросить акт в день отгрузки или накануне\
        \ — в зависимости от указанного времени формирования отгрузки в личном каб\
        инете.\n\n{% note warning %}\n\nЕсли ваш магазин подключен к экспресс‑дост\
        авке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подг\
        отавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nВ акт входят\
        \ собранные и готовые к отправке заказы, которые отгружаются в сортировочн\
        ый центр / пункт приема или курьерам Маркета.\n\nПри формировании акта Мар\
        кет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut\
        \ \"Данные, из которых Маркет формирует акт\" %}\n\n| Данные в акте\t | Оп\
        исание  |\n| ----------- | ----------- |\n| Отправитель\t| Название вашего\
        \ юридического лица, указанное в личном кабинете магазина.   |\n| Исполнит\
        ель | Название юридического лица сортировочного центра или службы доставки\
        .  |\n| № отправления в системе заказчика | Ваш идентификатор заказа, кото\
        рый вы указали в ответе на запрос `POST /order/accept` от Маркета.  |\n| №\
        \ отправления в системе исполнителя (субподрядчика) | Идентификатор заказа\
        \ на Маркете, как в выходных данных запроса `GET /campaigns/{campaignId}/orders.`\
        \  |\n| Объявленная ценность  | Общая сумма заказа без учета стоимости дос\
        тавки, как в выходных данных запроса `GET /campaigns/{campaignId}/orders`\
        \ или `GET /campaigns/{campaignId}/orders/{orderId}.`  |\n| Стоимость всех\
        \ товаров в заказе  | Стоимость всех заказанных товаров.  |\n| Вес  | Масс\
        а брутто грузового места (суммарная масса упаковки и содержимого), как в в\
        ыходных данных запроса `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}.`\
        \ |\n| Количество мест  | Количество грузовых мест в заказе, как в выходны\
        х данных запроса `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}.`\
        \ |\n\n{% endcut %}\n\nОстальные поля нужно заполнить самостоятельно в рас\
        печатанном акте.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n"
      operationId: downloadShipmentReceptionTransferAct
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор склада
        example: 123123
        in: query
        name: warehouse_id
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт приема-передачи в формате pdf
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение ближайшей отгрузки и получение акта приема-передачи для
        нее
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}:
    get:
      description: |
        Возвращает информацию об отгрузке по ее идентификатору.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getShipment
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentResponse'
          description: Найденная отгрузка
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации об отгрузке
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info:
    get:
      description: |
        Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getShipmentOrdersInfo
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentOrdersInfoResponse'
          description: Информация по годным/негодным для печати ярлыков заказам в
            отгрузке
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации о ярлыках
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm:
    post:
      description: |
        Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: confirmShipment
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmShipmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение отгрузки
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act:
    get:
      description: |
        {% note alert %}

        Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.

        {% endnote %}

        Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы. Можно запросить акт в день отгрузки или накануне — в зависимости от указанного времени формирования отгрузки в личном кабинете.

        При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:

        {% cut "Данные, из которых Маркет формирует акт" %}

        | Данные в акте  | Описание  |
        | ----------- | ----------- |
        | Дата       | Дата запроса.       |
        | Отправитель       | Название вашего юридического лица, указанное в личном кабинете магазина. |
        | Исполнитель       | Название юридического лица сортировочного центра или службы доставки. |
        | № отправления в системе заказчика       | Ваш идентификатор заказа, который вы указали в ответе на запрос `POST /order/accept` от Маркета. |
        | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса `GET /campaigns/{campaignId}/orders`. |
        | Объявленная ценность | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}`. |
        | Вес       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}`. |
        | Количество мест | Количество грузовых мест в заказе, как в выходных данных запроса `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}`. |

        {% endcut %}

        Остальные поля нужно заполнить самостоятельно в распечатанном акте.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: downloadShipmentAct
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт приема-передачи для отгрузки в формате pdf
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение акта приема-передачи
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act:
    get:
      description: |
        Возвращает фактический акт приема-передачи для заданной отгрузки.

        Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentInboundAct
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт в формате pdf.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение фактического акта приема-передачи
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill:
    get:
      description: |
        Возвращает транспортную накладную для заданной отгрузки.

        Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentTransportationWaybill
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
          description: Транспортная накладная в формате xlsx.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение транспортной накладной
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act:
    get:
      description: |
        Возвращает акт расхождений для заданной отгрузки.
        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentDiscrepancyAct
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
          description: Акт расхождений в формате xlsx.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение акта расхождений
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets:
    put:
      description: "Передает Маркету количество коробов или палет в отгрузке для д\
        оверительной приемки. Подробнее про доверительную приемку написано в [Спра\
        вке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\
        \ \n\nПолучить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET\
        \ campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md).\n\
        |**⚙️ Лимит:** 200 запросов в час|\n|-|\n"
      operationId: setShipmentPalletsCount
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetShipmentPalletsCountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Имеет значение только тип ответа. Если вы получили `ОК`, к\
            оличество упаковок записано."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача количества упаковок в отгрузке
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels:
    get:
      description: "PDF-файл с ярлыками на каждый короб или палету в отгрузке для\
        \ доверительной приемки. Подробнее про доверительную приемку написано в [С\
        правке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\
        \ \n\nРаспечатайте по несколько копий каждого ярлыка: на одну тару нужно н\
        аклеить минимум 2 ярлыка с разных сторон.\n\nКоличество упаковок в отгрузк\
        е задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md).\n\
        |**⚙️ Лимит:** 200 запросов в час|\n|-|\n"
      operationId: downloadShipmentPalletLabels
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Формат страниц PDF-файла с ярлыками:
          * `A4` — по 16 ярлыков на странице.
          * `A8` — по одному ярлыку на странице.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ShipmentPalletLabelPageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками на все упаковки в отгрузке.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Ярлыки на все упаковки в отгрузке
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments:
    put:
      description: |
        Возвращает информацию об отгрузках по заданным параметрам:

        * дате;
        * статусу;
        * идентификаторам заказов.

        Результаты возвращаются постранично.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: searchShipments
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchShipmentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchShipmentsResponse'
          description: Найденные отгрузки
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации об отгрузках
      tags:
      - shipments
      - fbs
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer:
    post:
      description: |
        Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)

        Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.

        {% note warning "Такие переносы снижают индекс качества магазина" %}

        Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)

        {% endnote %}

        Переносить заказы можно, если до формирования отгрузки осталось больше получаса.

        Перенос происходит не мгновенно, а занимает несколько минут.

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: transferOrdersFromShipment
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOrdersFromShipmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Запрос на перенос заказов проверен и принят, и они будут п\
            еренесены спустя несколько минут."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Перенос заказов в следующую отгрузку
      tags:
      - shipments
      - fbs
  /businesses/{businessId}/offer-mappings/delete:
    post:
      description: |
        Удаляет товары из каталога.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: deleteOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersResponse'
          description: "Если удалось удалить не все товары, с ответом 200 вернется\
            \ список тех, что были в запросе, но остались в магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из каталога
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-mappings:
    post:
      description: |
        Возвращает список товаров в каталоге с параметрами каждого товара.

        Можно использовать тремя способами:
        * задать список интересующих SKU;
        * задать фильтр — в этом случае результаты возвращаются постранично;
        * не передавать тело запроса, чтобы получить список всех товаров в каталоге.

        |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: getOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferMappingsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingsResponse'
          description: Информация о товарах в каталоге.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о товарах в каталоге
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-mappings/update:
    post:
      description: |
        Добавляет товары в каталог или редактирует информацию об уже имеющихся товарах.

        Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.

        Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `category`, `pictures`, `vendor`, `description`.

        Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.

        {% note warning "Правила использования SKU" %}

        * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.

        * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

        {% endnote %}

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: updateOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: |
            Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление товаров в каталог и редактирование информации о них
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-mappings/suggestions:
    post:
      description: |
        Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.

        Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточке по предоставленным вами данным.

        **Как пользоваться запросом**

        1. Передайте Маркету список товаров, которые нужно проверить.
        2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией.
        3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`.
        4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.

        {% note info "𝓠 Как определить `marketSku` товара, найденного на Маркете?" %}

        𝓐 Он есть в адресе страницы товара — расположен после `sku=`.

        Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`

        {% endnote %}

        Если в ответе на запрос нет идентификатора карточки для одного из товаров, значит Маркету не удалось подобрать для товара подходящую карточку или карточка товара будет специально создана.

        |**⚙️ Лимит:** 100 000 товаров в час, не более 500 товаров в одном запросе|
        |-|
      operationId: getSuggestedOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingsResponse'
          description: Подобранные карточки на Маркете.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Предварительный просмотр карточек на Маркете, соответствующих ваши\
        м товарам"
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-mappings/archive:
    post:
      description: |
        Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.

        {% note warning "В архив нельзя отправить товар, который хранится на складе Маркета" %}

        Вначале такой товар нужно распродать или вывезти.

        {% endnote %}

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: addOffersToArchive
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOffersToArchiveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOffersToArchiveResponse'
          description: |
            Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.

            Список успешно добавленных товаров не возвращается.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление товаров в архив
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-mappings/unarchive:
    post:
      description: |
        Восстанавливает товары из архива.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: deleteOffersFromArchive
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersFromArchiveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersFromArchiveResponse'
          description: |
            Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.

            Список успешно восстановленных товаров не возвращается.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Восстановление товаров из архива
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offer-mapping-entries:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Пожалуйста, пользуйтесь вместо него [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        {% endnote %}

        Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:

        * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.
        * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.

        Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.

        {% note info %}

        Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)
      operationId: getOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор товара в каталоге.
        in: query
        name: offer_id
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          Ваш SKU товара.

          Параметр может быть указан несколько раз, например:

          ```
          ...shop_sku=123&shop_sku=129&shop_sku=141...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: shop_sku
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      - description: Тип маппинга.
        in: query
        name: mapping_kind
        required: false
        schema:
          $ref: '#/components/schemas/OfferMappingKindType'
      - description: |
          Фильтрация по статусу публикации товара:

          * READY — товар прошел модерацию.
          * IN_WORK — товар проходит модерацию.
          * NEED_CONTENT — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.
          * NEED_INFO — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.
          * REJECTED — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
          * SUSPENDED — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
          * OTHER — товар не прошел модерацию по другой причине.

          Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```
          ...status=READY,IN_WORK...
          ...status=READY&status=IN_WORK...
          ```

          В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OfferProcessingStatusType'
          type: array
      - description: |
          Фильтрация по планам поставок товара:

          * ACTIVE — поставки будут.
          * INACTIVE — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.
          * DELISTED — архив: товар закончился на складе, и его поставок больше не будет.

          Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```
          ...availability=INACTIVE,DELISTED...
          ...availability=INACTIVE&availability=DELISTED...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: availability
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OfferAvailabilityStatusType'
          type: array
      - description: |
          Фильтрация по идентификатору категории на Маркете.

          Чтобы узнать идентификатор категории, откройте ее страницу и посмотрите на ее URL. Идентификатор — это число после «...?hid=». Например:

          ##https://market.yandex.ru/catalog--bezmeny/65590/list?hid=13431995##

          Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```
          ...category_id=14727164,14382343...
          ...category_id=14727164&category_id=14382343...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: category_id
        required: false
        schema:
          items:
            type: integer
          type: array
      - description: |
          Фильтрация по бренду товара.

          Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```
          ...vendor=Aqua%20Minerale,Borjomi...
          ...vendor=Aqua%20Minerale&vendor=Borjomi...
          ```

          Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.

          Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).

          В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
        in: query
        name: vendor
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingEntriesResponse'
          description: Информация о товарах в каталоге
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список товаров в каталоге
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offer-mapping-entries/updates:
    post:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Пожалуйста, пользуйтесь вместо него [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        {% endnote %}

        Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.

        Информацию о товарах нужно передать в теле POST-запроса.

        У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:

        * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге.
        * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.

        В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.

        Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через личный кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).

        Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).

        В одном запросе можно добавить не более 500 товаров.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 5 000 товаров в минуту|
        |-|
      operationId: updateOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Статус выполнения операции
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление и редактирование товаров в каталоге
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offer-mapping-entries/suggestions:
    post:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Пожалуйста, пользуйтесь вместо него [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).

        {% endnote %}

        Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.

        Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:

        ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##

        Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.

        Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).

        В одном запросе можно получить не более 500 рекомендаций.

        |**⚙️ Лимит:** 100 000 рекомендаций в час|
        |-|
      operationId: getSuggestedOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesResponse'
          description: Информация о товарах в каталоге
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Рекомендованные карточки для ваших товаров
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-prices/updates:
    post:
      description: |
        Устанавливает [базовые цены](*rule).

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: updateBusinessPrices
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Маркет принял информацию о новых ценах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Установка цен
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/offer-prices/updates:
    post:
      description: |
        Устанавливает цены на товары в магазине.

        {% note warning "Метод только для отдельных магазинов" %}

        Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.

        Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).

        {% endnote %}

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: количество товаров на витрине / 200, но не менее 1000 товаров в минуту)
      operationId: updatePrices
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Маркет принял информацию о новых ценах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Установка цен на товары в конкретном магазине
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/offer-prices:
    get:
      description: |
        Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.

        {% note info %}

        Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.

        {% endnote %}

        Способы установки цен описаны [в Справке для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).

        |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки|
        |-|
      operationId: getPrices
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: Фильтр по нахождению в архиве
        in: query
        name: archived
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesResponse'
          description: Ответ на запрос списка цен.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список цен
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
    post:
      description: |
        Возвращает список установленных вами цен на заданные товары в заданном магазине.

        {% note warning "Метод только для отдельных магазинов" %}

        Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.

        Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)
      operationId: getPricesByOfferIds
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPricesByOfferIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesByOfferIdsResponse'
          description: Список товаров с установленными для заданного магазина ценами.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Просмотр установленных в магазине цен
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/offer-prices/suggestions:
    post:
      description: |
        Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.

        Товары, для которых нужно получить цены, передаются в теле POST-запроса.

        Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.

        Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.

        Установить цены на товары можно с помощью запроса `POST /campaigns/{campaignId}/offer-prices/updates` или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.

        В одном запросе можно получить цены не более чем для 1000 товаров.

        Подробно об автоматическом управлении ценами рассказано [в Справке для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).

        |**⚙️ Лимит:** 100 000 товаров в час|
        |-|
      operationId: getSuggestedPrices
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestPricesResponse'
          description: Список цен для продвижения на Маркете
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Цены для продвижения товаров
      tags:
      - prices
      - fby
      - fbs
      - express
  /businesses/{businessId}/price-quarantine:
    post:
      description: |
        Возвращает список товаров, которые находятся на карантине по _основной цене_. _Основная цена_ задается в каталоге и действует во всех магазинах кабинета.

        Проверьте цену каждого из товаров, попавших в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).

        {% note info "𝓠 Что такое карантин?" %}

        𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getBusinessQuarantineOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
          description: Список товаров в карантине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Список товаров, находящихся в карантине (основная цена)"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/price-quarantine/confirm:
    post:
      description: |
        Подтверждает основную цену товаров, попавших в карантин.

        Основная цена задается в каталоге и действует во всех магазинах кабинета.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, попавших в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: confirmBusinessPrices
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что цены подтверждены."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Подтверждение цены товара, попавшего в карантин (основная цена)"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/price-quarantine:
    post:
      description: |
        Возвращает список товаров, которые находятся на карантине по цене, установленной в заданном магазине.

        Проверьте цену каждого из товаров, попавших в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).

        {% note info "𝓠 Что такое карантин?" %}

        𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getCampaignQuarantineOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
          description: Список товаров в карантине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Список товаров, находящихся в карантине (цена в магазине)"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/price-quarantine/confirm:
    post:
      description: |
        Подтверждает в заданном магазине цену товаров, попавших в карантин.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, попавших в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: confirmCampaignPrices
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что цены подтверждены."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Подтверждение цены товара, попавшего в карантин (цена в магазине)"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/hidden-offers:
    delete:
      description: |
        Возобновляет показ скрытых вами товаров магазина на Маркете.

        В одном запросе можно возобновить показы не более чем 500 товаров.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 1000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: deleteHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHiddenOffersRequest'
        description: Запрос на возобновление показа оферов.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Показ товаров возобновлен.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Возобновление показа товаров
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
    get:
      description: |
        Возвращает для заданного магазина список скрытых вами товаров.

        В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор скрытого предложения.
        in: query
        name: offer_id
        schema:
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      - deprecated: true
        description: "{% note alert \"Это поле устарело\" %}\n\nНе используйте его\
          \ — это может привести к ошибкам.\n\n{% endnote %} \n\nИдентификатор пра\
          йс-листа.\n"
        in: query
        name: feed_id
        schema:
          items:
            $ref: '#/components/schemas/FeedId'
          type: array
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров, которые нужно не отображать в выходных данных, начиная с первого.

          Скрытые товары выводятся отсортированными в лексикографическом порядке по возрастанию значений marketSku.

          Используется вместе с параметром `limit`.

          Если задан `offset`, параметры `page_number` и `page_size` игнорируются.

          `offset` игнорируется, если задан `page_token`.
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHiddenOffersResponse'
          description: Информация о скрытых вами товарах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о скрытых вами товарах
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
    post:
      description: |
        Скрывает товары магазина на Маркете на 48 часов. В теле запроса можно передать от одного до 500 товаров.

        В одном запросе можно скрыть или изменить параметры скрытия не более чем 500 товаров.

        Количество товаров магазина считается по данным за последние семь дней (не включая сегодня).

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 1000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: addHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHiddenOffersRequest'
        description: Запрос на скрытие оферов.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Настройки скрытия получены и скоро вступят в силу.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Скрытие товаров и настройки скрытия
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
  /campaigns/{campaignId}/warehouses/{warehouseId}/stocks/actual:
    get:
      description: |
        {% note warning %}

        29 мая 2023 года — последний день, когда на Маркете можно оформить и обработать заказ с внешней площадки.

        С 30 мая работать с такими заказами станет нельзя.

        {% endnote %}

        Запрашивает актуальную информацию по остаткам товаров на складе Маркета.

        |**⚙️ Лимит:** ```(количество товаров на витрине) / 200```, но не менее 1000 товаров в минуту|
        |-|
      operationId: getActualStocks
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор склада.
        in: path
        name: warehouseId
        required: true
        schema:
          format: int64
          type: integer
      - description: Фильтр по SKU
        in: query
        name: sku
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActualStocksResponse'
          description: Остатки товаров на складе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Запрос информации об остатках
      tags:
      - stocks
      - fby
  /campaigns/{campaignId}/offers/stocks:
    post:
      description: |
        Возвращает данные об остатках товаров (для моделей FBY, FBS и Экспресс) и об [оборачиваемости](*turnover) товаров (для модели FBY).

        {% note info "По умолчанию данные по оборачивамости не возращаются" %}

        Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.

        {% endnote %}

        |**⚙️ Лимит:** ```(количество товаров на витрине) / 200```, но не менее 1000 товаров в минуту|
        |-|

        [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке https://yandex.ru/support/marketplace/analytics/turnover.html.)
      operationId: getStocks
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWarehouseStocksRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehouseStocksResponse'
          description: |
            Остатки товаров на складах.

            В ответ попадают только товары с ненулевыми остатками.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об остатках и оборачиваемости
      tags:
      - stocks
      - fby
      - fbs
    put:
      description: |
        Передает данные об остатках товаров на витрине.

        Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: количество товаров в каталоге / 200, но не более 500 товаров в минуту)
      operationId: updateStocks
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStocksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача информации об остатках
      tags:
      - stocks
      - fbs
      - dbs
      - express
  /delivery/services:
    get:
      description: |
        Возвращает справочник служб доставки: идентификаторы и наименования.
        |**⚙️ Лимит:** 5 000 запросов в час|
        |-|
      operationId: getDeliveryServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliveryServicesResponse'
          description: Информация о службах доставки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Справочник служб доставки
      tags:
      - delivery-services
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/stats/orders:
    post:
      description: |
        Возвращает подробный отчет по заказам на Маркете, в которых есть ваши товары. С помощью отчета вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.

        В одном запросе можно получить отчет не более чем по 200 заказам.

        |**⚙️ Лимит:** 1 000 000 запросов в час|
        |-|
      operationId: getOrdersStats
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrdersStatsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersStatsResponse'
          description: Отчёт по заказам
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по заказам
      tags:
      - orders-stats
      - fby
      - fbs
      - dbs
      - express
  /campaigns/{campaignId}/stats/skus:
    post:
      description: |
        Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.

        Количество товаров, по которым можно получить отчет с помощью запроса, ограничено. В одном запросе может быть не более 500 товаров.

        |**⚙️ Лимит:** [по правилам](*rule)|
        |-|

        [//]: <> (rule: 50 000 товаров в сутки, если на витрине меньше 10 000 товаров. В 5 раз больше количества ваших товаров, но не более 2 000 000 в сутки, если товаров от 10 000 до 400 000. До 2 000 000 товаров в сутки, если товаров больше 400 000.)
      operationId: getGoodsStats
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsStatsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsStatsResponse'
          description: Отчёт по товарам.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по товарам
      tags:
      - goods-stats
      - fby
      - fbs
      - express
      - dbs
  /reports/info/{reportId}:
    get:
      description: |
        Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.

        Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getReportInfo
      parameters:
      - description: |
          Идентификатор отчета, который вы получили после запуска генерации.
        in: path
        name: reportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportInfoResponse'
          description: |
            Статус генерации отчета и ссылка, если она уже есть.

            {% note tip %}

            Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.

            {% endnote %}

             
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Статус генерации и скачивание готовых отчетов
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
  /reports/united-netting/generate:
    post:
      description: |
        Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        Тип отчета зависит от того, какие поля заполнены в запросе:

        |Тип отчета           |Какие поля нужны                   |
        |---------------------|-----------------------------------|
        |О платежах за период |`dateTimeFrom` и `dateTimeTo`      |
        |О платежном поручении|`bankOrderId` и `bankOrderDateTime`|

        Заказать отчеты обоих типов одним запросом нельзя.

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedNettingReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedNettingReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по платежам
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
  /reports/united-marketplace-services/generate:
    post:
      description: |
        Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)

        Тип отчета зависит от того, какие поля заполнены в запросе:

        |Тип отчета               |Какие поля нужны             |
        |-------------------------|-----------------------------|
        |По дате начисления услуги|`dateTimeFrom` и `dateTimeTo`|
        |По дате формирования акта|`year` и `month`             |

        Заказать отчеты обоих типов одним запросом нельзя.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedMarketplaceServicesReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedMarketplaceServicesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по стоимости услуг
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
  /reports/goods-realization/generate:
    post:
      description: |
        Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#documents__sales-report)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsRealizationReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsRealizationReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по реализации
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
  /reports/prices/generate:
    post:
      description: |
        Запускает генерацию **отчета «Цены на рынке»**.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generatePricesReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePricesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет «Цены на рынке»
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
  /reports/stocks-on-warehouses/generate:
    post:
      description: |
        Запускает генерацию **отчета по остаткам на складах**.

        Отчет для FBY содержит данные об остатках на складах Маркета. Такой отчет поддерживает фильтры.

        Отчет для FBS содержит данные об остатках на соответствующем складе магазина и всегда выводится целиком.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateStocksOnWarehousesReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStocksOnWarehousesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по остаткам на складах
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
  /reports/goods-movement/generate:
    post:
      description: |
        Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#documents__flow)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsMovementReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsMovementReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по движению товаров
      tags:
      - reports
      - fby
  /reports/shows-sales/generate:
    post:
      description: |
        Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 10 запросов в час|
        |-|
      operationId: generateShowsSalesReport
      parameters:
      - description: Формат отчета. Пока отчеты доступны только в одном формате —
          они предоставляются в виде электронной таблицы.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShowsSalesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет «Аналитика продаж»
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
  /campaigns/{campaignId}/outlets:
    get:
      description: |
        Возвращает список точек продаж магазина.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutlets
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Идентификатор региона.
          Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов.
          Идентификатор региона можно получить c помощью метода `GET /regions`.
        in: query
        name: region_id
        required: false
        schema:
          format: int64
          type: integer
      - description: "Идентификатор точки продаж, присвоенный магазином."
        in: query
        name: shop_outlet_code
        required: false
        schema:
          type: string
      - deprecated: true
        description: |
          {% note alert %}

          Параметр устарел и не рекомендуется к использованию. Идентификатор региона укажите в параметре `region_id`.

          {% endnote %}
        in: query
        name: regionId
        required: false
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletsResponse'
          description: Информация о точках продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о точках продаж
      tags:
      - outlets
      - dbs
    post:
      description: |
        Создает точку продаж магазина на Маркете.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: createOutlet
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutletResponse'
          description: Информация о созданной точке продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Создание точки продаж
      tags:
      - outlets
      - dbs
  /campaigns/{campaignId}/outlets/{outletId}:
    delete:
      description: |
        Удаляет точку продаж магазина на Маркете.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: deleteOutlet
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор точки продаж
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление точки продаж
      tags:
      - outlets
      - dbs
    get:
      description: |
        Возвращает информацию о точках продаж магазина.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutlet
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор точки продаж
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletResponse'
          description: Информация о точке продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о точке продаж
      tags:
      - outlets
      - dbs
    put:
      description: |
        Изменяет информацию о точке продаж магазина на Маркете.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOutlet
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор точки продаж
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение информации о точке продаж
      tags:
      - outlets
      - dbs
  /campaigns/{campaignId}/outlets/licenses:
    delete:
      description: |
        Удаляет информацию о лицензиях для точек продаж.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: deleteOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Список идентификаторов лицензий.
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление лицензий для точек продаж
      tags:
      - outlet-licenses
      - dbs
    get:
      description: |
        Возвращает информацию о лицензиях для точек продаж.

        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.
          В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.
        in: query
        name: outletIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      - description: Список идентификаторов лицензий.
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletLicensesResponse'
          description: Найденная отгрузка
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о лицензиях для точек продаж
      tags:
      - outlet-licenses
      - dbs
    post:
      description: |
        Передает информацию о новых и существующих лицензиях для точек продаж.
        Поддерживаются только лицензии на розничную продажу алкоголя. Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе.
        Информация о лицензиях проходит проверку.
        В течение суток этим и другими запросами о точках продаж, кроме запроса `GET /delivery/services`, можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutletLicenseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Создание и изменение лицензий для точек продаж
      tags:
      - outlet-licenses
      - dbs
  /campaigns/{campaignId}/feedback/updates:
    get:
      description: |
        Возвращает новые и обновленные отзывы о магазине на Маркете.

        Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getFeedbackAndCommentUpdates
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Начальная дата обновления отзывов.

          Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.

          Формат даты: `ГГГГ-ММ-ДД`.
        in: query
        name: from_date
        required: false
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedbackListResponse'
          description: Список отзывов для магазина.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Новые и обновленные отзывы о магазине
      tags:
      - feedbacks
      - dbs
  /campaigns/{campaignId}/offers:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.

        Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.

        В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.

        {% note info %}

        Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.

        В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.

        {% endnote %}

        {% note info %}

        Количество предложений считается по данным за последние семь дней (не включая сегодня).

        Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)
      operationId: getOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Поисковый запрос.

          Поддерживается язык запросов.

          Значение по умолчанию: все предложения магазина, размещенные на Маркете.
        in: query
        name: query
        required: false
        schema:
          type: string
      - description: Идентификатор прайс-листа.
        in: query
        name: feedId
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор категории предложения, указанный магазином в прайс-листе.

          Параметр выводится только для предложений, у которых указана категория в прайс-листе.

          Параметр доступен начиная с версии 2.0 партнерского API.
        in: query
        name: shopCategoryId
        required: false
        schema:
          type: string
      - description: |
          Валюта, в которой указана цена предложения.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Фильтр по признаку соотнесения предложения и карточки модели.

          Возможные значения:

          * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.

          * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей).
        in: query
        name: matched
        required: false
        schema:
          type: boolean
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffersResponse'
          description: Предложения магазина
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Предложения магазина
      tags:
      - offers
      - dbs
    post:
      description: |
        Возвращает список товаров, размещенных в заданном магазине. Для каждого товара указываются параметры размещения.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignOffersResponse'
          description: "Список товаров, размещенных в заданном магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Список товаров, размещенных в заданном магазине, с параметрами раз\
        мещения"
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offers/update:
    post:
      description: |
        Изменяет параметры размещения товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: updateCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что новые параметры получены Маркето\
            м и скоро вступят в силу."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Настройка размещения товаров в магазине
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offers/delete:
    post:
      description: |
        Удаляет заданные товары из заданного магазина.

        {% note warning "Запрос удаляет товары именно из конкретного магазина" %}

        На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.

        {% endnote %}

        Товар не получится удалить, если он хранится на складах Маркета.

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: deleteCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCampaignOffersResponse'
          description: "Если удалось удалить не все товары, с ответом 200 вернется\
            \ список тех, что были в запросе, но остались в магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из ассортимента магазина
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/offers/all:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.

        В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.

        {% note info %}

        Количество предложений считается по данным за последние семь дней (не включая сегодня).

        Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)
      operationId: getAllOffers
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: query
        name: feedId
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          Номер сегмента с результатами.

          Значение по умолчанию: `0`.

          {% note info %}

          Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.

          {% endnote %}

          {% note alert %}

          Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.

          {% endnote %}
        in: query
        name: chunk
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllOffersResponse'
          description: Предложения магазина
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Все предложения магазина
      tags:
      - offers
      - dbs
  /businesses/{businessId}/offers/recommendations:
    post:
      description: |
        Метод возвращает рекомендации нескольких типов.

        **1. Рекомендованные цены для участия в софинансировании скидок.**

        Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

        **2. Оценка привлекательности цен на витрине.**

        Привлекательность влияент на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getOfferRecommendations
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferRecommendationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferRecommendationsResponse'
          description: Список товаров с рекомендациями.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Рекомендации Маркета, касающиеся цен"
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
  /campaigns/{campaignId}/feeds/{feedId}:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getFeed
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: path
        name: feedId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedResponse'
          description: Информация о прайс-листе
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о прайс-листе
      tags:
      - feeds
      - dbs
  /campaigns/{campaignId}/feeds:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов.
        |**⚙️ Лимит:** 1000 запросов в час|
        |-|
      operationId: getFeeds
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedsResponse'
          description: Список прайс-листов
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список прайс-листов магазина
      tags:
      - feeds
      - dbs
  /campaigns/{campaignId}/feeds/{feedId}/index-logs:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.

        Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getFeedIndexLogs
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: path
        name: feedId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

          Значение по умолчанию: последние восемь дней со времени отправки запроса.
        in: query
        name: published_time_from
        required: false
        schema:
          format: date-time
          type: string
      - description: |
          Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.

          Значение по умолчанию: дата и время отправки запроса.

          {% note info %}

          Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.

          {% endnote %}
        in: query
        name: published_time_to
        required: false
        schema:
          format: date-time
          type: string
      - description: |
          Статус индексации и проверки прайс-листа на соответствие техническим требованиям.

          Возможные значения:
          * `ERROR` — произошли ошибки.
          * `OK` — обработан без ошибок.
          * `WARNING` — наблюдались некритичные проблемы.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/FeedIndexLogsStatusType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedIndexLogsResponse'
          description: Отчет по индексации прайс-листа.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по индексации прайс-листа
      tags:
      - feeds
      - dbs
  /campaigns/{campaignId}/feeds/{feedId}/params:
    post:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Позволяет магазину изменить параметры прайс-листа.

        Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).

        Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).

        |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|
        |-|
      operationId: setFeedParams
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: path
        name: feedId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFeedParamsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Статус выполнения операции
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение параметров прайс-листа
      tags:
      - feeds
      - dbs
  /campaigns/{campaignId}/feeds/{feedId}/refresh:
    post:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе.
        1. Магазин обновляет прайс-лист, ссылку на который он указал в личном кабинете.
        2. Магазин отправляет Маркету запрос методом `POST /campaigns/{campaignId}/feeds/{feedId}/refresh`.
        3. Маркет начинает обновление данных магазина на сервисе.

        {% note alert %}

        Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.

        {% endnote %}

        |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|
        |-|
      operationId: refreshFeed
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: path
        name: feedId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Сообщить, что прайс-лист обновился"
      tags:
      - feeds
      - dbs
  /campaigns/{campaignId}/feeds/{feedId}/categories:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Возвращает список категорий предложений из прайс-листа, размещенного на Маркете для заданного магазина. Информация о категориях для отключенных прайс-листов не предоставляется.

        В ответе на запрос для каждой категории возвращается ее название, идентификатор и идентификатор родительской категории. Список сортируется по возрастанию идентификатора категории. Если категорий много, результаты выдаются постранично.

        Для методов `GET /campaigns/{campaignId}/feeds/categories` и `GET /campaigns/{campaignId}/feeds/{feedId}/categories` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество категорий, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [не более 50 000 запросов в сутки](*rule)|
        |-|

        [//]: <> (rule: Лимит рассчитывается индивидуально и зависит от количества категорий.)

        {% note info %}

        Количество категорий берется за предыдущий день.

        {% endnote %}
      operationId: getFeedCategories
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор прайс-листа.
        in: path
        name: feedId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedCategoriesResponse'
          description: |
            Возвращается ее название, идентификатор и идентификатор родительской категории. Список сортируется по возрастанию идентификатора категории.
            Если категорий много, результаты выдаются постранично.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Категории прайс-листа
      tags:
      - feed-categories
      - dbs
  /campaigns/{campaignId}/feeds/categories:
    get:
      deprecated: true
      description: |
        {% note alert "Deprecated" %}

        Этот метод устарел. Не используйте его.

        {% endnote %}

        Возвращает список категорий предложений для магазина по всем прайс-листам этого магазина, размещенным на Маркете. Информация о категориях для отключенных прайс-листов не предоставляется.

        В ответе на запрос для каждой категории указывается название, ее идентификатор и идентификатор родительской категории. Список сортируется сначала по возрастанию идентификатора прайс-листа, а затем по возрастанию идентификатора категории. Если категорий много, результаты выдаются постранично.

        Для методов `GET /campaigns/{campaignId}/feeds/categories` и `GET /campaigns/{campaignId}/feeds/{feedId}/categories` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество категорий, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [не более 50 000 запросов в сутки](*rule)|
        |-|

        [//]: <> (rule: Лимит рассчитывается индивидуально и зависит от количества категорий.)


        {% note info %}

        Количество категорий берется за предыдущий день.

        {% endnote %}
      operationId: getCampaignFeedCategories
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignCategoriesResponse'
          description: Категории магазина
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Категории магазина
      tags:
      - feed-categories
      - dbs
  /models:
    get:
      description: |
        Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET /models`, `GET /models/{modelId}` и `POST /models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|
        |-|

        [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)
      operationId: searchModels
      parameters:
      - description: Поисковый запрос по названию модели товара.
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - description: |
          Количество скрытых товаров на странице.

          Используется вместе с параметром page_number.

          `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchModelsResponse'
          description: Информация о моделях.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Поиск модели товара
      tags:
      - models
      - dbs
    post:
      description: |
        Возвращает информацию о моделях товаров.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET /models`, `GET /models/{modelId}` и `POST /models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|
        |-|

        [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)
      operationId: getModels
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
          description: Информация о моделях.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о нескольких моделях
      tags:
      - models
      - dbs
  /models/{modelId}:
    get:
      description: |
        Возвращает информацию о модели товара.

        Для методов `GET /models`, `GET /models/{modelId}` и `POST /models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|
        |-|

        [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)
      operationId: getModel
      parameters:
      - description: Идентификатор модели товара.
        in: path
        name: modelId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
          description: Информация о модели.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о модели
      tags:
      - models
      - dbs
  /models/offers:
    post:
      description: |
        Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.

        В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.

        Для методов `GET /models/{modelId}/offers` и `POST /models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|
        |-|

        [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)
      operationId: getModelsOffers
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Направление сортировки по цене.

          Возможные значения:
          * `ASC` — сортировка по возрастанию.
          * `DESC` — сортировка по убыванию.

          Значение по умолчанию: предложения выводятся в произвольном порядке.
        in: query
        name: orderByPrice
        required: false
        schema:
          $ref: '#/components/schemas/SortOrderType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
          description: Список предложений для моделей.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список предложений для нескольких моделей
      tags:
      - models
      - dbs
  /models/{modelId}/offers:
    get:
      description: |
        Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.

        Для методов `GET /models/{modelId}/offers` и `POST /models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|
        |-|

        [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)
      operationId: getModelOffers
      parameters:
      - description: Идентификатор модели товара.
        in: path
        name: modelId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса `GET /regions`.
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Направление сортировки по цене.

          Возможные значения:
          * `ASC` — сортировка по возрастанию.
          * `DESC` — сортировка по убыванию.

          Значение по умолчанию: предложения выводятся в произвольном порядке.
        in: query
        name: orderByPrice
        required: false
        schema:
          $ref: '#/components/schemas/SortOrderType'
      - description: |
          ModelPageCount
        in: query
        name: count
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      - description: |
          Номер страницы результатов.

          Значение по умолчанию: 1.

          Используется вместе с параметром page_size.

          `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
          description: Список предложений для модели.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список предложений для модели
      tags:
      - models
      - dbs
  /businesses/{businessId}/bids:
    put:
      description: |
        Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.

        {% cut "Как в кабинете выглядит кампания, созданная через API" %}

        ![](../../_images/api-boost.png)

        {% endcut %}

        При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).

        Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.

        Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.

        Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.

        Внести другие изменения в созданную через API кампанию можно в кабинете:

        * выключить или включить кампанию;
        * изменить ее название;
        * выключить или включить ценовую стратегию.

        Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в поле bid.

        Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).

        {% note info "𝓠 Как посмотреть расходы на буст продаж?" %}

        𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](https://yandex.ru/dev/market/partner-api/doc/ru/reference/stats/getOrdersStats)). Сумма содержится в поле `bidFee`.

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1000 запросов в минуту|
        |-|
      operationId: putBidsForBusiness
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: |
            Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Включение буста продаж и установка ставок
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
  /campaigns/{campaignId}/bids:
    put:
      description: |
        Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.

        При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).

        Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.

        Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в личном кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.

        Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.

        Внести другие изменения в созданную через API кампанию можно в личном кабинете:

        * выключить или включить кампанию;
        * изменить ее название;
        * выключить или включить ценовую стратегию.

        Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в поле bid.

        Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).

        {% note info "𝓠 Как посмотреть расходы на буст продаж?" %}

        𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](https://yandex.ru/dev/market/partner-api/doc/ru/reference/stats/getOrdersStats)). Сумма содержится в поле `bidFee`.

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1000 запросов в минуту|
        |-|
      operationId: putBidsForCampaign
      parameters:
      - description: |
          Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

          Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Включение буста продаж и установка ставок для магазина
      tags:
      - bids
      - dbs
  /businesses/{businessId}/bids/info:
    post:
      description: |
        Возвращает значения ставок для заданных товаров.

        {% note warning "" %}

        В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1000 запросов в минуту|
        |-|
      operationId: getBidsInfoForBusiness
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsInfoRequest'
        description: description
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsInfoResponse'
          description: "Значения ставок для заданных товаров. В ответ попадают тол\
            ько товары, на которые установлены ставки."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об установленных ставках
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
  /businesses/{businessId}/bids/recommendations:
    post:
      description: |
        Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.

        Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.

        Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1000 запросов в минуту|
        |-|
      operationId: getBidsRecommendations
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsRecommendationsRequest'
        description: description.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsRecommendationsResponse'
          description: Рекомендованные ставки для заданных товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Рекомендованные ставки для заданных товаров
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
  /businesses/{businessId}/warehouses:
    get:
      description: |
        Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)

        Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getWarehouses
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehousesResponse'
          description: Список складов и групп складов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список складов и групп складов
      tags:
      - warehouses
      - fbs
      - dbs
      - express
  /warehouses:
    get:
      description: |
        Возвращает список складов Маркета (FBY) с их идентификаторами.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getFulfillmentWarehouses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFulfillmentWarehousesResponse'
          description: Список складов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Идентификаторы складов Маркета (FBY)
      tags:
      - warehouses
      - fby
  /category/{categoryId}/parameters:
    post:
      description: |
        Возвращает список характеристик с допустимыми значениями для заданной категории.

        |**⚙️ Лимит:** 50 категорий в минуту |
        |-|
      operationId: getCategoryContentParameters
      parameters:
      - description: |
          Идентификатор категории на Маркете.

          Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST /businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md).
        in: path
        name: categoryId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoryContentParametersResponse'
          description: Список характеристик товаров из заданной категории.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Списки характеристик товаров по категориям
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-cards:
    post:
      description: |
        Возвращает сведения о состоянии контента для заданных товаров:

        * создана ли карточка товара и в каком она статусе;
        * заполненность карточки в процентах;
        * есть ли ошибки или предупреждения, связанные с контентом;
        * рекомендации по заполнению карточки.

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге * 25)
      operationId: getOfferCardsContentStatus
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается самая старая страница.

          Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество товаров на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferCardsContentStatusRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferCardsContentStatusResponse'
          description: Информация о карточках указанных товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации о заполненности карточек
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
  /businesses/{businessId}/offer-cards/update:
    post:
      description: |
        Редактирует характеристики товара, которые специфичны для категории, к которой он относится.

        {% note warning "Здесь только то, что относится к конкретной категории" %}

        Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        {% endnote %}

        Всегда передавайте список характеристик и значений целиком, даже если нужно изменить всего одну из них. Передача отсутствующего значения стирает значение, сохраненное ранее.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 5000 товаров в минуту, не более 100 товаров в одном запросе|
        |-|
      operationId: updateOfferContent
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferContentResponse'
          description: |
            Запрос выполнен корректно, данные обработаны.

            {% note warning "Ответ 200 сам по себе не значит, что переданные значения корректны" %}

            Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.

            Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.

            {% endnote %}

            Если в `status` вернулось `ERROR`, убедитесь, что:

            * все обязательные характеристики заполнены;
            * характеристики действительно существуют в указанных категориях;
            * значения соответствуют характеристикам;
            * ваши собственные значения имеют нужный тип данных.

            Найти проблемы помогут поля `errors` и `warnings`.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Редактирование категорийных характеристик товара
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
components:
  parameters:
    PageNum:
      description: |
        Номер страницы результатов.

        Значение по умолчанию: 1.

        Используется вместе с параметром page_size.

        `page_number` игнорируется, если задан `page_token`, `limit` или `offset`.
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int32
        type: integer
    PageSize:
      description: |
        Количество скрытых товаров на странице.

        Используется вместе с параметром page_number.

        `page_size` игнорируется, если задан `page_token`, `limit` или `offset`.
      in: query
      name: pageSize
      required: false
      schema:
        format: int32
        type: integer
    CampaignId:
      description: |
        Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.

        Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

        ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
      in: path
      name: campaignId
      required: true
      schema:
        format: int64
        type: integer
    Login:
      description: Логин пользователя.
      in: path
      name: login
      required: true
      schema:
        type: string
    OrderId:
      description: Идентификатор заказа.
      in: path
      name: orderId
      required: true
      schema:
        format: int64
        type: integer
    GetOrdersStatus:
      description: |
        Статус заказа:

        * `CANCELLED` — заказ отменен.

        * `DELIVERED` — заказ получен покупателем.

        * `DELIVERY` — заказ передан в службу доставки.

        * `PICKUP` — заказ доставлен в пункт самовывоза.

        * `PROCESSING` — заказ находится в обработке.

        * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      in: query
      name: status
      required: false
      schema:
        $ref: '#/components/schemas/OrderStatusType'
    GetOrdersSubstatus:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        Возможные значения для заказа в статусе `PROCESSING`:

        * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
        * `READY_TO_SHIP` — заказ собран и готов к отправке.
        * `SHIPPED` — заказ передан службе доставки.

        Возможные значения для заказа в статусе `CANCELLED`:

        * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.

        * `PROCESSING_EXPIRED` — значение более не используется.

        * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

        * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

        * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.

        * `SHOP_FAILED` — магазин не может выполнить заказ.

        * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

        * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

        * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

        * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

        * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

        * `USER_UNREACHABLE` — не удалось связаться с покупателем.
        * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.
        * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      in: query
      name: substatus
      required: false
      schema:
        $ref: '#/components/schemas/OrderSubstatusType'
    GetOrdersFromDate:
      description: |
        Начальная дата для фильтрации заказов по дате оформления.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.

        Значение по умолчанию: 30 дней назад от текущей даты.
      in: query
      name: fromDate
      required: false
      schema:
        format: date
        type: string
    GetOrdersToDate:
      description: |
        Конечная дата для фильтрации заказов по дате оформления.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.

        Значение по умолчанию: текущая дата.
      in: query
      name: toDate
      required: false
      schema:
        format: date
        type: string
    GetOrdersSupplierShipmentDateFrom:
      description: |
        Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      in: query
      name: supplierShipmentDateFrom
      required: false
      schema:
        format: date
        type: string
    GetOrdersSupplierShipmentDateTo:
      description: |
        Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.
      in: query
      name: supplierShipmentDateTo
      required: false
      schema:
        format: date
        type: string
    GetOrdersUpdatedAtFrom:
      description: |
        Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      in: query
      name: updatedAtFrom
      required: false
      schema:
        format: date-time
        type: string
    GetOrdersUpdatedAtTo:
      description: |
        Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.
      in: query
      name: updatedAtTo
      required: false
      schema:
        format: date-time
        type: string
    GetOrdersDispatchType:
      description: Способ отгрузки
      in: query
      name: dispatchType
      required: false
      schema:
        $ref: '#/components/schemas/OrderDeliveryDispatchType'
    GetOrdersFake:
      description: |
        Фильтрация заказов по типам:

        * `false` — заказ пользователя.

        * `true` — тестовый заказ Маркета.
      in: query
      name: fake
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersHasCis:
      description: |
        Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации из системы «Честный ЗНАК»:

        * `true` — да;

        * `false` — нет.

        Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
      in: query
      name: hasCis
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersOnlyWaitingForCancellationApprove:
      description: |
        Фильтрация заказов по наличию запросов покупателей на отмену:

        * `true` — возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить. Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).
      in: query
      name: onlyWaitingForCancellationApprove
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersOnlyEstimatedDelivery:
      description: |
        Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:

        * `true` — возвращаются только заказы с неподтвержденной датой доставки.
        * `false` — фильтрация не применяется.
      in: query
      name: onlyEstimatedDelivery
      required: false
      schema:
        default: false
        type: boolean
    ShipmentId:
      description: |
        Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        type: integer
    generateOrderLabel_ShipmentId:
      description: Идентификатор грузоместа
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        type: integer
    BoxId:
      description: Идентификатор коробки
      in: path
      name: boxId
      required: true
      schema:
        format: int64
        type: integer
    PageFormat:
      description: "Настройка размещения ярлыков на странице. Если параметра нет,\
        \ возвращается PDF с ярлыками формата A6."
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/PageFormatType'
    PageToken:
      description: |
        Идентификатор страницы c результатами.

        Если параметр не указан, возвращается самая старая страница.

        Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

        Если задан `page_token`, параметры `offset`, `page_number` и `page_size` игнорируются.
      example: eyBuZXh0SWQ6IDIzNDIgfQ==
      in: query
      name: page_token
      required: false
      schema:
        type: string
    PageLimit:
      description: |
        Количество товаров на одной странице.
      example: 20
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
    ReturnId:
      description: Идентификатор возврата
      in: path
      name: returnId
      required: true
      schema:
        format: int64
        type: integer
    ItemId:
      description: Идентификатор товара в возврате
      in: path
      name: itemId
      required: true
      schema:
        format: int64
        type: integer
    ImageHash:
      description: Хеш ссылки изображения для загрузки
      in: path
      name: imageHash
      required: true
      schema:
        type: string
    RegionName:
      description: |
        Название региона.

        Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.
      in: query
      name: name
      required: true
      schema:
        type: string
    RegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса `GET /regions`.
      in: path
      name: regionId
      required: true
      schema:
        format: int64
        type: integer
    params_ShipmentId:
      description: Идентификатор отгрузки.
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        type: integer
    ShipmentPalletLabelsPageFormat:
      description: |
        Формат страниц PDF-файла с ярлыками:
        * `A4` — по 16 ярлыков на странице.
        * `A8` — по одному ярлыку на странице.
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/ShipmentPalletLabelPageFormatType'
    BusinessId:
      description: |
        Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).

        ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
      in: path
      name: businessId
      required: true
      schema:
        format: int64
        type: integer
    OfferIds:
      description: Идентификатор товара в каталоге.
      in: query
      name: offer_id
      required: false
      schema:
        items:
          type: string
        type: array
    OfferShopSkus:
      description: |
        Ваш SKU товара.

        Параметр может быть указан несколько раз, например:

        ```
        ...shop_sku=123&shop_sku=129&shop_sku=141...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: shop_sku
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ShopSku'
        type: array
    OfferMappingKind:
      description: Тип маппинга.
      in: query
      name: mapping_kind
      required: false
      schema:
        $ref: '#/components/schemas/OfferMappingKindType'
    OfferProcessingStatuses:
      description: |
        Фильтрация по статусу публикации товара:

        * READY — товар прошел модерацию.
        * IN_WORK — товар проходит модерацию.
        * NEED_CONTENT — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.
        * NEED_INFO — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.
        * REJECTED — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * SUSPENDED — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
        * OTHER — товар не прошел модерацию по другой причине.

        Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```
        ...status=READY,IN_WORK...
        ...status=READY&status=IN_WORK...
        ```

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
      in: query
      name: status
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OfferProcessingStatusType'
        type: array
    OfferAvailabilityStatuses:
      description: |
        Фильтрация по планам поставок товара:

        * ACTIVE — поставки будут.
        * INACTIVE — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.
        * DELISTED — архив: товар закончился на складе, и его поставок больше не будет.

        Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```
        ...availability=INACTIVE,DELISTED...
        ...availability=INACTIVE&availability=DELISTED...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: availability
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
        type: array
    CategoryIds:
      description: |
        Фильтрация по идентификатору категории на Маркете.

        Чтобы узнать идентификатор категории, откройте ее страницу и посмотрите на ее URL. Идентификатор — это число после «...?hid=». Например:

        ##https://market.yandex.ru/catalog--bezmeny/65590/list?hid=13431995##

        Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```
        ...category_id=14727164,14382343...
        ...category_id=14727164&category_id=14382343...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: category_id
      required: false
      schema:
        items:
          type: integer
        type: array
    VendorNames:
      description: |
        Фильтрация по бренду товара.

        Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```
        ...vendor=Aqua%20Minerale,Borjomi...
        ...vendor=Aqua%20Minerale&vendor=Borjomi...
        ```

        Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.

        Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
      in: query
      name: vendor
      required: false
      schema:
        items:
          type: string
        type: array
    params_OfferIds:
      description: |
        Идентификатор скрытого предложения.
      in: query
      name: offer_id
      schema:
        items:
          $ref: '#/components/schemas/ShopSku'
        type: array
    FeedIds:
      deprecated: true
      description: "{% note alert \"Это поле устарело\" %}\n\nНе используйте его —\
        \ это может привести к ошибкам.\n\n{% endnote %} \n\nИдентификатор прайс-л\
        иста.\n"
      in: query
      name: feed_id
      schema:
        items:
          $ref: '#/components/schemas/FeedId'
        type: array
    PageOffset:
      description: |
        Количество скрытых товаров, которые нужно не отображать в выходных данных, начиная с первого.

        Скрытые товары выводятся отсортированными в лексикографическом порядке по возрастанию значений marketSku.

        Используется вместе с параметром `limit`.

        Если задан `offset`, параметры `page_number` и `page_size` игнорируются.

        `offset` игнорируется, если задан `page_token`.
      in: query
      name: offset
      required: false
      schema:
        format: int32
        type: integer
    WarehouseId:
      description: Идентификатор склада.
      in: path
      name: warehouseId
      required: true
      schema:
        format: int64
        type: integer
    ReportId:
      description: |
        Идентификатор отчета, который вы получили после запуска генерации.
      in: path
      name: reportId
      required: true
      schema:
        type: string
    ReportFormat:
      description: Формат отчета. Пока отчеты доступны только в одном формате — они
        предоставляются в виде электронной таблицы.
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/ReportFormatType'
    OutletId:
      description: Идентификатор точки продаж
      in: path
      name: outletId
      required: true
      schema:
        format: int64
        type: integer
    OutletIds:
      description: |
        Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.
        В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.
      in: query
      name: outletIds
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
        uniqueItems: true
    LicenseIds:
      description: Список идентификаторов лицензий.
      in: query
      name: ids
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
        uniqueItems: true
    FromDate:
      description: |
        Начальная дата обновления отзывов.

        Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.

        Формат даты: `ГГГГ-ММ-ДД`.
      in: query
      name: from_date
      required: false
      schema:
        format: date
        type: string
    OffersQuery:
      description: |
        Поисковый запрос.

        Поддерживается язык запросов.

        Значение по умолчанию: все предложения магазина, размещенные на Маркете.
      in: query
      name: query
      required: false
      schema:
        type: string
    OffersFeedId:
      description: Идентификатор прайс-листа.
      in: query
      name: feedId
      required: false
      schema:
        format: int64
        type: integer
    OffersShopCategoryId:
      description: |
        Идентификатор категории предложения, указанный магазином в прайс-листе.

        Параметр выводится только для предложений, у которых указана категория в прайс-листе.

        Параметр доступен начиная с версии 2.0 партнерского API.
      in: query
      name: shopCategoryId
      required: false
      schema:
        type: string
    OffersCurrency:
      description: |
        Валюта, в которой указана цена предложения.

        Возможные значения:

        * `BYN` — белорусский рубль.

        * `KZT` — казахстанский тенге.

        * `RUR` — российский рубль.

        * `UAH` — украинская гривна.
      in: query
      name: currency
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyType'
    OffersMatched:
      description: |
        Фильтр по признаку соотнесения предложения и карточки модели.

        Возможные значения:

        * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.

        * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей).
      in: query
      name: matched
      required: false
      schema:
        type: boolean
    OffersChunk:
      description: |
        Номер сегмента с результатами.

        Значение по умолчанию: `0`.

        {% note info %}

        Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.

        {% endnote %}

        {% note alert %}

        Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.

        {% endnote %}
      in: query
      name: chunk
      required: false
      schema:
        format: int32
        type: integer
    FeedId:
      description: Идентификатор прайс-листа.
      in: path
      name: feedId
      required: true
      schema:
        format: int64
        type: integer
    FeedIndexLogsPublishedTimeFrom:
      description: |
        Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

        Значение по умолчанию: последние восемь дней со времени отправки запроса.
      in: query
      name: published_time_from
      required: false
      schema:
        format: date-time
        type: string
    FeedIndexLogsPublishedTimeTo:
      description: |
        Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.

        Значение по умолчанию: дата и время отправки запроса.

        {% note info %}

        Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.

        {% endnote %}
      in: query
      name: published_time_to
      required: false
      schema:
        format: date-time
        type: string
    FeedIndexLogsStatus:
      description: |
        Статус индексации и проверки прайс-листа на соответствие техническим требованиям.

        Возможные значения:
        * `ERROR` — произошли ошибки.
        * `OK` — обработан без ошибок.
        * `WARNING` — наблюдались некритичные проблемы.
      in: query
      name: status
      required: false
      schema:
        $ref: '#/components/schemas/FeedIndexLogsStatusType'
    ModelQuery:
      description: Поисковый запрос по названию модели товара.
      in: query
      name: query
      required: true
      schema:
        type: string
    ModelRegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса `GET /regions`.
      in: query
      name: regionId
      required: true
      schema:
        format: int64
        type: integer
    Currency:
      description: |
        Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

        Возможные значения:

        * `BYN` — белорусский рубль.

        * `KZT` — казахстанский тенге.

        * `RUR` — российский рубль.

        * `UAH` — украинская гривна.

        Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
      in: query
      name: currency
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyType'
    ModelId:
      description: Идентификатор модели товара.
      in: path
      name: modelId
      required: true
      schema:
        format: int64
        type: integer
    OrderByPrice:
      description: |
        Направление сортировки по цене.

        Возможные значения:
        * `ASC` — сортировка по возрастанию.
        * `DESC` — сортировка по убыванию.

        Значение по умолчанию: предложения выводятся в произвольном порядке.
      in: query
      name: orderByPrice
      required: false
      schema:
        $ref: '#/components/schemas/SortOrderType'
    ModelPageCount:
      description: |
        ModelPageCount
      in: query
      name: count
      required: false
      schema:
        default: 10
        format: int32
        type: integer
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiClientDataErrorResponse'
      description: Запрос содержит неправильные данные.
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
      description: В запросе не указаны данные для авторизации.
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiForbiddenErrorResponse'
      description: Данные для авторизации неверны или доступ к ресурсу запрещен.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiNotFoundErrorResponse'
      description: Запрашиваемый ресурс не найден.
    "420":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLimitErrorResponse'
      description: Превышено ограничение на доступ к ресурсу.
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiServerErrorResponse'
      description: Внутренняя ошибка сервера.
    "423":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLockedErrorResponse'
      description: К ресурсу нельзя применить указанный метод.
  schemas:
    GetCampaignsResponse:
      description: Результаты поиска магазинов.
      example:
        campaigns:
        - clientId: 6
          business:
            name: name
            id: 1
          domain: domain
          placementType: null
          id: 0
        - clientId: 6
          business:
            name: name
            id: 1
          domain: domain
          placementType: null
          id: 0
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
      properties:
        campaigns:
          description: Список с информацией по каждому магазину.
          items:
            $ref: '#/components/schemas/CampaignDTO'
          type: array
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      type: object
    ApiClientDataErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Ошибка в данных переданных от клиента.
      type: object
    ApiUnauthorizedErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: В запросе не указаны авторизационные данные.
      type: object
    ApiForbiddenErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: "Неверны авторизационные данные, указанные в запросе, или запре\
        щен доступ к запрашиваемому ресурсу."
      type: object
    ApiNotFoundErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Запрашиваемый ресурс не найден.
      type: object
    ApiLimitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Превышено ограничение на доступ к ресурсу.
      type: object
    ApiServerErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Внутренняя ошибка сервера.
      type: object
    GetCampaignResponse:
      description: Информация о магазине к данным id кампании.
      example:
        campaign:
          clientId: 6
          business:
            name: name
            id: 1
          domain: domain
          placementType: null
          id: 0
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignDTO'
      type: object
    GetCampaignLoginsResponse:
      description: "Ответ на запрос списка логинов, связанных с магазином."
      example:
        logins:
        - logins
        - logins
      properties:
        logins:
          description: Список логинов.
          items:
            description: Логин.
            type: string
          type: array
      type: object
    GetCampaignSettingsResponse:
      description: Ответ на запрос настроек магазина.
      example:
        settings:
          showInPremium: true
          showInContext: true
          localRegion:
            delivery:
              schedule:
                customWorkingDays:
                - 23-09-2022
                - 23-09-2022
                period:
                  fromDate: 23-09-2022
                  toDate: 23-09-2022
                customHolidays:
                - 23-09-2022
                - 23-09-2022
                weeklyHolidays:
                - 1
                - 1
                availableOnHolidays: true
                totalHolidays:
                - 23-09-2022
                - 23-09-2022
            name: name
            id: 6
            type: null
            deliveryOptionsSource: null
          countryRegion: 0
          shopName: shopName
          useOpenStat: true
      properties:
        settings:
          $ref: '#/components/schemas/CampaignSettingsDTO'
      type: object
    GetCampaignRegionResponse:
      description: Ответ на запрос региона магазина.
      example:
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: null
      properties:
        region:
          $ref: '#/components/schemas/RegionDTO'
      type: object
    GetOrderResponse:
      example:
        order:
          notes: notes
          paymentType: null
          expiryDate: 23-09-2022 09:12:41
          total: 1.4658129805029452
          buyerTotalBeforeDiscount: 2.027123023002322
          buyerTotal: 9.301444243932576
          currency: null
          id: 0
          subsidyTotal: 5.637376656633329
          delivery:
            dispatchType: null
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 8.762042012749001
                longitude: 9.018348186070783
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: null
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: null
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 6.683562403749608
            outletStorageLimitDate: 23-09-2022
            eacType: null
            liftPrice: 3.5571952270680973
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: null
            deliveryPartnerType: null
            outletCode: outletCode
          substatus: null
          deliveryTotal: 5.962133916683182
          buyerItemsTotalBeforeDiscount: 3.616076749251911
          creationDate: 23-09-2022 09:12:41
          totalWithSubsidy: 2.3021358869347655
          buyerItemsTotal: 7.061401241503109
          buyer:
            lastName: lastName
            firstName: firstName
            phone: phone
            middleName: middleName
            id: id
            type: null
            email: email
          itemsTotal: 6.027456183070403
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          paymentMethod: null
          fake: true
          taxSystem: null
          cancelRequested: true
          items:
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          status: null
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
      type: object
    OrderStatusType:
      description: |
        Статус заказа:

        * `CANCELLED` — заказ отменен.

        * `DELIVERED` — заказ получен покупателем.

        * `DELIVERY` — заказ передан в службу доставки.

        * `PICKUP` — заказ доставлен в пункт самовывоза.

        * `PROCESSING` — заказ находится в обработке.

        * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      enum:
      - PLACING
      - RESERVED
      - UNPAID
      - PROCESSING
      - DELIVERY
      - PICKUP
      - DELIVERED
      - CANCELLED
      - PENDING
      - REJECTED
      - PARTIALLY_RETURNED
      - RETURNED
      - CANCELLED_WITHOUT_REFUND
      - UNKNOWN
      type: string
    OrderSubstatusType:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        Возможные значения для заказа в статусе `PROCESSING`:

        * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
        * `READY_TO_SHIP` — заказ собран и готов к отправке.

        Возможные значения для заказа в статусе `CANCELLED`:

        * `PROCESSING_EXPIRED` — значение более не используется.

        * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

        * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

        * `SHOP_FAILED` — магазин не может выполнить заказ.

        * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

        * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

        * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

        * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

        * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

        * `USER_UNREACHABLE` — не удалось связаться с покупателем.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      enum:
      - RESERVATION_EXPIRED
      - USER_NOT_PAID
      - USER_UNREACHABLE
      - USER_CHANGED_MIND
      - USER_REFUSED_DELIVERY
      - USER_REFUSED_PRODUCT
      - SHOP_FAILED
      - USER_REFUSED_QUALITY
      - REPLACING_ORDER
      - PROCESSING_EXPIRED
      - PENDING_EXPIRED
      - SHOP_PENDING_CANCELLED
      - PENDING_CANCELLED
      - USER_FRAUD
      - RESERVATION_FAILED
      - USER_PLACED_OTHER_ORDER
      - USER_BOUGHT_CHEAPER
      - MISSING_ITEM
      - BROKEN_ITEM
      - WRONG_ITEM
      - PICKUP_EXPIRED
      - DELIVERY_PROBLEMS
      - LATE_CONTACT
      - CUSTOM
      - DELIVERY_SERVICE_FAILED
      - WAREHOUSE_FAILED_TO_SHIP
      - DELIVERY_SERIVCE_UNDELIVERED
      - DELIVERY_SERVICE_UNDELIVERED
      - PREORDER
      - AWAIT_CONFIRMATION
      - STARTED
      - PACKAGING
      - READY_TO_SHIP
      - SHIPPED
      - ASYNC_PROCESSING
      - USER_REFUSED_TO_PROVIDE_PERSONAL_DATA
      - WAITING_USER_INPUT
      - WAITING_BANK_DECISION
      - BANK_REJECT_CREDIT_OFFER
      - CUSTOMER_REJECT_CREDIT_OFFER
      - CREDIT_OFFER_FAILED
      - AWAIT_DELIVERY_DATES_CONFIRMATION
      - SERVICE_FAULT
      - DELIVERY_SERVICE_RECEIVED
      - USER_RECEIVED
      - WAITING_FOR_STOCKS
      - AS_PART_OF_MULTI_ORDER
      - READY_FOR_LAST_MILE
      - LAST_MILE_STARTED
      - ANTIFRAUD
      - DELIVERY_USER_NOT_RECEIVED
      - DELIVERY_SERVICE_DELIVERED
      - DELIVERED_USER_NOT_RECEIVED
      - USER_WANTED_ANOTHER_PAYMENT_METHOD
      - USER_RECEIVED_TECHNICAL_ERROR
      - USER_FORGOT_TO_USE_BONUS
      - RECEIVED_ON_DISTRIBUTION_CENTER
      - DELIVERY_SERVICE_NOT_RECEIVED
      - DELIVERY_SERVICE_LOST
      - SHIPPED_TO_WRONG_DELIVERY_SERVICE
      - DELIVERED_USER_RECEIVED
      - WAITING_TINKOFF_DECISION
      - COURIER_SEARCH
      - COURIER_FOUND
      - COURIER_IN_TRANSIT_TO_SENDER
      - COURIER_ARRIVED_TO_SENDER
      - COURIER_RECEIVED
      - COURIER_NOT_FOUND
      - COURIER_NOT_DELIVER_ORDER
      - COURIER_RETURNS_ORDER
      - COURIER_RETURNED_ORDER
      - WAITING_USER_DELIVERY_INPUT
      - PICKUP_SERVICE_RECEIVED
      - PICKUP_USER_RECEIVED
      - CANCELLED_COURIER_NOT_FOUND
      - COURIER_NOT_COME_FOR_ORDER
      - DELIVERY_NOT_MANAGED_REGION
      - INCOMPLETE_CONTACT_INFORMATION
      - INCOMPLETE_MULTI_ORDER
      - INAPPROPRIATE_WEIGHT_SIZE
      - TECHNICAL_ERROR
      - SORTING_CENTER_LOST
      - COURIER_SEARCH_NOT_STARTED
      - LOST
      - AWAIT_PAYMENT
      - AWAIT_LAVKA_RESERVATION
      - USER_WANTS_TO_CHANGE_ADDRESS
      - FULL_NOT_RANSOM
      - PRESCRIPTION_MISMATCH
      - DROPOFF_LOST
      - DROPOFF_CLOSED
      - DELIVERY_TO_STORE_STARTED
      - USER_WANTS_TO_CHANGE_DELIVERY_DATE
      - WRONG_ITEM_DELIVERED
      - DAMAGED_BOX
      - AWAIT_DELIVERY_DATES
      - LAST_MILE_COURIER_SEARCH
      - PICKUP_POINT_CLOSED
      - LEGAL_INFO_CHANGED
      - USER_HAS_NO_TIME_TO_PICKUP_ORDER
      - DELIVERY_CUSTOMS_ARRIVED
      - DELIVERY_CUSTOMS_CLEARED
      - FIRST_MILE_DELIVERY_SERVICE_RECEIVED
      - AWAIT_AUTO_DELIVERY_DATES
      - AWAIT_USER_PERSONAL_DATA
      - NO_PERSONAL_DATA_EXPIRED
      - CUSTOMS_PROBLEMS
      - AWAIT_CASHIER
      - WAITING_POSTPAID_BUDGET_RESERVATION
      - AWAIT_SERVICEABLE_CONFIRMATION
      - POSTPAID_BUDGET_RESERVATION_FAILED
      - UNKNOWN
      type: string
    OrderDeliveryDispatchType:
      description: Способ отгрузки.
      enum:
      - UNKNOWN
      - BUYER
      - MARKET_PARTNER_OUTLET
      - MARKET_BRANDED_OUTLET
      - SHOP_OUTLET
      - DROPOFF
      type: string
    GetOrdersResponse:
      description: Модель для ответа API списка информации по заказам.
      example:
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
        orders:
        - notes: notes
          paymentType: null
          expiryDate: 23-09-2022 09:12:41
          total: 1.4658129805029452
          buyerTotalBeforeDiscount: 2.027123023002322
          buyerTotal: 9.301444243932576
          currency: null
          id: 0
          subsidyTotal: 5.637376656633329
          delivery:
            dispatchType: null
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 8.762042012749001
                longitude: 9.018348186070783
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: null
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: null
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 6.683562403749608
            outletStorageLimitDate: 23-09-2022
            eacType: null
            liftPrice: 3.5571952270680973
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: null
            deliveryPartnerType: null
            outletCode: outletCode
          substatus: null
          deliveryTotal: 5.962133916683182
          buyerItemsTotalBeforeDiscount: 3.616076749251911
          creationDate: 23-09-2022 09:12:41
          totalWithSubsidy: 2.3021358869347655
          buyerItemsTotal: 7.061401241503109
          buyer:
            lastName: lastName
            firstName: firstName
            phone: phone
            middleName: middleName
            id: id
            type: null
            email: email
          itemsTotal: 6.027456183070403
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          paymentMethod: null
          fake: true
          taxSystem: null
          cancelRequested: true
          items:
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          status: null
        - notes: notes
          paymentType: null
          expiryDate: 23-09-2022 09:12:41
          total: 1.4658129805029452
          buyerTotalBeforeDiscount: 2.027123023002322
          buyerTotal: 9.301444243932576
          currency: null
          id: 0
          subsidyTotal: 5.637376656633329
          delivery:
            dispatchType: null
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 8.762042012749001
                longitude: 9.018348186070783
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: null
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: null
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 6.683562403749608
            outletStorageLimitDate: 23-09-2022
            eacType: null
            liftPrice: 3.5571952270680973
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: null
            deliveryPartnerType: null
            outletCode: outletCode
          substatus: null
          deliveryTotal: 5.962133916683182
          buyerItemsTotalBeforeDiscount: 3.616076749251911
          creationDate: 23-09-2022 09:12:41
          totalWithSubsidy: 2.3021358869347655
          buyerItemsTotal: 7.061401241503109
          buyer:
            lastName: lastName
            firstName: firstName
            phone: phone
            middleName: middleName
            id: id
            type: null
            email: email
          itemsTotal: 6.027456183070403
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          paymentMethod: null
          fake: true
          taxSystem: null
          cancelRequested: true
          items:
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          status: null
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        orders:
          description: |
            Модель заказа.
          items:
            $ref: '#/components/schemas/OrderDTO'
          type: array
      type: object
    ProvideOrderItemIdentifiersRequest:
      example:
        items:
        - instances:
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          id: 0
        - instances:
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          id: 0
      properties:
        items:
          description: |
            Список позиций, требующих маркировки.
          items:
            $ref: '#/components/schemas/OrderItemInstanceModificationDTO'
          type: array
      required:
      - items
      type: object
    ProvideOrderItemIdentifiersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderItemsModificationResultDTO'
        type: object
      type: object
    UpdateOrderItemRequest:
      description: Запрос на обновление состава заказа.
      example:
        reason: null
        items:
        - instances:
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          count: 0
          id: 0
        - instances:
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            uin: uin
            cis: cis
          count: 0
          id: 0
      properties:
        items:
          description: |
            Список товаров в заказе.

            Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

            Обязательный параметр.
          items:
            $ref: '#/components/schemas/OrderItemModificationDTO'
          type: array
        reason:
          $ref: '#/components/schemas/OrderItemsModificationRequestReasonType'
      required:
      - items
      type: object
    UpdateOrderStatusRequest:
      example:
        order:
          delivery:
            dates:
              realDeliveryDate: 2000-01-23
          substatus: null
          status: null
      properties:
        order:
          $ref: '#/components/schemas/OrderStatusChangeDTO'
      required:
      - order
      type: object
    UpdateOrderStatusResponse:
      description: Информация об изменении статуса заказа.
      example:
        order:
          notes: notes
          paymentType: null
          expiryDate: 23-09-2022 09:12:41
          total: 1.4658129805029452
          buyerTotalBeforeDiscount: 2.027123023002322
          buyerTotal: 9.301444243932576
          currency: null
          id: 0
          subsidyTotal: 5.637376656633329
          delivery:
            dispatchType: null
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 8.762042012749001
                longitude: 9.018348186070783
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: null
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: null
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 2
              - fulfilmentId: fulfilmentId
                id: 2
              id: 1
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 6
              - trackCode: trackCode
                deliveryServiceId: 6
              status: null
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 6.683562403749608
            outletStorageLimitDate: 23-09-2022
            eacType: null
            liftPrice: 3.5571952270680973
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: null
            deliveryPartnerType: null
            outletCode: outletCode
          substatus: null
          deliveryTotal: 5.962133916683182
          buyerItemsTotalBeforeDiscount: 3.616076749251911
          creationDate: 23-09-2022 09:12:41
          totalWithSubsidy: 2.3021358869347655
          buyerItemsTotal: 7.061401241503109
          buyer:
            lastName: lastName
            firstName: firstName
            phone: phone
            middleName: middleName
            id: id
            type: null
            email: email
          itemsTotal: 6.027456183070403
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          paymentMethod: null
          fake: true
          taxSystem: null
          cancelRequested: true
          items:
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          - feedCategoryId: feedCategoryId
            offerName: offerName
            subsidy: 1.1730742509559433
            instances:
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 6.84685269835264
            count: 7
            vat: null
            requiredInstanceTypes:
            - null
            - null
            buyerPriceBeforeDiscount: 1.4894159098541704
            shopSku: shopSku
            feedId: 7
            price: 1.2315135367772556
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 9.369310271410669
              type: null
            - amount: 9.369310271410669
              type: null
            offerId: offerId
            buyerPrice: 1.0246457001441578
            details:
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            - updateDate: 23-09-2022
              itemStatus: null
              itemCount: 9
            id: 4
            promos:
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
            - subsidy: 5.025004791520295
              shopPromoId: shopPromoId
              discount: 4.965218492984954
              marketPromoId: marketPromoId
              type: null
          status: null
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
      type: object
    UpdateOrderStatusesRequest:
      description: Список заказов.
      example:
        orders:
        - substatus: null
          id: 0
          status: null
        - substatus: null
          id: 0
          status: null
        - substatus: null
          id: 0
          status: null
        - substatus: null
          id: 0
          status: null
        - substatus: null
          id: 0
          status: null
      properties:
        orders:
          description: Список заказов.
          items:
            $ref: '#/components/schemas/OrderStateDTO'
          maxItems: 30
          minItems: 1
          type: array
      required:
      - orders
      type: object
    UpdateOrderStatusesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/UpdateOrderStatusesDTO'
        type: object
      type: object
    SetOrderShipmentBoxesRequest:
      allOf:
      - $ref: '#/components/schemas/ParcelDTO'
      type: object
    SetOrderShipmentBoxesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ShipmentBoxesDTO'
        type: object
      type: object
    AcceptOrderCancellationRequest:
      example:
        reason: null
        accepted: true
      properties:
        accepted:
          description: |
            Решение об отмене заказа:

            * `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю.
            * `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов.
          type: boolean
        reason:
          $ref: '#/components/schemas/OrderCancellationReasonType'
      required:
      - accepted
      type: object
    EmptyApiResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      description: Пустой ответ сервера.
      type: object
    ProvideOrderDigitalCodesRequest:
      description: Запрос на передачу ключей цифровых товаров.
      example:
        items:
        - activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
        - activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
      properties:
        items:
          description: |
            Список проданных ключей.

            Если в заказе есть несколько **одинаковых** товаров (например, несколько ключей к одной и той же подписке), передайте каждый в виде отдельного элемента массива. `id` у этих элементов должен быть один и тот же.
          items:
            $ref: '#/components/schemas/OrderDigitalItemDTO'
          type: array
      required:
      - items
      type: object
    SetOrderDeliveryDateRequest:
      example:
        reason: null
        dates:
          toDate: 2000-01-23
      properties:
        dates:
          $ref: '#/components/schemas/OrderDeliveryDateDTO'
        reason:
          $ref: '#/components/schemas/OrderDeliveryDateReasonType'
      required:
      - dates
      - reason
      type: object
    SetOrderDeliveryTrackCodeRequest:
      example:
        trackCode: trackCode
        deliveryServiceId: 0
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
      required:
      - deliveryServiceId
      - trackCode
      type: object
    GetOrderBuyerInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderBuyerDTO'
        type: object
      type: object
    VerifyOrderEacRequest:
      example:
        code: code
      properties:
        code:
          description: Код для подтверждения ЭАПП.
          type: string
      type: object
    VerifyOrderEacResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/EacVerificationResultDTO'
        type: object
      type: object
    UpdateOrderStorageLimitRequest:
      description: Запрос на обновление срока хранения заказа в ПВЗ.
      example:
        newDate: 2000-01-23
      properties:
        newDate:
          description: |
            Новая дата, до которой заказ будет храниться в пункте выдачи.

            Срок хранения можно увеличить не больше, чем на 30 дней.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - newDate
      type: object
    PageFormatType:
      description: |
        Параметр управляет размещением ярлыков на странице:
        * `A7` — в PDF-файле будут странички размером A7, на каждой из которых разместится один ярлык.
        * `A4` — PDF-файл будет состоять из страниц A4, на каждой из которых будет по восемь ярлыков.
      enum:
      - A7
      - A4
      type: string
    GetOrderLabelsDataResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderLabelDTO'
        type: object
      description: Ответ с информацией для печати ярлыков.
      type: object
    RefundStatusType:
      description: |
        Cтатус возврата средств:

        * STARTED_BY_USER — создан клиентом из личного кабинета.

        * REFUND_IN_PROGRESS — ждет решение о возврате средств.

        * REFUNDED — по возврату проведены все возвратные денежные транзакции.

        * FAILED — невозможно провести возврат покупателю.

        * WAITING_FOR_DECISION — ожидает решения.

        * DECISION_MADE — по возврату принято решение.

        * REFUNDED_WITH_BONUSES — возврат осуществлен баллами Плюса или промокодом.

        * REFUNDED_BY_SHOP — магазин сделал самостоятельно возврат средств.

        * CANCELLED — возврат отменен.
      enum:
      - STARTED_BY_USER
      - REFUND_IN_PROGRESS
      - REFUNDED
      - FAILED
      - WAITING_FOR_DECISION
      - DECISION_MADE
      - REFUNDED_WITH_BONUSES
      - REFUNDED_BY_SHOP
      - CANCELLED
      - UNKNOWN
      type: string
    ReturnType:
      description: |
        Тип заказа для фильтрации:

        * `RETURN` — возврат.

        * `UNREDEEMED` — невыкуп.

        Если не указывать, в ответе будут и возвраты, и невыкупы.
      enum:
      - UNREDEEMED
      - RETURN
      type: string
    GetReturnsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/PagedReturnsDTO'
        type: object
      type: object
    GetReturnResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ReturnDTO'
        type: object
      type: object
    SetReturnDecisionRequest:
      description: Решения по позиции в возврате.
      example:
        returnItemId: 1
        decisionType: REFUND_MONEY_INCLUDING_SHIPMENT
        comment: Вернуть 149 рублей за пересылку
      properties:
        returnItemId:
          description: Идентификатор товара в возврате.
          format: int64
          type: integer
        decisionType:
          $ref: '#/components/schemas/ReturnRequestDecisionType'
        comment:
          description: |
            Комментарий к решению.

            Для решения `REFUND_MONEY_INCLUDING_SHIPMENT` укажите стоимость обратной пересылки,

            для `REPAIR` — когда вы устраните недостатки товара,

            для `DECLINE_REFUND` — причину отказа,

            для `OTHER_DECISION` следует передать, какое решение вы предлагаете.
          type: string
      required:
      - decisionType
      - returnItemId
      type: object
    GetRegionsResponse:
      example:
        regions:
        - parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: null
        - parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: null
        paging:
          nextPageToken: nextPageToken
      properties:
        regions:
          description: Информация о регионах.
          items:
            $ref: '#/components/schemas/RegionDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      type: object
    GetRegionWithChildrenResponse:
      example:
        regions:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: null
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        regions:
          $ref: '#/components/schemas/RegionDTO'
      type: object
    GetShipmentResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ShipmentDTO'
        type: object
      type: object
    GetShipmentOrdersInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrdersShipmentInfoDTO'
        type: object
      type: object
    ConfirmShipmentRequest:
      description: Запрос для подтверждения отгрузки.
      example:
        externalShipmentId: externalShipmentId
        orderIds:
        - 0
        - 0
      properties:
        externalShipmentId:
          description: Идентификатор отгрузки в системе поставщика.
          type: string
        orderIds:
          description: Список идентификаторов заказов в отгрузке.
          items:
            format: int64
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - orderIds
      type: object
    SetShipmentPalletsCountRequest:
      description: Запрос на передачу количества упаковок в отгрузке.
      example:
        placesCount: 0
      properties:
        placesCount:
          description: Количество упаковок в отгрузке.
          format: int32
          minimum: 0
          type: integer
      required:
      - placesCount
      type: object
    ShipmentPalletLabelPageFormatType:
      default: A8
      description: |
        Формат страницы:
        * `A4` — формат страницы A4.
        * `A8` — формат страницы A8.
      enum:
      - A4
      - A8
      type: string
    SearchShipmentsRequest:
      description: Запрос информации об отгрузках.
      example:
        dateTo: 2000-01-23
        statuses:
        - null
        - null
        orderIds:
        - 0
        - 0
        dateFrom: 2000-01-23
      properties:
        dateFrom:
          description: |
            Начальная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        dateTo:
          description: |
            Конечная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        statuses:
          description: Список статусов отгрузок.
          items:
            $ref: '#/components/schemas/ShipmentStatusType'
          type: array
          uniqueItems: true
        orderIds:
          description: Список идентификаторов заказов из отгрузок.
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          type: array
          uniqueItems: true
      type: object
    SearchShipmentsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/SearchShipmentsResponseDTO'
        type: object
      description: Ответ на запрос информации об отгрузках.
      type: object
    TransferOrdersFromShipmentRequest:
      description: Запрос переноса заказов из отгрузки.
      example:
        orderIds:
        - 0
        - 0
        - 0
        - 0
        - 0
      properties:
        orderIds:
          description: "Список заказов, которые вы не успеваете подготовить."
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          maxItems: 500
          minItems: 1
          type: array
      required:
      - orderIds
      type: object
    DeleteOffersRequest:
      description: |
        Фильтрации удаляемых товаров по offerIds.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список SKU товаров, которые нужно удалить."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offerIds
      type: object
    DeleteOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteOffersDTO'
        type: object
      description: Результат удаления товаров.
      type: object
    ApiLockedErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Ресурс из запроса заблокирован от применения к нему указанного
        метода.
      type: object
    GetOfferMappingsRequest:
      example:
        archived: true
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        offerIds:
        - null
        - null
        - null
        - null
        - null
        cardStatuses:
        - null
        - null
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.

            {% note warning "Такой список возвращается только целиком" %}

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:
            * `page_token`;
            * `limit`;
            * `cardStatuses`;
            * `categoryIds`;
            * `vendorNames`;
            * `tags`;
            * `archived`.

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          type: array
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          type: array
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          type: array
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          type: array
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          type: array
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращаются товары, не находящиеся в архиве.
          type: boolean
      type: object
    GetOfferMappingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetOfferMappingsResultDTO'
        type: object
      type: object
    UpdateOfferMappingsRequest:
      example:
        offerMappings:
        - offer: null
          mapping:
            marketSku: 0
        - offer: null
          mapping:
            marketSku: 0
        - offer: null
          mapping:
            marketSku: 0
        - offer: null
          mapping:
            marketSku: 0
        - offer: null
          mapping:
            marketSku: 0
      properties:
        offerMappings:
          description: "Перечень товаров, которые нужно добавить или обновить."
          items:
            $ref: '#/components/schemas/UpdateOfferMappingDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offerMappings
      type: object
    GetSuggestedOfferMappingsRequest:
      example:
        offers:
        - vendor: LEVENHUK
          basicPrice:
            currencyId: RUR
            value: 0.08008281904610115
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        - vendor: LEVENHUK
          basicPrice:
            currencyId: RUR
            value: 0.08008281904610115
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestedOfferDTO'
          type: array
      type: object
    GetSuggestedOfferMappingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetSuggestedOfferMappingsResultDTO'
        type: object
      type: object
    AddOffersToArchiveRequest:
      description: |
        Товары, которые нужно поместить в архив.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список товаров, которые нужно поместить в архив."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          type: array
      required:
      - offerIds
      type: object
    AddOffersToArchiveResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/AddOffersToArchiveDTO'
        type: object
      description: Результат архивации товаров.
      type: object
    DeleteOffersFromArchiveRequest:
      description: |
        Товары, которые нужно восстановить из архива.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список товаров, которые нужно восстановить из архива."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          type: array
      required:
      - offerIds
      type: object
    DeleteOffersFromArchiveResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteOffersFromArchiveDTO'
        type: object
      description: Результат разархивации товаров.
      type: object
    ShopSku:
      description: |2


        **Ваш SKU**

        Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

        Максимальная длина — 80 знаков.

        [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
      maxLength: 80
      minLength: 1
      pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
      type: string
    OfferMappingKindType:
      description: Вид маппинга.
      enum:
      - ACTIVE
      - ALL
      type: string
    OfferProcessingStatusType:
      description: |
        Статус публикации товара:

        * `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену.
        * `IN_WORK` — товар проходит модерацию. Это занимает несколько дней.
        * `NEED_CONTENT` — для товара без SKU на Маркете `marketSku` нужно найти карточку самостоятельно (через API или личный кабинет магазина) или создать ее, если товар еще не продается на Маркете.
        * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`.
        * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
      enum:
      - UNKNOWN
      - READY
      - IN_WORK
      - NEED_INFO
      - NEED_MAPPING
      - NEED_CONTENT
      - CONTENT_PROCESSING
      - SUSPENDED
      - REJECTED
      - REVIEW
      - CREATE_ERROR
      - UPDATE_ERROR
      type: string
    OfferAvailabilityStatusType:
      description: |
        Планы по поставкам:

        * `ACTIVE` — поставки будут.
        * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`.
        * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`.
      enum:
      - ACTIVE
      - INACTIVE
      - DELISTED
      type: string
    GetOfferMappingEntriesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferMappingEntriesDTO'
        type: object
      description: Ответ на запрос списка товаров в каталоге.
      type: object
    UpdateOfferMappingEntryRequest:
      description: Запрос на обновление товаров.
      example:
        offerMappingEntries:
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: null
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 2
            feedId: 0
            vendor: LEVENHUK
            price: 6.027456183070403
            transportUnitSize: 5
            id: id
            lifeTime:
              timePeriod: 4
              comment: comment
              timeUnit: null
            shelfLife:
              timePeriod: 4
              comment: comment
              timeUnit: null
            supplyScheduleDays:
            - null
            - null
            lifeTimeDays: 3
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: null
              - payload: payload
                type: null
              status: null
            shopSku: shopSku
            boxCount: 7
            minShipment: 1
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 9
            guaranteePeriod:
              timePeriod: 4
              comment: comment
              timeUnit: null
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 2
          mapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          awaitingModerationMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          rejectedMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: null
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 2
            feedId: 0
            vendor: LEVENHUK
            price: 6.027456183070403
            transportUnitSize: 5
            id: id
            lifeTime:
              timePeriod: 4
              comment: comment
              timeUnit: null
            shelfLife:
              timePeriod: 4
              comment: comment
              timeUnit: null
            supplyScheduleDays:
            - null
            - null
            lifeTimeDays: 3
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: null
              - payload: payload
                type: null
              status: null
            shopSku: shopSku
            boxCount: 7
            minShipment: 1
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 9
            guaranteePeriod:
              timePeriod: 4
              comment: comment
              timeUnit: null
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 2
          mapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          awaitingModerationMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          rejectedMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: null
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 2
            feedId: 0
            vendor: LEVENHUK
            price: 6.027456183070403
            transportUnitSize: 5
            id: id
            lifeTime:
              timePeriod: 4
              comment: comment
              timeUnit: null
            shelfLife:
              timePeriod: 4
              comment: comment
              timeUnit: null
            supplyScheduleDays:
            - null
            - null
            lifeTimeDays: 3
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: null
              - payload: payload
                type: null
              status: null
            shopSku: shopSku
            boxCount: 7
            minShipment: 1
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 9
            guaranteePeriod:
              timePeriod: 4
              comment: comment
              timeUnit: null
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 2
          mapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          awaitingModerationMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          rejectedMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: null
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 2
            feedId: 0
            vendor: LEVENHUK
            price: 6.027456183070403
            transportUnitSize: 5
            id: id
            lifeTime:
              timePeriod: 4
              comment: comment
              timeUnit: null
            shelfLife:
              timePeriod: 4
              comment: comment
              timeUnit: null
            supplyScheduleDays:
            - null
            - null
            lifeTimeDays: 3
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: null
              - payload: payload
                type: null
              status: null
            shopSku: shopSku
            boxCount: 7
            minShipment: 1
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 9
            guaranteePeriod:
              timePeriod: 4
              comment: comment
              timeUnit: null
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 2
          mapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          awaitingModerationMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          rejectedMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: null
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 2
            feedId: 0
            vendor: LEVENHUK
            price: 6.027456183070403
            transportUnitSize: 5
            id: id
            lifeTime:
              timePeriod: 4
              comment: comment
              timeUnit: null
            shelfLife:
              timePeriod: 4
              comment: comment
              timeUnit: null
            supplyScheduleDays:
            - null
            - null
            lifeTimeDays: 3
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: null
              - payload: payload
                type: null
              status: null
            shopSku: shopSku
            boxCount: 7
            minShipment: 1
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 9
            guaranteePeriod:
              timePeriod: 4
              comment: comment
              timeUnit: null
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 2
          mapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          awaitingModerationMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
          rejectedMapping:
            modelId: 1
            marketSku: 7
            categoryId: 1
      properties:
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          items:
            $ref: '#/components/schemas/OfferMappingEntryDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offerMappingEntries
      type: object
    GetSuggestedOfferMappingEntriesRequest:
      description: Запрос рекомендованных карточек товара.
      example:
        offers:
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/MappingsOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    GetSuggestedOfferMappingEntriesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferMappingSuggestionsListDTO'
        type: object
      description: Ответ со списком рекомендованных карточек товара.
      type: object
    UpdateBusinessPricesRequest:
      description: Запрос на установку дефолтных цен на товары.
      example:
        offers:
        - price: null
          offerId: offerId
        - price: null
          offerId: offerId
        - price: null
          offerId: offerId
        - price: null
          offerId: offerId
        - price: null
          offerId: offerId
      properties:
        offers:
          description: Список товаров с ценами.
          items:
            $ref: '#/components/schemas/UpdateBusinessOfferPriceDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    UpdatePricesRequest:
      description: Запрос на установку цен на товары.
      example:
        offers:
        - feed:
            id: 0
          shopSku: shopSku
          price:
            vat: 5
            discountBase: 1.4658129805029452
            currencyId: RUR
            value: 6.027456183070403
          marketSku: 5
          offerId: offerId
          id: id
        - feed:
            id: 0
          shopSku: shopSku
          price:
            vat: 5
            discountBase: 1.4658129805029452
            currencyId: RUR
            value: 6.027456183070403
          marketSku: 5
          offerId: offerId
          id: id
        - feed:
            id: 0
          shopSku: shopSku
          price:
            vat: 5
            discountBase: 1.4658129805029452
            currencyId: RUR
            value: 6.027456183070403
          marketSku: 5
          offerId: offerId
          id: id
        - feed:
            id: 0
          shopSku: shopSku
          price:
            vat: 5
            discountBase: 1.4658129805029452
            currencyId: RUR
            value: 6.027456183070403
          marketSku: 5
          offerId: offerId
          id: id
        - feed:
            id: 0
          shopSku: shopSku
          price:
            vat: 5
            discountBase: 1.4658129805029452
            currencyId: RUR
            value: 6.027456183070403
          marketSku: 5
          offerId: offerId
          id: id
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/OfferPriceDTO'
          maxItems: 2000
          type: array
      required:
      - offers
      type: object
    GetPricesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferPriceListResponseDTO'
        type: object
      description: Ответ на запрос списка цен.
      type: object
    GetPricesByOfferIdsRequest:
      description: Запрос списка цен.
      example:
        offerIds:
        - null
        - null
      properties:
        offerIds:
          description: Список SKU.
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      type: object
    GetPricesByOfferIdsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferPriceByOfferIdsListResponseDTO'
        type: object
      description: Ответ на запрос списка цен.
      type: object
    SuggestPricesRequest:
      description: Запрос на получение списка цен для продвижения.
      example:
        offers:
        - marketSku: 0
          offerId: offerId
        - marketSku: 0
          offerId: offerId
        - marketSku: 0
          offerId: offerId
        - marketSku: 0
          offerId: offerId
        - marketSku: 0
          offerId: offerId
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestOfferPriceDTO'
          maxItems: 1000
          type: array
      required:
      - offers
      type: object
    SuggestPricesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/SuggestPricesResultDTO'
        type: object
      description: Ответ на запрос списка цен для продвижения.
      type: object
    GetQuarantineOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
      example:
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        offerIds:
        - null
        - null
        cardStatuses:
        - null
        - null
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна. ⚠️ Не\
            \ используйте это поле одновременно с фильтрами по статусам карточек,\
            \ категориям, брендам или тегам. Если вы хотите воспользоваться фильтр\
            ами, оставьте поле пустым."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          type: array
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          type: array
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          type: array
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          type: array
      type: object
    GetQuarantineOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetQuarantineOffersResultDTO'
        type: object
      description: Ответ на запрос списка товаров в карантине.
      type: object
    ConfirmPricesRequest:
      description: |
        Запрос на подтверждение цены.
      example:
        offerIds:
        - null
        - null
      properties:
        offerIds:
          description: "Идентификаторы товаров, у которых подтверждается цена."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      required:
      - offerIds
      type: object
    FeedId:
      format: int64
      type: integer
    GetHiddenOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetHiddenOffersResultDTO'
        type: object
      description: Ответ на запрос списка скрытий.
      type: object
    AddHiddenOffersRequest:
      description: Запрос на скрытие оферов.
      example:
        hiddenOffers:
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - hiddenOffers
      type: object
    DeleteHiddenOffersRequest:
      description: Запрос на возобновление показа оферов.
      example:
        hiddenOffers:
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
        - ttlInHours: 6
          feedId: 0
          marketSku: 1
          offerId: offerId
          comment: comment
          priority: true
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - hiddenOffers
      type: object
    GetActualStocksResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetActualStocksDTO'
        type: object
      type: object
    UpdateStocksRequest:
      description: Запрос на изменение информации по стокам.
      example:
        skus:
        - warehouseId: 0
          sku: sku
          items:
          - count: 1205491236
            type: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - warehouseId: 0
          sku: sku
          items:
          - count: 1205491236
            type: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - warehouseId: 0
          sku: sku
          items:
          - count: 1205491236
            type: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - warehouseId: 0
          sku: sku
          items:
          - count: 1205491236
            type: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - warehouseId: 0
          sku: sku
          items:
          - count: 1205491236
            type: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        skus:
          description: |
            Данные об остатках товаров.
          items:
            $ref: '#/components/schemas/StockDTO'
          maxItems: 2000
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - skus
      type: object
    GetWarehouseStocksRequest:
      description: |
        Фильтры для запроса остатков.
      example:
        archived: true
        withTurnover: false
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        withTurnover:
          default: false
          description: |
            Возвращать ли информацию по оборачиваемости (FBY).

            Значение по умолчанию — `false`. Передавайте `true`, если информация нужна.
          type: boolean
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве.
          type: boolean
        offerIds:
          description: |
            Фильтр по вашим SKU товаров.

            Возвращается информация об остатках всех переданных SKU, включая товары в архиве.

            {% note warning "Такой список возвращается только целиком" %}

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:

            * `page_token`;
            * `limit`;
            * `archived`.

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          type: array
          uniqueItems: true
      type: object
    GetWarehouseStocksResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetWarehouseStocksDTO'
        type: object
      type: object
    GetDeliveryServicesResponse:
      description: Ответ на запрос списка служб доставки.
      example:
        result:
          deliveryService:
          - name: name
            id: 0
          - name: name
            id: 0
      properties:
        result:
          $ref: '#/components/schemas/DeliveryServicesDTO'
      type: object
    GetOrdersStatsRequest:
      description: Запрос отчета по заказам.
      example:
        updateTo: 2000-01-23
        updateFrom: 2000-01-23
        hasCis: true
        dateTo: 2000-01-23
        statuses:
        - null
        - null
        orders:
        - 0
        - 0
        dateFrom: 2000-01-23
      properties:
        dateFrom:
          description: |
            Начальная дата, когда заказ был сформирован.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          format: date
          type: string
        dateTo:
          description: |
            Конечная дата, когда заказ был сформирован.
            Формат даты: `ГГГГ‑ММ‑ДД`.
            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          format: date
          type: string
        updateFrom:
          description: |
            Начальная дата периода, за который были изменения статуса заказа.
            Формат даты: `ГГГГ‑ММ‑ДД`.
            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          format: date
          type: string
        updateTo:
          description: |
            Конечная дата периода, за который были изменения статуса заказа.
            Формат даты: `ГГГГ‑ММ‑ДД`.
            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          format: date
          type: string
        orders:
          description: Список идентификаторов заказов.
          items:
            description: |
              Список товаров в заказе после возможных изменений.

              В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

              * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

              * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
            format: int64
            type: integer
          type: array
        statuses:
          description: Список статусов заказов.
          items:
            $ref: '#/components/schemas/OrderStatsStatusType'
          type: array
        hasCis:
          description: |
            Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации из системы «Честный ЗНАК»:
            `true` — да;
            `false` — нет.
            Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
          type: boolean
      type: object
    GetOrdersStatsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrdersStatsDTO'
        type: object
      description: Ответ на запрос отчета по заказам.
      type: object
    GetGoodsStatsRequest:
      description: Запрос отчета по товарам.
      example:
        shopSkus:
        - null
        - null
        - null
        - null
        - null
      properties:
        shopSkus:
          description: |
            Список ваших идентификаторов SKU.
            Максимальное количество идентификаторов: 500.
            Обязательный параметр. Должен содержать хотя бы один SKU.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - shopSkus
      type: object
    GetGoodsStatsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GoodsStatsDTO'
        type: object
      description: Ответ на запрос отчета по товарам.
      type: object
    GetReportInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ReportInfoDTO'
        type: object
      description: Ответ на запрос информации об отчёте.
      type: object
    ReportFormatType:
      description: |
        Формат отчета:

        - `FILE` — файл с электронной таблицей.
      enum:
      - FILE
      type: string
    GenerateUnitedNettingReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        bankOrderId: 6
        placementPrograms:
        - null
        - null
        businessId: 0
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
        inns:
        - inns
        - inns
        campaignIds:
        - 1
        - 1
        bankOrderDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        businessId:
          description: Идентификатор бизнеса.
          format: int64
          type: integer
        dateTimeFrom:
          description: "Начало периода, включительно."
          format: date-time
          type: string
        dateTimeTo:
          description: "Конец периода, включительно. Максимальный период — 1 год."
          format: date-time
          type: string
        bankOrderId:
          description: Номер платежного поручения.
          format: int64
          type: integer
        bankOrderDateTime:
          description: Дата платежного поручения.
          format: date-time
          type: string
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          items:
            $ref: '#/components/schemas/PlacementType'
          type: array
        inns:
          description: "Список ИНН, которые нужны в отчете."
          items:
            type: string
          type: array
        campaignIds:
          description: "Список магазинов, которые нужны в отчете."
          items:
            format: int64
            type: integer
          type: array
      required:
      - businessId
      type: object
    GenerateReportResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GenerateReportDTO'
        type: object
      description: Ответ на запрос генерации отчёта.
      type: object
    GenerateUnitedMarketplaceServicesReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        yearFrom: 6
        placementPrograms:
        - null
        - null
        businessId: 0
        monthFrom: 2
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
        inns:
        - inns
        - inns
        campaignIds:
        - 2
        - 2
        monthTo: 7
        yearTo: 5
      properties:
        businessId:
          description: Идентификатор бизнеса.
          format: int64
          type: integer
        dateTimeFrom:
          description: "Начало периода, включительно."
          format: date-time
          type: string
        dateTimeTo:
          description: "Конец периода, включительно. Максимальный период — 1 год."
          format: date-time
          type: string
        yearFrom:
          description: Начальный год формирования акта.
          format: int32
          type: integer
        monthFrom:
          description: Начальный номер месяца формирования акта.
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        yearTo:
          description: Конечный год формирования акта.
          format: int32
          type: integer
        monthTo:
          description: Конечный номер месяца формирования акта.
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          items:
            $ref: '#/components/schemas/PlacementType'
          type: array
        inns:
          description: "Список ИНН, которые нужны в отчете."
          items:
            type: string
          type: array
        campaignIds:
          description: "Список магазинов, которые нужны в отчете."
          items:
            format: int64
            type: integer
          type: array
      required:
      - businessId
      type: object
    GenerateGoodsRealizationReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор магазина и период, за который нужен отчет.
      example:
        month: 2
        year: 6
        campaignId: 0
      properties:
        campaignId:
          description: Идентификатор кампании.
          format: int64
          type: integer
        year:
          description: Год.
          format: int32
          type: integer
        month:
          description: Номер месяца.
          format: int32
          maximum: 12
          minimum: 1
          type: integer
      required:
      - campaignId
      - month
      - year
      type: object
    GeneratePricesReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        categoryIds:
        - 1
        - 1
        creationDateTo: 2000-01-23
        campaignId: 6
        businessId: 0
        creationDateFrom: 2000-01-23
      properties:
        businessId:
          description: |
            Идентификатор бизнеса.

            В большинстве случаев обязателен. Не указывается, если задан `campaignId`.
          format: int64
          type: integer
        campaignId:
          description: |
            Идентификатор кампании.

            Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.
          format: int64
          type: integer
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            format: int64
            type: integer
          type: array
        creationDateFrom:
          description: |
            Фильтр по времени появления предложения — начало периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        creationDateTo:
          description: |
            Фильтр по времени появления предложения — окончание периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
      type: object
    GenerateStocksOnWarehousesReportRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        reportDate: 2000-01-23
        campaignId: 0
        warehouseIds:
        - 6
        - 6
      properties:
        campaignId:
          description: Идентификатор магазина.
          format: int64
          type: integer
        warehouseIds:
          description: "Фильтр по идентификаторам складов (только FBY). Чтобы узна\
            ть идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md)."
          items:
            format: int64
            type: integer
          type: array
        reportDate:
          description: Фильтр по дате (для FBY). В отчет попадут данные за **предшествующий**
            дате день.
          format: date
          type: string
      required:
      - campaignId
      type: object
    GenerateGoodsMovementReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        shopSku: shopSku
        campaignId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
      properties:
        campaignId:
          description: Идентификатор кампании.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
      required:
      - campaignId
      - dateFrom
      - dateTo
      type: object
    GenerateShowsSalesReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        campaignId: 6
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        grouping: null
      properties:
        businessId:
          description: "Идентификатор бизнеса. \n\nУказывается, если нужно состави\
            ть отчет по всем магазинам бизнеса. В запросе обязательно должен быть\
            \ либо `businessID`, либо `campaignId`, но не оба сразу.\n"
          format: int64
          type: integer
        campaignId:
          description: "Идентификатор кампании. \n\nУказывается, если нужно состав\
            ить отчет по конкретному магазину. В запросе обязательно должен быть л\
            ибо `businessID`, либо `campaignId`, но не оба сразу.\n"
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        grouping:
          $ref: '#/components/schemas/ShowsSalesGroupingType'
      required:
      - dateFrom
      - dateTo
      - grouping
      type: object
    GetOutletsResponse:
      description: Ответ на запрос информации о точках продаж.
      example:
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
        outlets:
        - null
        - null
        paging: null
      properties:
        outlets:
          description: Информация о точках продаж.
          items:
            $ref: '#/components/schemas/FullOutletDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      type: object
    ChangeOutletRequest:
      allOf:
      - $ref: '#/components/schemas/OutletDTO'
      type: object
    CreateOutletResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OutletResponseDTO'
        type: object
      description: Ответ на запрос о создании точки продаж.
      type: object
    GetOutletResponse:
      description: Ответ на запрос информации о точке продаж.
      example:
        outlet: null
      properties:
        outlet:
          $ref: '#/components/schemas/FullOutletDTO'
      type: object
    GetOutletLicensesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OutletLicensesResponseDTO'
        type: object
      type: object
    UpdateOutletLicenseRequest:
      description: Запрос на создание или изменение лицензий для точек продаж.
      example:
        licenses:
        - licenseType: null
          number: number
          dateOfExpiry: 2000-01-23T04:56:07.000+00:00
          outletId: 6
          id: 0
          dateOfIssue: 2000-01-23T04:56:07.000+00:00
        - licenseType: null
          number: number
          dateOfExpiry: 2000-01-23T04:56:07.000+00:00
          outletId: 6
          id: 0
          dateOfIssue: 2000-01-23T04:56:07.000+00:00
      properties:
        licenses:
          description: |
            Список лицензий.
            Обязательный параметр, должен содержать информацию хотя бы об одной лицензии.
          items:
            $ref: '#/components/schemas/OutletLicenseDTO'
          minItems: 1
          type: array
      required:
      - licenses
      type: object
    GetFeedbackListResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/FeedbackListDTO'
        type: object
      type: object
    CurrencyType:
      description: |
        Коды валют.
        Возможные значения:
        * `BYR` — белорусский рубль.
        * `KZT` — казахстанский тенге.
        * `RUR` — российский рубль.
        * `UAH` — украинская гривна.
      enum:
      - RUR
      - USD
      - EUR
      - UAH
      - AUD
      - GBP
      - BYR
      - BYN
      - DKK
      - ISK
      - KZT
      - CAD
      - CNY
      - NOK
      - XDR
      - SGD
      - TRY
      - SEK
      - CHF
      - JPY
      - AZN
      - ALL
      - DZD
      - AOA
      - ARS
      - AMD
      - AFN
      - BHD
      - BGN
      - BOB
      - BWP
      - BND
      - BRL
      - BIF
      - HUF
      - VEF
      - KPW
      - VND
      - GMD
      - GHS
      - GNF
      - HKD
      - GEL
      - AED
      - EGP
      - ZMK
      - ILS
      - INR
      - IDR
      - JOD
      - IQD
      - IRR
      - YER
      - QAR
      - KES
      - KGS
      - COP
      - CDF
      - CRC
      - KWD
      - CUP
      - LAK
      - LVL
      - SLL
      - LBP
      - LYD
      - SZL
      - LTL
      - MUR
      - MRO
      - MKD
      - MWK
      - MGA
      - MYR
      - MAD
      - MXN
      - MZN
      - MDL
      - MNT
      - NPR
      - NGN
      - NIO
      - NZD
      - OMR
      - PKR
      - PYG
      - PEN
      - PLN
      - KHR
      - SAR
      - RON
      - SCR
      - SYP
      - SKK
      - SOS
      - SDG
      - SRD
      - TJS
      - THB
      - TWD
      - BDT
      - TZS
      - TND
      - TMM
      - UGX
      - UZS
      - UYU
      - PHP
      - DJF
      - XAF
      - XOF
      - HRK
      - CZK
      - CLP
      - LKR
      - EEK
      - ETB
      - RSD
      - ZAR
      - KRW
      - NAD
      - TL
      - UE
      type: string
    GetOffersResponse:
      allOf:
      - $ref: '#/components/schemas/OffersDTO'
      - properties:
          pager:
            $ref: '#/components/schemas/FlippingPagerDTO'
        type: object
      description: Список предложений с пагинатором.
      type: object
    GetCampaignOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
      example:
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        statuses:
        - null
        - null
        offerIds:
        - null
        - null
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна. ⚠️ Не\
            \ используйте это поле одновременно с фильтрами по статусам карточек,\
            \ категориям, брендам или тегам. Если вы хотите воспользоваться фильтр\
            ами, оставьте поле пустым."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
        statuses:
          description: |
            Фильтр по статусам товаров.
          items:
            $ref: '#/components/schemas/OfferCampaignStatusType'
          type: array
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          type: array
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          type: array
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          type: array
      type: object
    GetCampaignOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetCampaignOffersResultDTO'
        type: object
      description: Ответ на запрос списка товаров в магазине.
      type: object
    UpdateCampaignOffersRequest:
      description: Запрос на обновление предложений товаров магазина.
      example:
        offers:
        - null
        - null
        - null
        - null
        - null
      properties:
        offers:
          description: Параметры размещения товаров в заданном магазине.
          items:
            $ref: '#/components/schemas/UpdateCampaignOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    DeleteCampaignOffersRequest:
      description: |
        Фильтрации удаляемых товаров по offerIds.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: Идентификаторы товаров в каталоге.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offerIds
      type: object
    DeleteCampaignOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteCampaignOffersDTO'
        type: object
      description: Результат удаления товаров.
      type: object
    GetAllOffersResponse:
      allOf:
      - $ref: '#/components/schemas/OffersDTO'
      description: Список предложений.
      type: object
    GetOfferRecommendationsRequest:
      example:
        cofinancePriceFilter: null
        competitivenessFilter: null
        recommendedCofinancePriceFilter: null
        offerIds:
        - null
        - null
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна. ⚠️ Не\
            \ используйте это поле одновременно с остальными фильтрами. Если вы хо\
            тите воспользоваться фильтрами, оставьте поле пустым."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
        cofinancePriceFilter:
          $ref: '#/components/schemas/FieldStateType'
        recommendedCofinancePriceFilter:
          $ref: '#/components/schemas/FieldStateType'
        competitivenessFilter:
          $ref: '#/components/schemas/PriceCompetitivenessType'
      type: object
    GetOfferRecommendationsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferRecommendationsResultDTO'
        type: object
      type: object
    GetFeedResponse:
      description: Ответ на запрос информации о прайс-листе.
      example:
        feed:
          password: password
          download:
            error:
              description: description
              type: null
              httpStatusCode: 5
            status: null
          uploadDate: 2000-01-23T04:56:07.000+00:00
          publication:
            priceAndStockUpdate:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
            status: null
            full:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          placement:
            status: null
            totalOffersCount: 5
          login: login
          url: url
          content:
            rejectedOffersCount: 6
            error:
              type: null
            status: null
            totalOffersCount: 1
      properties:
        feed:
          $ref: '#/components/schemas/FeedDTO'
      type: object
    GetFeedsResponse:
      description: Ответ на запрос списка прайс-листов.
      example:
        feeds:
        - password: password
          download:
            error:
              description: description
              type: null
              httpStatusCode: 5
            status: null
          uploadDate: 2000-01-23T04:56:07.000+00:00
          publication:
            priceAndStockUpdate:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
            status: null
            full:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          placement:
            status: null
            totalOffersCount: 5
          login: login
          url: url
          content:
            rejectedOffersCount: 6
            error:
              type: null
            status: null
            totalOffersCount: 1
        - password: password
          download:
            error:
              description: description
              type: null
              httpStatusCode: 5
            status: null
          uploadDate: 2000-01-23T04:56:07.000+00:00
          publication:
            priceAndStockUpdate:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
            status: null
            full:
              fileTime: 2000-01-23T04:56:07.000+00:00
              publishedTime: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          placement:
            status: null
            totalOffersCount: 5
          login: login
          url: url
          content:
            rejectedOffersCount: 6
            error:
              type: null
            status: null
            totalOffersCount: 1
      properties:
        feeds:
          description: Список прайс-листов.
          items:
            $ref: '#/components/schemas/FeedDTO'
          type: array
      type: object
    FeedIndexLogsStatusType:
      description: |
        Статус индексации прайс-листа и проверки на соответствие техническим требованиям.

        Возможные значения:
        * `ERROR` — произошли ошибки.
        * `OK` — обработан без ошибок.
        * `WARNING` — наблюдались некритичные проблемы.
      enum:
      - ERROR
      - OK
      - WARNING
      type: string
    GetFeedIndexLogsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/FeedIndexLogsResultDTO'
        type: object
      type: object
    SetFeedParamsRequest:
      description: Запрос на обновление изменение параметров прайс-листа.
      example:
        parameters:
        - deleted: true
          values:
          - 0
          - 0
          name: name
        - deleted: true
          values:
          - 0
          - 0
          name: name
      properties:
        parameters:
          description: |
            Параметры прайс-листа.

            Обязательный параметр.
          items:
            $ref: '#/components/schemas/FeedParameterDTO'
          type: array
      required:
      - parameters
      type: object
    GetFeedCategoriesResponse:
      description: Ответ на запрос списка категорий прайс-листа.
      example:
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
        categories:
        - feedId: 0
          name: name
          id: id
          parentId: parentId
        - feedId: 0
          name: name
          id: id
          parentId: parentId
      properties:
        categories:
          description: Список категорий.
          items:
            $ref: '#/components/schemas/FeedCategoryDTO'
          type: array
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      type: object
    GetCampaignCategoriesResponse:
      description: Ответ на запрос списка категорий магазина.
      example:
        pager:
          total: 5
          pagesCount: 9
          pageSize: 3
          from: 5
          to: 2
          currentPage: 7
        categories:
        - feedId: 0
          name: name
          id: id
          parentId: parentId
        - feedId: 0
          name: name
          id: id
          parentId: parentId
      properties:
        categories:
          description: Список категорий.
          items:
            $ref: '#/components/schemas/FeedCategoryDTO'
          type: array
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      type: object
    SearchModelsResponse:
      allOf:
      - $ref: '#/components/schemas/GetModelsResponse'
      - properties:
          pager:
            $ref: '#/components/schemas/FlippingPagerDTO'
        type: object
      type: object
    GetModelsRequest:
      description: Запрос информации о моделях.
      example:
        models:
        - 0
        - 0
      properties:
        models:
          description: Список моделей.
          items:
            description: Идентификатор модели.
            format: int64
            type: integer
          type: array
      type: object
    GetModelsResponse:
      allOf:
      - properties:
          models:
            description: Список моделей товаров.
            items:
              $ref: '#/components/schemas/ModelDTO'
            type: array
        type: object
      - $ref: '#/components/schemas/RegionalModelInfoDTO'
      description: Ответ на запрос информации о моделях.
      type: object
    SortOrderType:
      description: |
        Направление сортировки.

        Возможные значения:
        - `ASC` — сортировка по возрастанию.
        - `DESC` — сортировка по убыванию.
      enum:
      - ASC
      - DESC
      type: string
    GetModelsOffersResponse:
      allOf:
      - properties:
          models:
            description: Список моделей товаров.
            items:
              $ref: '#/components/schemas/EnrichedModelDTO'
            type: array
        type: object
      - $ref: '#/components/schemas/RegionalModelInfoDTO'
      description: Ответ на запрос списка предложений для моделей.
      type: object
    PutSkuBidsRequest:
      description: description.
      example:
        bids:
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
      properties:
        bids:
          description: "Список товаров и ставки для продвижения, которые на них ну\
            жно установить."
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
          maxItems: 1500
          minItems: 1
          type: array
      required:
      - bids
      type: object
    GetBidsInfoRequest:
      description: description.
      example:
        skus:
        - null
        - null
        - null
        - null
        - null
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить значения ставок.

            Если список не задан, постранично возвращаются все товары со ставками.

            Если список задан, результаты возвращаются одной страницей, а параметры `page_token` и `limit` игнорируются.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 1500
          minItems: 1
          type: array
      type: object
    GetBidsInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetBidsInfoResponseDTO'
        type: object
      description: description.
      type: object
    GetBidsRecommendationsRequest:
      description: description.
      example:
        skus:
        - null
        - null
        - null
        - null
        - null
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить рекомендации по ставкам.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 1500
          minItems: 1
          type: array
      required:
      - skus
      type: object
    GetBidsRecommendationsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetBidsRecommendationsResponseDTO'
        type: object
      description: description.
      type: object
    GetWarehousesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/WarehousesDTO'
        type: object
      type: object
    GetFulfillmentWarehousesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/FulfillmentWarehousesDTO'
        type: object
      type: object
    GetCategoryContentParametersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CategoryContentParametersDTO'
        type: object
      description: Ответ со списком характеристик для категории и их допустимыми значениями.
      type: object
    GetOfferCardsContentStatusRequest:
      example:
        categoryIds:
        - null
        - null
        - null
        - null
        - null
        offerIds:
        - null
        - null
        - null
        - null
        - null
        cardStatuses:
        - null
        - null
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.

            ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          type: array
          uniqueItems: true
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          type: array
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            $ref: '#/components/schemas/CategoryId'
          maxItems: 200
          type: array
          uniqueItems: true
      type: object
    GetOfferCardsContentStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferCardsContentStatusDTO'
        type: object
      description: Ответ со списком состояний товаров и пагинацией.
      type: object
    UpdateOfferContentRequest:
      description: Запрос на установку новых значений для параметров.
      example:
        offersContent:
        - offerId: offerId
          categoryId: 0
          parameterValues:
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
        - offerId: offerId
          categoryId: 0
          parameterValues:
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
        - offerId: offerId
          categoryId: 0
          parameterValues:
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
        - offerId: offerId
          categoryId: 0
          parameterValues:
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
        - offerId: offerId
          categoryId: 0
          parameterValues:
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
          - valueId: 1
            parameterId: 6
            value: value
      properties:
        offersContent:
          description: Список товаров с указанными характеристиками.
          items:
            $ref: '#/components/schemas/OfferContentDTO'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - offersContent
      type: object
    UpdateOfferContentResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          results:
            description: |
              Ошибки и предупреждения, возникшие при обработке переданных значений. Каждый элемент списка соответствует одному товару.

              Поле не передается, если все в порядке.
            items:
              $ref: '#/components/schemas/UpdateOfferContentResultDTO'
            type: array
        type: object
      description: "Описывает проблемы, возникшие при сохранении товара."
      type: object
    CampaignDTO:
      description: Информация о магазине.
      example:
        clientId: 6
        business:
          name: name
          id: 1
        domain: domain
        placementType: null
        id: 0
      properties:
        domain:
          description: URL магазина.
          type: string
        id:
          description: Идентификатор кампании.
          format: int64
          type: integer
        clientId:
          description: Идентификатор плательщика в Яндекс Балансе.
          format: int64
          type: integer
        business:
          $ref: '#/components/schemas/BusinessDTO'
        placementType:
          $ref: '#/components/schemas/PlacementType'
      type: object
    FlippingPagerDTO:
      description: Модель для пагинации.
      example:
        total: 5
        pagesCount: 9
        pageSize: 3
        from: 5
        to: 2
        currentPage: 7
      properties:
        total:
          description: Сколько всего найдено элементов.
          format: int32
          type: integer
        from:
          description: Начальный номер найденного элемента на странице.
          format: int32
          type: integer
        to:
          description: Конечный номер найденного элемента на странице.
          format: int32
          type: integer
        currentPage:
          description: Текущая страница.
          format: int32
          type: integer
        pagesCount:
          description: Общее количество страниц.
          format: int32
          type: integer
        pageSize:
          description: Размер страницы.
          format: int32
          type: integer
      type: object
    ApiErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          errors:
            description: Список ошибок.
            items:
              $ref: '#/components/schemas/ApiErrorDTO'
            type: array
        type: object
      description: Стандартная обертка для ошибок сервера.
      type: object
    CampaignSettingsDTO:
      description: Настройки магазина.
      example:
        showInPremium: true
        showInContext: true
        localRegion:
          delivery:
            schedule:
              customWorkingDays:
              - 23-09-2022
              - 23-09-2022
              period:
                fromDate: 23-09-2022
                toDate: 23-09-2022
              customHolidays:
              - 23-09-2022
              - 23-09-2022
              weeklyHolidays:
              - 1
              - 1
              availableOnHolidays: true
              totalHolidays:
              - 23-09-2022
              - 23-09-2022
          name: name
          id: 6
          type: null
          deliveryOptionsSource: null
        countryRegion: 0
        shopName: shopName
        useOpenStat: true
      properties:
        countryRegion:
          description: "Идентификатор региона, в котором находится магазин."
          format: int64
          type: integer
        shopName:
          description: |
            Наименование магазина на Яндекс Маркете.
            Если наименование отсутствует, значение параметра выводится — `null`.
          type: string
        showInContext:
          description: |
            Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции.
            Возможные значения:
            * `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции.
            * `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции.
          type: boolean
        showInPremium:
          description: |
            Признак показа предложений магазина в рекламном блоке над результатами поиска (Спецразмещение).
            Возможные значения:
            * `false` — предложения не показываются в блоке Спецразмещения.
            * `true` — предложения показываются в блоке Спецразмещения.
          type: boolean
        useOpenStat:
          description: |
            Признак использования внешней интернет-статистики.
            Возможные значения:
            * `false` — внешняя интернет-статистика не используется.
            * `true` — внешняя интернет-статистика используется.
          type: boolean
        localRegion:
          $ref: '#/components/schemas/CampaignSettingsLocalRegionDTO'
      type: object
    RegionDTO:
      description: Информация о регионах.
      example:
        parent: null
        children:
        - null
        - null
        name: name
        id: 0
        type: null
      properties:
        id:
          description: Идентификатор региона.
          format: int64
          type: integer
        name:
          description: Название региона.
          type: string
        type:
          $ref: '#/components/schemas/RegionType'
        parent:
          $ref: '#/components/schemas/RegionDTO'
        children:
          description: Дочерние регионы.
          items:
            $ref: '#/components/schemas/RegionDTO'
          type: array
      required:
      - name
      - type
      type: object
    OrderDTO:
      description: Заказ.
      example:
        notes: notes
        paymentType: null
        expiryDate: 23-09-2022 09:12:41
        total: 1.4658129805029452
        buyerTotalBeforeDiscount: 2.027123023002322
        buyerTotal: 9.301444243932576
        currency: null
        id: 0
        subsidyTotal: 5.637376656633329
        delivery:
          dispatchType: null
          address:
            country: country
            city: city
            postcode: postcode
            gps:
              latitude: 8.762042012749001
              longitude: 9.018348186070783
            house: house
            subway: subway
            phone: phone
            street: street
            district: district
            recipient: recipient
            entryphone: entryphone
            block: block
            entrance: entrance
            floor: floor
            apartment: apartment
          liftType: null
          deliveryServiceId: 6
          vat: null
          estimated: true
          dates:
            fromDate: 23-09-2022
            toDate: 23-09-2022
            fromTime: fromTime
            toTime: toTime
            realDeliveryDate: 23-09-2022
          type: null
          serviceName: serviceName
          shipments:
          - boxes:
            - fulfilmentId: fulfilmentId
              id: 2
            - fulfilmentId: fulfilmentId
              id: 2
            id: 1
            shipmentDate: 23-09-2022
            shipmentTime: shipmentTime
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            status: null
          - boxes:
            - fulfilmentId: fulfilmentId
              id: 2
            - fulfilmentId: fulfilmentId
              id: 2
            id: 1
            shipmentDate: 23-09-2022
            shipmentTime: shipmentTime
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 6
            - trackCode: trackCode
              deliveryServiceId: 6
            status: null
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 6
          - trackCode: trackCode
            deliveryServiceId: 6
          courier:
            vehicleDescription: vehicleDescription
            phone: phone
            phoneExtension: phoneExtension
            fullName: fullName
            vehicleNumber: vehicleNumber
          price: 6.683562403749608
          outletStorageLimitDate: 23-09-2022
          eacType: null
          liftPrice: 3.5571952270680973
          eacCode: eacCode
          id: id
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: null
          deliveryPartnerType: null
          outletCode: outletCode
        substatus: null
        deliveryTotal: 5.962133916683182
        buyerItemsTotalBeforeDiscount: 3.616076749251911
        creationDate: 23-09-2022 09:12:41
        totalWithSubsidy: 2.3021358869347655
        buyerItemsTotal: 7.061401241503109
        buyer:
          lastName: lastName
          firstName: firstName
          phone: phone
          middleName: middleName
          id: id
          type: null
          email: email
        itemsTotal: 6.027456183070403
        subsidies:
        - amount: 9.369310271410669
          type: null
        - amount: 9.369310271410669
          type: null
        paymentMethod: null
        fake: true
        taxSystem: null
        cancelRequested: true
        items:
        - feedCategoryId: feedCategoryId
          offerName: offerName
          subsidy: 1.1730742509559433
          instances:
          - rnpt: rnpt
            gtd: gtd
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            cisFull: cisFull
            uin: uin
            cis: cis
          priceBeforeDiscount: 6.84685269835264
          count: 7
          vat: null
          requiredInstanceTypes:
          - null
          - null
          buyerPriceBeforeDiscount: 1.4894159098541704
          shopSku: shopSku
          feedId: 7
          price: 1.2315135367772556
          partnerWarehouseId: partnerWarehouseId
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          offerId: offerId
          buyerPrice: 1.0246457001441578
          details:
          - updateDate: 23-09-2022
            itemStatus: null
            itemCount: 9
          - updateDate: 23-09-2022
            itemStatus: null
            itemCount: 9
          id: 4
          promos:
          - subsidy: 5.025004791520295
            shopPromoId: shopPromoId
            discount: 4.965218492984954
            marketPromoId: marketPromoId
            type: null
          - subsidy: 5.025004791520295
            shopPromoId: shopPromoId
            discount: 4.965218492984954
            marketPromoId: marketPromoId
            type: null
        - feedCategoryId: feedCategoryId
          offerName: offerName
          subsidy: 1.1730742509559433
          instances:
          - rnpt: rnpt
            gtd: gtd
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            cisFull: cisFull
            uin: uin
            cis: cis
          priceBeforeDiscount: 6.84685269835264
          count: 7
          vat: null
          requiredInstanceTypes:
          - null
          - null
          buyerPriceBeforeDiscount: 1.4894159098541704
          shopSku: shopSku
          feedId: 7
          price: 1.2315135367772556
          partnerWarehouseId: partnerWarehouseId
          subsidies:
          - amount: 9.369310271410669
            type: null
          - amount: 9.369310271410669
            type: null
          offerId: offerId
          buyerPrice: 1.0246457001441578
          details:
          - updateDate: 23-09-2022
            itemStatus: null
            itemCount: 9
          - updateDate: 23-09-2022
            itemStatus: null
            itemCount: 9
          id: 4
          promos:
          - subsidy: 5.025004791520295
            shopPromoId: shopPromoId
            discount: 4.965218492984954
            marketPromoId: marketPromoId
            type: null
          - subsidy: 5.025004791520295
            shopPromoId: shopPromoId
            discount: 4.965218492984954
            marketPromoId: marketPromoId
            type: null
        status: null
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        creationDate:
          example: 23-09-2022 09:12:41
          format: date-dd-MM-yyyy-HH-mm-ss
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyType'
        itemsTotal:
          description: |
            Общая сумма заказа в валюте заказа без учета стоимости доставки и вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр subsidyTotal).

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        total:
          description: |
            Общая сумма заказа в валюте заказа с учетом стоимости доставки, но без учета вознаграждения партнеру за скидки по промокодам, купонам, кешбэку и акциям (параметр `subsidyTotal`).

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        deliveryTotal:
          description: Стоимость доставки в валюте заказа.
          format: decimal
          type: number
        subsidyTotal:
          description: |
            Общее вознаграждение партнеру за скидки:

            * по промокодам;
            * по купонам;
            * по баллам кешбэка по подписке Яндекс Плюс;
            * по акциям.

            Передается в валюте, указанной в параметре `currency`.

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        totalWithSubsidy:
          description: Сумма стоимости всех товаров в заказе и вознаграждения за них
            в валюте магазина (сумма параметров total и subsidyTotal)
          format: decimal
          type: number
        buyerItemsTotal:
          description: Стоимость всех товаров в заказе в валюте покупателя после применения
            скидок и без учета стоимости доставки.
          format: decimal
          type: number
        buyerTotal:
          description: Стоимость всех товаров в заказе в валюте покупателя после применения
            скидок и с учетом стоимости доставки.
          format: decimal
          type: number
        buyerItemsTotalBeforeDiscount:
          description: Стоимость всех товаров в заказе в валюте покупателя до применения
            скидок и без учета стоимости доставки.
          format: decimal
          type: number
        buyerTotalBeforeDiscount:
          description: Стоимость всех товаров в заказе в валюте покупателя до применения
            скидок и с учетом стоимости доставки.
          format: decimal
          type: number
        paymentType:
          $ref: '#/components/schemas/OrderPaymentType'
        paymentMethod:
          $ref: '#/components/schemas/OrderPaymentMethodType'
        fake:
          description: |
            Тип заказа:

            * false — заказ покупателя.

            * true — тестовый заказ Маркета.
          type: boolean
        items:
          description: Список товаров в заказе.
          items:
            $ref: '#/components/schemas/OrderItemDTO'
          type: array
        subsidies:
          description: Список субсидий по типам.
          items:
            $ref: '#/components/schemas/OrderItemSubsidyDTO'
          type: array
        delivery:
          $ref: '#/components/schemas/OrderDeliveryDTO'
        buyer:
          $ref: '#/components/schemas/OrderBuyerDTO'
        notes:
          description: Комментарий к заказу.
          type: string
        taxSystem:
          $ref: '#/components/schemas/OrderTaxSystemType'
        cancelRequested:
          description: Запрошена ли отмена.
          type: boolean
        expiryDate:
          example: 23-09-2022 09:12:41
          format: date-dd-MM-yyyy-HH-mm-ss
          type: string
      type: object
    OrderItemInstanceModificationDTO:
      description: "Позиция в корзине, требующая маркировки."
      example:
        instances:
        - rnpt: rnpt
          gtd: gtd
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          uin: uin
          cis: cis
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/post-order-accept.md) — параметр `id` в `items`.
          format: int64
          type: integer
        instances:
          description: |
            Список кодов маркировки единиц товара.
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
          type: array
      required:
      - id
      - instances
      type: object
    ApiResponse:
      description: Стандартная обертка для ответов сервера.
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatusType'
      type: object
    OrderItemsModificationResultDTO:
      description: |
        Краткие сведения о промаркированных товарах — возвращаются, если ответ `OK`.
      properties:
        items:
          description: "Список позиций в заказе, подлежащих маркировке."
          items:
            $ref: '#/components/schemas/BriefOrderItemDTO'
          type: array
      type: object
    OrderItemModificationDTO:
      description: |
        Список товаров в заказе.

        Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

        Обязательный параметр.
      example:
        instances:
        - rnpt: rnpt
          gtd: gtd
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          uin: uin
          cis: cis
        count: 0
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в рамках заказа.

            Получить идентификатор можно с помощью ресурсов `GET /campaigns/{campaignId}/orders` или `GET /campaigns/{campaignId}/orders/{orderId}`.

            Обязательный параметр.
          format: int64
          type: integer
        count:
          description: Новое количество товара.
          format: int32
          minimum: 0
          type: integer
        instances:
          description: |
            Информация о маркировке единиц товара.

            Передавайте в запросе все единицы товара, который подлежит маркировке.

            Обязательный параметр, если в заказе есть товары, подлежащие маркировке в системе «Честный ЗНАК».
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
          type: array
      required:
      - count
      - id
      type: object
    OrderItemsModificationRequestReasonType:
      description: Причина обновления состава заказа.
      enum:
      - PARTNER_REQUESTED_REMOVE
      - USER_REQUESTED_REMOVE
      type: string
    OrderStatusChangeDTO:
      description: Заказ.
      example:
        delivery:
          dates:
            realDeliveryDate: 2000-01-23
        substatus: null
        status: null
      properties:
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        delivery:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDTO'
      required:
      - status
      type: object
    OrderStateDTO:
      description: Информация по заказу.
      example:
        substatus: null
        id: 0
        status: null
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
      required:
      - id
      - status
      type: object
    UpdateOrderStatusesDTO:
      description: "Список заказов, статус которых обновился."
      properties:
        orders:
          description: Список с обновленными заказами.
          items:
            $ref: '#/components/schemas/UpdateOrderStatusDTO'
          type: array
      type: object
    ParcelDTO:
      description: Информация о грузовых местах в заказе.
      properties:
        boxes:
          description: Список грузовых мест. Маркет определяет количество мест по
            длине этого списка.
          items:
            $ref: '#/components/schemas/ParcelBoxDTO'
          minItems: 1
          type: array
      required:
      - boxes
      type: object
    ShipmentBoxesDTO:
      description: |
        В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания.
      properties:
        boxes:
          description: |
            Список грузовых мест. Маркет определил количество мест по длине этого списка.
          items:
            $ref: '#/components/schemas/ParcelBoxDTO'
          type: array
      type: object
    OrderCancellationReasonType:
      description: |
        Варианты причин, по которым заказ не может быть отменен.

        * `ORDER_DELIVERED` — заказ уже доставлен.
        * `ORDER_IN_DELIVERY` — заказ уже у курьера.
      enum:
      - ORDER_DELIVERED
      - ORDER_IN_DELIVERY
      type: string
    OrderDigitalItemDTO:
      description: Ключ цифрового товара.
      example:
        activate_till: 2000-01-23
        code: code
        slip: slip
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/post-order-accept.md) — параметр `id` в `items`.
          format: int64
          type: integer
        code:
          description: Сам ключ.
          type: string
        slip:
          description: Инструкция по активации.
          type: string
        activate_till:
          description: |
            Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - activate_till
      - code
      - id
      - slip
      type: object
    OrderDeliveryDateDTO:
      description: Информация о новой дате доставки заказа.
      example:
        toDate: 2000-01-23
      properties:
        toDate:
          description: |
            Новая дата доставки заказа.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - toDate
      type: object
    OrderDeliveryDateReasonType:
      description: |
        Причина переноса доставки заказа. Возможные причины изменения даты:
          - ```USER_MOVED_DELIVERY_DATES``` — покупатель попросил изменить дату или вы договорились привезти ему заказ раньше изначальной даты. Кроме этого указывается для подтверждения даты доставки товаров на заказ с долгой (31-60 дней) доставкой.
          - ```PARTNER_MOVED_DELIVERY_DATES``` — магазин не может доставить заказ в срок.
      enum:
      - USER_MOVED_DELIVERY_DATES
      - PARTNER_MOVED_DELIVERY_DATES
      type: string
    OrderBuyerDTO:
      description: Информация о покупателе.
      example:
        lastName: lastName
        firstName: firstName
        phone: phone
        middleName: middleName
        id: id
        type: null
        email: email
      properties:
        id:
          description: Идентификатор покупателя.
          type: string
        lastName:
          description: Фамилия покупателя.
          type: string
        firstName:
          description: Имя покупателя.
          type: string
        middleName:
          description: Отчество покупателя.
          type: string
        phone:
          description: |
            Номер телефона покупателя.

            Формат номера: `+<код_страны><код_региона><номер_телефона>`.
          type: string
        email:
          description: |
            Адрес электронной почты покупателя.

            Допускается любой адрес электронной почты, соответствующий стандарту RFC 2822.
          type: string
        type:
          $ref: '#/components/schemas/OrderBuyerType'
      type: object
    EacVerificationResultDTO:
      description: Результат выполнения запроса.
      properties:
        verificationResult:
          $ref: '#/components/schemas/EacVerificationStatusType'
        attemptsLeft:
          description: |
            Количество оставшихся попыток проверки кода.

            Возвращается, если магазин отправил некорректный код.

            Когда все попытки будут исчерпаны, код обновится.
          format: int32
          type: integer
      type: object
    OrderLabelDTO:
      description: Данные для печати ярлыка.
      properties:
        orderId:
          description: Идентификатор заказа.
          format: int64
          type: integer
        placesNumber:
          description: Количество грузовых мест в заказе.
          format: int32
          type: integer
        url:
          description: |
            URL файла с ярлыками‑наклейками на все грузовые места в заказе.

            Соответствует URL, по которому выполняется запрос `GET /campaigns/{campaignId}/orders/{orderId}/delivery/labels`.
          type: string
        parcelBoxLabels:
          description: Информация на ярлыке.
          items:
            $ref: '#/components/schemas/ParcelBoxLabelDTO'
          type: array
      required:
      - orderId
      - parcelBoxLabels
      - placesNumber
      - url
      type: object
    PagedReturnsDTO:
      description: Возвраты.
      properties:
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        returns:
          description: Список возвратов.
          items:
            $ref: '#/components/schemas/ReturnDTO'
          type: array
      type: object
    ReturnDTO:
      description: Возврат заказа.
      properties:
        id:
          description: Идентификатор возврата.
          format: int64
          type: integer
        orderId:
          description: Номер заказа.
          format: int64
          type: integer
        creationDate:
          description: Дата создания возврата клиентом.
          format: date-time
          type: string
        updateDate:
          description: Дата обновления заказа.
          format: date-time
          type: string
        refundStatus:
          $ref: '#/components/schemas/RefundStatusType'
        logisticPickupPoint:
          $ref: '#/components/schemas/LogisticPickupPointDTO'
        shipmentRecipientType:
          $ref: '#/components/schemas/RecipientType'
        shipmentStatus:
          $ref: '#/components/schemas/ReturnShipmentStatusType'
        refundAmount:
          description: Сумма возврата.
          format: int64
          type: integer
        items:
          description: Список товаров в возврате.
          items:
            $ref: '#/components/schemas/ReturnItemDTO'
          type: array
        returnType:
          $ref: '#/components/schemas/ReturnType'
      type: object
    ReturnRequestDecisionType:
      description: Решение по возврату.
      enum:
      - REFUND_MONEY
      - REFUND_MONEY_INCLUDING_SHIPMENT
      - REPAIR
      - REPLACE
      - SEND_TO_EXAMINATION
      - DECLINE_REFUND
      - OTHER_DECISION
      type: string
    ForwardScrollingPagerDTO:
      description: |
        Ссылка на следующую страницу.
      example:
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: Идентификатор следующей страницы результатов.
          type: string
      type: object
    ShipmentDTO:
      description: Информация об отгрузке.
      properties:
        id:
          description: Идентификатор отгрузки.
          format: int64
          type: integer
        planIntervalFrom:
          description: Начало планового интервала отгрузки.
          format: date-time
          type: string
        planIntervalTo:
          description: Конец планового интервала отгрузки.
          format: date-time
          type: string
        shipmentType:
          $ref: '#/components/schemas/ShipmentType'
        warehouse:
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        warehouseTo:
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        deliveryService:
          $ref: '#/components/schemas/DeliveryServiceDTO'
        palletsCount:
          $ref: '#/components/schemas/PalletsCountDTO'
        currentStatus:
          $ref: '#/components/schemas/ShipmentStatusChangeDTO'
        orderIds:
          description: Идентификаторы заказов в отгрузке.
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        availableActions:
          description: Доступные действия над отгрузкой.
          items:
            $ref: '#/components/schemas/ShipmentActionType'
          type: array
          uniqueItems: true
      type: object
    OrdersShipmentInfoDTO:
      description: Годные/негодные ярлыки по заказам в отгрузке.
      properties:
        orderIdsWithLabels:
          description: "Идентификаторы заказов в отгрузке, для которых можно распе\
            чатать ярлыки."
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        orderIdsWithoutLabels:
          description: "Идентификаторы заказов в отгрузке, для которых нельзя расп\
            ечатать ярлыки."
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      required:
      - orderIdsWithLabels
      - orderIdsWithoutLabels
      type: object
    ShipmentStatusType:
      description: |
        Статус отгрузки:

        * `OUTBOUND_CREATED` — формируется.
        * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать.
        * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке.
        * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи.
        * `ACCEPTED` — принята в сортировочном центре или пункте приема.
        * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями.
        * `FINISHED` — завершена.
        * `ERROR` — отменена из-за ошибки.
      enum:
      - OUTBOUND_CREATED
      - OUTBOUND_READY_FOR_CONFIRMATION
      - OUTBOUND_CONFIRMED
      - OUTBOUND_SIGNED
      - FINISHED
      - ACCEPTED
      - ACCEPTED_WITH_DISCREPANCIES
      - ERROR
      type: string
    SearchShipmentsResponseDTO:
      description: Информация об отгрузках.
      properties:
        shipments:
          description: Список с информацией об отгрузках.
          items:
            $ref: '#/components/schemas/ShipmentInfoDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      type: object
    DeleteOffersDTO:
      description: "Список товаров, которые не удалось удалить, потому что они хра\
        нятся на складе Маркета."
      properties:
        notDeletedOfferIds:
          description: "Список SKU товаров, которые не удалось удалить."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      type: object
    OfferCardStatusType:
      description: |
        Статус карточки товара:

        * HAS_CARD_CAN_NOT_UPDATE — **Карточка Маркета**.
        * HAS_CARD_CAN_UPDATE — **Можно дополнить**.
        * HAS_CARD_CAN_UPDATE_ERRORS — **Изменения не приняты**.
        * HAS_CARD_CAN_UPDATE_PROCESSING — **Изменения на проверке**.
        * NO_CARD_NEED_CONTENT — **Создайте карточку**.
        * NO_CARD_MARKET_WILL_CREATE — **Создаст Маркет**.
        * NO_CARD_ERRORS — **Не создана из-за ошибки**.
        * NO_CARD_PROCESSING — **Проверяем данные**.
        * NO_CARD_ADD_TO_CAMPAIGN — **Разместите товар в магазине**.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/content/statuses.html)
      enum:
      - HAS_CARD_CAN_NOT_UPDATE
      - HAS_CARD_CAN_UPDATE
      - HAS_CARD_CAN_UPDATE_ERRORS
      - HAS_CARD_CAN_UPDATE_PROCESSING
      - NO_CARD_NEED_CONTENT
      - NO_CARD_MARKET_WILL_CREATE
      - NO_CARD_ERRORS
      - NO_CARD_PROCESSING
      - NO_CARD_ADD_TO_CAMPAIGN
      type: string
    GetOfferMappingsResultDTO:
      description: Информация о товарах.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappings:
          description: Информация о товарах.
          items:
            $ref: '#/components/schemas/GetOfferMappingDTO'
          type: array
      type: object
    UpdateOfferMappingDTO:
      description: Информация о товаре.
      example:
        offer: null
        mapping:
          marketSku: 0
      properties:
        offer:
          $ref: '#/components/schemas/UpdateOfferDTO'
        mapping:
          $ref: '#/components/schemas/UpdateMappingDTO'
      required:
      - offer
      type: object
    SuggestedOfferDTO:
      description: Информация о товаре.
      example:
        vendor: LEVENHUK
        basicPrice:
          currencyId: RUR
          value: 0.08008281904610115
        name: "Ударная дрель Makita HP1630, 710 Вт"
        offerId: offerId
        description: description
        category: category
        barcodes:
        - "46012300000000"
        - "46012300000000"
        vendorCode: VNDR-0005A
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов, максимальная — 150.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 150
          type: string
        category:
          description: |
            Категория, к которой магазин относит свой товар. Она помогает точнее определить для товара категорию в каталоге Маркета.

            Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.

            Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.
          type: string
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          type: array
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов, максимальная — 6000.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        basicPrice:
          $ref: '#/components/schemas/BasePriceDTO'
      type: object
    GetSuggestedOfferMappingsResultDTO:
      description: Подобранные карточки на Маркете.
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestedOfferMappingDTO'
          type: array
      type: object
    AddOffersToArchiveDTO:
      description: "Товары, которые не удалось поместить в архив."
      properties:
        notArchivedOffers:
          description: "Список товаров, которые не удалось поместить в архив."
          items:
            $ref: '#/components/schemas/AddOffersToArchiveErrorDTO'
          type: array
      type: object
    DeleteOffersFromArchiveDTO:
      description: "Товары, которые не удалось восстановить из архива."
      properties:
        notUnarchivedOfferIds:
          description: "Список товаров, которые не удалось восстановить из архива."
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      type: object
    OfferMappingEntriesDTO:
      description: Информация о товарах в каталоге.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          items:
            $ref: '#/components/schemas/OfferMappingEntryDTO'
          type: array
      type: object
    OfferMappingEntryDTO:
      description: |
        Список товаров.

        В теле запроса можно передать от одного до 500 товаров.

        Обязательный параметр.
      example:
        offer:
          manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: null
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 2
          feedId: 0
          vendor: LEVENHUK
          price: 6.027456183070403
          transportUnitSize: 5
          id: id
          lifeTime:
            timePeriod: 4
            comment: comment
            timeUnit: null
          shelfLife:
            timePeriod: 4
            comment: comment
            timeUnit: null
          supplyScheduleDays:
          - null
          - null
          lifeTimeDays: 3
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: null
            - payload: payload
              type: null
            status: null
          shopSku: shopSku
          boxCount: 7
          minShipment: 1
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 9
          guaranteePeriod:
            timePeriod: 4
            comment: comment
            timeUnit: null
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 2
        mapping:
          modelId: 1
          marketSku: 7
          categoryId: 1
        awaitingModerationMapping:
          modelId: 1
          marketSku: 7
          categoryId: 1
        rejectedMapping:
          modelId: 1
          marketSku: 7
          categoryId: 1
      properties:
        offer:
          $ref: '#/components/schemas/MappingsOfferDTO'
        mapping:
          $ref: '#/components/schemas/OfferMappingDTO'
        awaitingModerationMapping:
          $ref: '#/components/schemas/OfferMappingDTO'
        rejectedMapping:
          $ref: '#/components/schemas/OfferMappingDTO'
      type: object
    MappingsOfferDTO:
      description: Информация о товарах в каталоге.
      example:
        manufacturerCountries:
        - manufacturerCountries
        - manufacturerCountries
        certificate: certificate
        description: description
        availability: null
        pictures:
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        manufacturer: manufacturer
        urls:
        - urls
        - urls
        deliveryDurationDays: 2
        feedId: 0
        vendor: LEVENHUK
        price: 6.027456183070403
        transportUnitSize: 5
        id: id
        lifeTime:
          timePeriod: 4
          comment: comment
          timeUnit: null
        shelfLife:
          timePeriod: 4
          comment: comment
          timeUnit: null
        supplyScheduleDays:
        - null
        - null
        lifeTimeDays: 3
        quantumOfSupply: 5
        barcodes:
        - "46012300000000"
        - "46012300000000"
        customsCommodityCodes:
        - customsCommodityCodes
        - customsCommodityCodes
        processingState:
          notes:
          - payload: payload
            type: null
          - payload: payload
            type: null
          status: null
        shopSku: shopSku
        boxCount: 7
        minShipment: 1
        name: "Ударная дрель Makita HP1630, 710 Вт"
        shelfLifeDays: 9
        guaranteePeriod:
          timePeriod: 4
          comment: comment
          timeUnit: null
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        guaranteePeriodDays: 2
      properties:
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов, максимальная — 150.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 150
          type: string
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        category:
          description: |
            Категория, к которой магазин относит свой товар. Она помогает точнее определить для товара категорию в каталоге Маркета.

            Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.

            Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.
          type: string
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов, максимальная — 6000.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        id:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        feedId:
          description: Идентификатор фида.
          format: int64
          type: integer
        price:
          description: Цена товара в рублях.
          type: number
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          type: array
        urls:
          description: |
            URL фотографии товара или страницы с описанием на вашем сайте.

            Переданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.

            Должен содержать один вложенный параметр url.
          items:
            type: string
          type: array
        pictures:
          description: |
            Ссылки (URL) изображений товара в хорошем качестве.

            Можно указать до 10 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.

            Обязательный параметр.

            Должен содержать хотя бы один вложенный параметр `picture`.
          items:
            type: string
          type: array
        manufacturer:
          description: |
            Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).

            Необязательный параметр.
          type: string
        manufacturerCountries:
          description: |
            Список стран, в которых произведен товар.

            Обязательный параметр.

            Должен содержать хотя бы одну, но не больше 5 стран.
          items:
            type: string
          type: array
        minShipment:
          description: |
            Минимальное количество единиц товара, которое вы поставляете на склад.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60.
          format: int32
          type: integer
        transportUnitSize:
          description: |
            Количество единиц товара в одной упаковке, которую вы поставляете на склад.

            Например, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6.
          format: int32
          type: integer
        quantumOfSupply:
          description: |
            Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12.
          format: int32
          type: integer
        deliveryDurationDays:
          description: "Срок, за который продавец поставляет товары на склад, в дн\
            ях."
          format: int32
          type: integer
        boxCount:
          description: |
            Сколько мест (если больше одного) занимает товар.

            Параметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр.
          format: int32
          type: integer
        customsCommodityCodes:
          description: |
            Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).

            Обязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).

            Может содержать только один вложенный код ТН ВЭД.
          items:
            type: string
          type: array
        weightDimensions:
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        supplyScheduleDays:
          description: "Дни недели, в которые продавец поставляет товары на склад."
          items:
            $ref: '#/components/schemas/DayOfWeekType'
          type: array
        shelfLifeDays:
          description: |
            {% note alert %}

            Параметр устарел и не рекомендуется к использованию. Вместо него используйте параметр `shelfLife`. Совместное использование обоих параметров приведет к ошибке.

            {% endnote %}

            Срок годности: через сколько дней товар станет непригоден для использования.
          format: int32
          type: integer
        lifeTimeDays:
          description: |
            {% note alert %}

            Параметр устарел и не рекомендуется к использованию. Вместо него используйте параметр `lifeTime`. Совместное использование обоих параметров приведет к ошибке.

            {% endnote %}

            Срок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.
          format: int32
          type: integer
        guaranteePeriodDays:
          description: |
            Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.
          format: int32
          type: integer
        processingState:
          $ref: '#/components/schemas/OfferProcessingStateDTO'
        availability:
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
        shelfLife:
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          $ref: '#/components/schemas/TimePeriodDTO'
        certificate:
          description: |
            Номер документа на товар.

            Перед указанием номера документ нужно загрузить в личном кабинете магазина. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html)
          type: string
      type: object
    OfferMappingSuggestionsListDTO:
      description: Список рекомендованных карточек товара.
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/EnrichedMappingsOfferDTO'
          type: array
      type: object
    UpdateBusinessOfferPriceDTO:
      description: Товар с новой ценой.
      example:
        price: null
        offerId: offerId
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        price:
          $ref: '#/components/schemas/UpdatePriceWithDiscountDTO'
      required:
      - offerId
      - price
      type: object
    OfferPriceDTO:
      description: Товар с информацией о новой цене на него.
      example:
        feed:
          id: 0
        shopSku: shopSku
        price:
          vat: 5
          discountBase: 1.4658129805029452
          currencyId: RUR
          value: 6.027456183070403
        marketSku: 5
        offerId: offerId
        id: id
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        id:
          deprecated: true
          description: |
            {% note alert "Это поле устарело" %}

            Не используйте его — это может привести к ошибкам.

            {% endnote %}

            Идентификатор предложения из прайс-листа.
          type: string
        feed:
          $ref: '#/components/schemas/OfferPriceFeedDTO'
        price:
          $ref: '#/components/schemas/PriceDTO'
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
      type: object
    OfferPriceListResponseDTO:
      description: Список цен на товары.
      properties:
        offers:
          description: Страница списка.
          items:
            $ref: '#/components/schemas/OfferPriceResponseDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        total:
          description: "Количество всех цен магазина, измененных через API."
          format: int32
          type: integer
      type: object
    OfferPriceByOfferIdsListResponseDTO:
      description: Список цен.
      properties:
        offers:
          description: Страница списка цен.
          items:
            $ref: '#/components/schemas/OfferPriceByOfferIdsResponseDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
      type: object
    SuggestOfferPriceDTO:
      description: "Товар, для которого требуется получить цены для продвижения."
      example:
        marketSku: 0
        offerId: offerId
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
      type: object
    SuggestPricesResultDTO:
      description: Результат запроса цен для продвижения.
      properties:
        offers:
          description: Список товаров с ценами для продвижения.
          items:
            $ref: '#/components/schemas/PriceSuggestOfferDTO'
          type: array
      type: object
    GetQuarantineOffersResultDTO:
      description: Список товаров в карантине.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров в карантине.
          items:
            $ref: '#/components/schemas/QuarantineOfferDTO'
          type: array
      type: object
    GetHiddenOffersResultDTO:
      description: |
        Список скрытых вами товаров.
      properties:
        total:
          deprecated: true
          description: |
            {% note alert "Это поле устарело" %}

            Не используйте его — это может привести к ошибкам.

            {% endnote %}

            Общее количество скрытых товаров магазина.
          type: integer
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        hiddenOffers:
          description: Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          type: array
      type: object
    HiddenOfferDTO:
      description: Информация о скрытии.
      example:
        ttlInHours: 6
        feedId: 0
        marketSku: 1
        offerId: offerId
        comment: comment
        priority: true
      properties:
        feedId:
          format: int64
          type: integer
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        ttlInHours:
          deprecated: true
          description: |
            {% note alert "Это поле устарело" %}

            Не используйте его — это может привести к ошибкам.

            {% endnote %}

            Количество часов до возобновления показа товара.

            Минимальное значение — `1`.

            Максимальное значение — `720`.

            Значение по умолчанию — `48`.

            Используется только совместно с параметром `priority="true"`.
          type: integer
        comment:
          deprecated: true
          description: |
            {% note alert "Это поле устарело" %}

            Не используйте его — это может привести к ошибкам.

            {% endnote %}

            Комментарий магазина.

            Максимальная длина комментария — 100 символов.

            Используется только совместно с параметром `priority="true"`. Если скрытие было без приоритета, комментарий не вернется в ответе.
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        priority:
          deprecated: true
          description: |
            {% note alert "Это поле устарело" %}

            Не используйте его — это может привести к ошибкам.

            {% endnote %}

            Приоритет скрытия предложений через API над скрытием в личном кабинете. Параметр принимает только значение true.
          type: boolean
      type: object
    GetActualStocksDTO:
      description: Информация по актуальным стокам.
      properties:
        skus:
          description: Информация о стоках.
          items:
            $ref: '#/components/schemas/StockDTO'
          type: array
      type: object
    StockDTO:
      description: Информация об остатках одного товара на одном из складов.
      example:
        warehouseId: 0
        sku: sku
        items:
        - count: 1205491236
          type: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        sku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        warehouseId:
          description: |
            Идентификатор склада.

            Узнать идентификатор склада вы можете в личном кабинете в разделе **Логистика → Склады**. Он указан в поле ID склада.

            Если вы работаете с общими остатками, вы можете посмотреть идентификатор склада в личном кабинете в разделе **Настройки → Настройки API** в блоке **Обновление данных об остатках товаров** или с помощью запроса [GET businesses/{businessId}/warehouses](../../reference/warehouses/getWarehouses.md).

            Если вы отвечаете на запрос Маркета, указывайте тот идентификатор, что пришел в запросе.
          format: int64
          type: integer
        items:
          description: |
            Информация об остатках товара на данном складе.
          items:
            $ref: '#/components/schemas/StockItemDTO'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - items
      - sku
      - warehouseId
      type: object
    GetWarehouseStocksDTO:
      description: Список складов с информацией об остатках на каждом из них.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        warehouses:
          description: Страница списка складов.
          items:
            $ref: '#/components/schemas/WarehouseOffersDTO'
          type: array
      type: object
    DeliveryServicesDTO:
      description: Информация о службах доставки.
      example:
        deliveryService:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        deliveryService:
          description: Информация о службе доставки.
          items:
            $ref: '#/components/schemas/DeliveryServiceInfoDTO'
          type: array
      type: object
    OrderStatsStatusType:
      description: |
        Текущий статус заказа:

        * `CANCELLED_BEFORE_PROCESSING` — заказ отменен до начала его обработки;

        * `CANCELLED_IN_DELIVERY` — заказ отменен во время его доставки;

        * `CANCELLED_IN_PROCESSING` — заказ отменен во время его обработки;

        * `DELIVERY` — заказ передан службе доставки;

        * `DELIVERED` — заказ доставлен;

        * `PARTIALLY_DELIVERED` — заказ частично доставлен;

        * `PARTIALLY_RETURNED` — заказ частично возвращен покупателем;

        * `PICKUP` — заказ доставлен в пункт выдачи;

            * Значение по умолчанию: `PICKUP_SERVICE_RECEIVED`;

            * `PICKUP_USER_RECEIVED` – покупатель получил заказ.

        * `PROCESSING` — заказ в обработке;

        * `REJECTED` — заказ создан, но не оплачен;

        * `RETURNED` — заказ полностью возвращен покупателем;

        * `LOST` — заказ утерян;

        * `UNKNOWN` — неизвестный статус заказа.
      enum:
      - CANCELLED_BEFORE_PROCESSING
      - CANCELLED_IN_DELIVERY
      - CANCELLED_IN_PROCESSING
      - DELIVERY
      - DELIVERED
      - PARTIALLY_DELIVERED
      - PARTIALLY_RETURNED
      - PENDING
      - PICKUP
      - PROCESSING
      - RESERVED
      - RETURNED
      - REJECTED
      - UNKNOWN
      - UNPAID
      - LOST
      type: string
    OrdersStatsDTO:
      description: Отчет по заказам.
      properties:
        orders:
          description: Список заказов.
          items:
            $ref: '#/components/schemas/OrdersStatsOrderDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      type: object
    GoodsStatsDTO:
      description: Отчет по товарам.
      properties:
        shopSkus:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/GoodsStatsGoodsDTO'
          type: array
      type: object
    ReportInfoDTO:
      description: Статус генерации и ссылка на готовый отчет.
      properties:
        status:
          $ref: '#/components/schemas/ReportStatusType'
        subStatus:
          $ref: '#/components/schemas/ReportSubStatusType'
        generationRequestedAt:
          description: Дата и время запроса на генерацию.
          format: date-time
          type: string
        generationFinishedAt:
          description: Дата и время завершения генерации.
          format: date-time
          type: string
        file:
          description: Ссылка на готовый отчет.
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          format: int64
          type: integer
      required:
      - generationRequestedAt
      - status
      type: object
    PlacementType:
      description: |
        Модель, по которой работает магазин:

        * `FBS` — FBS или Экспресс;
        * `FBY` — FBY;
        * `DBS` — DBS.
      enum:
      - FBS
      - FBY
      - DBS
      type: string
    GenerateReportDTO:
      description: "Идентификатор, который понадобится для отслеживания статуса ге\
        нерации и получения готового отчета."
      properties:
        reportId:
          description: "Идентификатор, который понадобится для отслеживания статус\
            а генерации и получения готового отчета."
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          format: int64
          type: integer
      required:
      - estimatedGenerationTime
      - reportId
      type: object
    ShowsSalesGroupingType:
      description: |
        Группировка данных отчета.
        Возможные значения:
        * `CATEGORIES` — группировка по категориям.
        * `OFFERS` — группировка по товарам.
      enum:
      - CATEGORIES
      - OFFERS
      type: string
    FullOutletDTO:
      allOf:
      - $ref: '#/components/schemas/OutletDTO'
      - properties:
          id:
            description: "Идентификатор точки продаж, присвоенный Яндекс Маркетом."
            format: int64
            type: integer
          status:
            $ref: '#/components/schemas/OutletStatusType'
          region:
            $ref: '#/components/schemas/RegionDTO'
          shopOutletId:
            description: "Идентификатор точки продаж, заданный магазином."
            type: string
          workingTime:
            description: Рабочее время.
            type: string
          moderationReason:
            description: Статус модерации.
            type: string
        type: object
      description: Информация о точке продаж.
      type: object
    ScrollingPagerDTO:
      allOf:
      - $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      - properties:
          prevPageToken:
            description: Идентификатор предыдущей страницы результатов.
            type: string
        type: object
      description: Информация о страницах результатов.
      type: object
    OutletDTO:
      description: Информация о точке продаж.
      properties:
        name:
          description: |
            Название точки продаж.
            Обязательный параметр.
          type: string
        type:
          $ref: '#/components/schemas/OutletType'
        coords:
          description: |
            Координаты точки продаж.

            Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.

            Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.
          type: string
        isMain:
          description: |
            Признак основной точки продаж.
            Возможные значения:
            * `false` — неосновная точка продаж.
            * `true` — основная точка продаж.
          type: boolean
        shopOutletCode:
          description: "Идентификатор точки продаж, присвоенный магазином."
          type: string
        visibility:
          $ref: '#/components/schemas/OutletVisibilityType'
        address:
          $ref: '#/components/schemas/OutletAddressDTO'
        phones:
          description: |
            Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.
            Обязательный параметр.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
        workingSchedule:
          $ref: '#/components/schemas/OutletWorkingScheduleDTO'
        deliveryRules:
          description: |
            Информация об условиях доставки для данной точки продаж.
            Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.
          items:
            $ref: '#/components/schemas/OutletDeliveryRuleDTO'
          type: array
        emails:
          description: |
            Адрес электронной почты точки продаж.
            Может содержать только один параметр `email`.
          items:
            description: |
              Адрес электронной почты точки продаж.
              Допускается любой адрес электронной почты, соответствующий стандарту RFC 2822.
              Выводится в виде строки.
            type: string
          maxItems: 1
          type: array
        storagePeriod:
          description: Срок хранения заказа в собственном пункте выдачи заказов. Считается
            в днях.
          format: int64
          type: integer
      required:
      - address
      - name
      - phones
      - type
      - workingSchedule
      type: object
    OutletResponseDTO:
      description: |
        Результат выполнения запроса.
        Выводится, если `status="OK"`.
      properties:
        id:
          description: "Идентификатор точки продаж, присвоенный Яндекс Маркетом."
          format: int64
          type: integer
      type: object
    OutletLicensesResponseDTO:
      description: Ответ на запрос информации о лицензиях для точек продаж.
      properties:
        licenses:
          description: Список лицензий.
          items:
            $ref: '#/components/schemas/FullOutletLicenseDTO'
          type: array
      type: object
    OutletLicenseDTO:
      description: Информация о лицензии.
      example:
        licenseType: null
        number: number
        dateOfExpiry: 2000-01-23T04:56:07.000+00:00
        outletId: 6
        id: 0
        dateOfIssue: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: |
            Идентификатор лицензии.

            Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса `GET /campaigns/{campaignId}/outlets/licenses`. При передаче информации о новой лицензии указывать идентификатор не нужно.

            Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.
          format: int64
          type: integer
        outletId:
          description: "Идентификатор точки продаж, для которой действительна лице\
            нзия."
          format: int64
          type: integer
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        number:
          description: Номер лицензии.
          type: string
        dateOfIssue:
          description: |
            Дата выдачи лицензии.

            Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.

            Обязательный параметр.

            Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.
          format: date-time
          type: string
        dateOfExpiry:
          description: |
            Дата окончания действия лицензии.

            Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.

            Обязательный параметр.

            Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.
          format: date-time
          type: string
      type: object
    FeedbackListDTO:
      description: Отзывы пользователей Яндекс.Маркета об указанном магазине.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        feedbackList:
          description: |
            Список отзывов.

            Содержит не более 20 отзывов.
          items:
            $ref: '#/components/schemas/FeedbackDTO'
          type: array
      type: object
    OffersDTO:
      description: Найденные предложения магазина.
      properties:
        offers:
          description: Список предложений магазина.
          items:
            $ref: '#/components/schemas/OfferDTO'
          type: array
      type: object
    OfferCampaignStatusType:
      description: |
        Статус товара:

        * `PUBLISHED` — **Готов к продаже**.
        * `CHECKING` — **На проверке**.
        * `DISABLED_BY_PARTNER` — **Скрыт вами**.
        * `REJECTED_BY_MARKET` — **Отклонен**.
        * `DISABLED_AUTOMATICALLY` — **Исправьте ошибки**.
        * `CREATING_CARD` — **Создается карточка**.
        * `NO_CARD` — **Нужна карточка**.
        * `NO_STOCKS` — **Нет на складе**.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/add/statuses.html)
      enum:
      - PUBLISHED
      - CHECKING
      - DISABLED_BY_PARTNER
      - DISABLED_AUTOMATICALLY
      - REJECTED_BY_MARKET
      - CREATING_CARD
      - NO_CARD
      - NO_STOCKS
      type: string
    GetCampaignOffersResultDTO:
      description: Список товаров в заданном магазине.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/GetCampaignOfferDTO'
          type: array
      type: object
    UpdateCampaignOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseCampaignOfferDTO'
      - properties:
          vat:
            description: |
              Ставка НДС, применяемая для товара. Задается цифрой:

              * 2 — 10%.
              * 5 — 0%.
              * 6 — не облагается НДС.
              * 7 — 20%.

              Если параметр не указан, используется ставка НДС, установленная в личном кабинете магазина.
            format: int32
            type: integer
        type: object
      description: Параметры размещения товара в магазине.
      type: object
    DeleteCampaignOffersDTO:
      description: "Список товаров, которые не удалось удалить, потому что они хра\
        нятся на складе Маркета."
      properties:
        notDeletedOfferIds:
          description: Список SKU.
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      type: object
    FieldStateType:
      description: |
        Фильтр по заполненности или незаполненности поля:

        * `SPECIFIED` — вывести товары, у которых поле заполнено;
        * `EMPTY` — вывести товары, у которых поле не заполнено.
      enum:
      - SPECIFIED
      - EMPTY
      type: string
    PriceCompetitivenessType:
      description: |
        Привлекательность цены:

        * `OPTIMAL` — привлекательная;
        * `AVERAGE` — умеренная;
        * `LOW` — непривлекательная.
      enum:
      - OPTIMAL
      - AVERAGE
      - LOW
      type: string
    OfferRecommendationsResultDTO:
      description: Список товаров с рекомендациями.
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerRecommendations:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/OfferRecommendationDTO'
          type: array
      type: object
    FeedDTO:
      description: Информация о прайс-листе.
      example:
        password: password
        download:
          error:
            description: description
            type: null
            httpStatusCode: 5
          status: null
        uploadDate: 2000-01-23T04:56:07.000+00:00
        publication:
          priceAndStockUpdate:
            fileTime: 2000-01-23T04:56:07.000+00:00
            publishedTime: 2000-01-23T04:56:07.000+00:00
          status: null
          full:
            fileTime: 2000-01-23T04:56:07.000+00:00
            publishedTime: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        placement:
          status: null
          totalOffersCount: 5
        login: login
        url: url
        content:
          rejectedOffersCount: 6
          error:
            type: null
          status: null
          totalOffersCount: 1
      properties:
        id:
          description: Идентификатор прайс-листа.
          format: int64
          type: integer
        login:
          description: |
            Логин для авторизации при скачивании прайс-листа.
            Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.
          type: string
        name:
          description: |
            Имя файла, содержащего прайс-лист.
            Параметр выводится при размещении прайс-листа на сервере Маркета.
          type: string
        password:
          description: |
            Пароль для авторизации при скачивании прайс-листа.
            Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.
          type: string
        uploadDate:
          description: |
            Дата загрузки прайс-листа на Маркет.
            Формат даты: `ДД-ММ-ГГГГ`.
            Параметр выводится при размещении прайс-листа на сервере Маркета.
          format: date-time
          type: string
        url:
          description: |
            URL прайс-листа.
            Параметр выводится при размещении прайс-листа на сайте магазина.
          type: string
        content:
          $ref: '#/components/schemas/FeedContentDTO'
        download:
          $ref: '#/components/schemas/FeedDownloadDTO'
        placement:
          $ref: '#/components/schemas/FeedPlacementDTO'
        publication:
          $ref: '#/components/schemas/FeedPublicationDTO'
      type: object
    FeedIndexLogsResultDTO:
      description: Результат выполнения запроса отчета по индексации прайс-листа.
      properties:
        feed:
          $ref: '#/components/schemas/FeedIndexLogsFeedDTO'
        indexLogRecords:
          description: Список отчетов по индексации прайс-листа.
          items:
            $ref: '#/components/schemas/FeedIndexLogsRecordDTO'
          type: array
        total:
          description: Количество отчетов на всех страницах выходных данных.
          format: int64
          type: integer
      type: object
    FeedParameterDTO:
      description: Параметр прайс-листа.
      example:
        deleted: true
        values:
        - 0
        - 0
        name: name
      properties:
        deleted:
          description: |
            Удалить ли значение параметра.

            Возможное значение:
            * `true` — удалить значение параметра.

            Используется вместе с параметром `name`.
          type: boolean
        name:
          description: |
            Название параметра.

            Возможное значение:
            - `reparseIntervalMinutes` — период скачивания прайс-листа.
            Маркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.

            {% note alert %}

            Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.

            {% endnote %}

            Обязательный параметр.
          type: string
        values:
          description: |
            Значения параметра.

            Используется вместе с параметром `name`.
          items:
            description: |
              Значение параметра.
              Возможное значение:
              - Для `name=reparseIntervalMinutes` — минуты.
              Минимальное значение: `20`.
              Максимальное значение: `1440`. Рекомендуем указывать это значение.

              Для формата JSON указывается в виде числа.
            format: int32
            type: integer
          type: array
      required:
      - name
      type: object
    FeedCategoryDTO:
      description: Список категорий.
      example:
        feedId: 0
        name: name
        id: id
        parentId: parentId
      properties:
        feedId:
          description: Идентификатор прайс-листа.
          format: int64
          type: integer
        id:
          description: Идентификатор категории.
          type: string
        name:
          description: Название категории.
          type: string
        parentId:
          description: |
            Идентификатор родительской категории.
            Не выводится, если категория — корневая.
          type: string
      type: object
    ModelDTO:
      description: Модель товара.
      properties:
        id:
          description: Идентификатор модели товара.
          format: int64
          type: integer
        name:
          description: Название модели товара.
          type: string
        prices:
          $ref: '#/components/schemas/ModelPriceDTO'
      type: object
    RegionalModelInfoDTO:
      description: Региональная информация.
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyType'
        regionId:
          description: |
            Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).

            Информацию о регионе по идентификатору можно получить с помощью запроса `GET /regions/{regionId}`.
          format: int64
          type: integer
      type: object
    EnrichedModelDTO:
      allOf:
      - $ref: '#/components/schemas/ModelDTO'
      - properties:
          offers:
            description: |
              Список первых десяти предложений, расположенных на карточке модели.

              В ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них.
            items:
              $ref: '#/components/schemas/ModelOfferDTO'
            type: array
          offlineOffers:
            description: Суммарное количество предложений в розничных магазинах в
              регионе. Учитываются все предложения от каждого магазина.
            format: int32
            type: integer
          onlineOffers:
            description: Суммарное количество предложений в интернет-магазинах в регионе.
              Учитываются все предложения от каждого магазина.
            format: int32
            type: integer
        type: object
      description: Модель товара.
      type: object
    SkuBidItemDTO:
      description: Список товаров и ставок на них.
      example:
        sku: sku
        bid: 570
      properties:
        sku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
      required:
      - bid
      - sku
      type: object
    GetBidsInfoResponseDTO:
      description: Список товаров с указанными ставками.
      properties:
        bids:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - bids
      type: object
    GetBidsRecommendationsResponseDTO:
      description: Список товаров с рекомендованными ставками.
      properties:
        recommendations:
          description: Список товаров с рекомендованными ставками.
          items:
            $ref: '#/components/schemas/SkuBidRecommendationItemDTO'
          type: array
      required:
      - recommendations
      type: object
    WarehousesDTO:
      description: Информация о складах и группах складов.
      properties:
        warehouses:
          description: "Список складов, не входящих в группы."
          items:
            $ref: '#/components/schemas/WarehouseDTO'
          type: array
        warehouseGroups:
          description: Список групп складов.
          items:
            $ref: '#/components/schemas/WarehouseGroupDTO'
          type: array
      type: object
    FulfillmentWarehousesDTO:
      description: Список складов Маркета (FBY).
      properties:
        warehouses:
          description: Список складов Маркета (FBY).
          items:
            $ref: '#/components/schemas/FulfillmentWarehouseDTO'
          type: array
      type: object
    CategoryContentParametersDTO:
      description: Информация о параметрах категории.
      properties:
        categoryId:
          description: Идентификатор категории на Маркете.
          format: int32
          type: integer
        parameters:
          description: Список характеристик.
          items:
            $ref: '#/components/schemas/CategoryParameterDTO'
          type: array
      required:
      - categoryId
      type: object
    CategoryId:
      description: Идентификатор категории на Маркете.
      format: int32
      type: integer
    OfferCardsContentStatusDTO:
      description: Список товаров с информацией о состоянии карточек.
      properties:
        offerCards:
          description: Страница списка товаров с информацией о состоянии карточек.
          items:
            $ref: '#/components/schemas/OfferCardDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      type: object
    OfferContentDTO:
      description: Товар с указанными характеристиками.
      example:
        offerId: offerId
        categoryId: 0
        parameterValues:
        - valueId: 1
          parameterId: 6
          value: value
        - valueId: 1
          parameterId: 6
          value: value
        - valueId: 1
          parameterId: 6
          value: value
        - valueId: 1
          parameterId: 6
          value: value
        - valueId: 1
          parameterId: 6
          value: value
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        categoryId:
          description: Идентификатор категории на Маркете.
          format: int32
          type: integer
        parameterValues:
          description: |
            Список характеристик с их значениями.
            Обновляется всегда целиком.
            Максимальное количество — 300.
          items:
            $ref: '#/components/schemas/ParameterValueDTO'
          maxItems: 300
          minItems: 1
          type: array
      required:
      - categoryId
      - offerId
      - parameterValues
      type: object
    UpdateOfferContentResultDTO:
      description: "Ошибки и предупреждения, касающиеся переданных характеристик т\
        овара."
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        errors:
          description: "Ошибки, препятствующие отправке контента в каталог."
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
          type: array
        warnings:
          description: "Предупреждения, не препятствующие отправке контента в ката\
            лог."
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
          type: array
      required:
      - offerId
      type: object
    BusinessDTO:
      description: Информацию о кабинете.
      example:
        name: name
        id: 1
      properties:
        id:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        name:
          description: Название бизнеса.
          type: string
      type: object
    ApiErrorDTO:
      description: Общий формат ошибки.
      properties:
        code:
          description: Код ошибки.
          type: string
        message:
          description: Описание ошибки.
          type: string
      required:
      - code
      type: object
    CampaignSettingsLocalRegionDTO:
      description: Информация о своем регионе магазина.
      example:
        delivery:
          schedule:
            customWorkingDays:
            - 23-09-2022
            - 23-09-2022
            period:
              fromDate: 23-09-2022
              toDate: 23-09-2022
            customHolidays:
            - 23-09-2022
            - 23-09-2022
            weeklyHolidays:
            - 1
            - 1
            availableOnHolidays: true
            totalHolidays:
            - 23-09-2022
            - 23-09-2022
        name: name
        id: 6
        type: null
        deliveryOptionsSource: null
      properties:
        id:
          description: Идентификатор региона.
          format: int64
          type: integer
        name:
          description: Название региона.
          type: string
        type:
          $ref: '#/components/schemas/RegionType'
        deliveryOptionsSource:
          $ref: '#/components/schemas/CampaignSettingsScheduleSourceType'
        delivery:
          $ref: '#/components/schemas/CampaignSettingsDeliveryDTO'
      type: object
    RegionType:
      description: |
        Тип региона.

        Возможные значения:

        * `CITY_DISTRICT` — район города.

        * `CITY` — крупный город.

        * `CONTINENT` — континент.

        * `COUNTRY_DISTRICT` — область.

        * `COUNTRY` — страна.

        * `REGION` — регион.

        * `REPUBLIC_AREA` — район субъекта федерации.

        * `REPUBLIC` — субъект федерации.

        * `SUBWAY_STATION` — станция метро.

        * `VILLAGE` — город.

        * `OTHER` — неизвестный регион.
      enum:
      - OTHER
      - CONTINENT
      - REGION
      - COUNTRY
      - COUNTRY_DISTRICT
      - REPUBLIC
      - CITY
      - VILLAGE
      - CITY_DISTRICT
      - SUBWAY_STATION
      - REPUBLIC_AREA
      type: string
    DateDdMmYyyyHhMmSs:
      example: 23-09-2022 09:12:41
      format: date-dd-MM-yyyy-HH-mm-ss
      type: string
    OrderPaymentType:
      description: |
        Тип оплаты заказа:

        * `PREPAID` — оплата при оформлении заказа.

        * `POSTPAID` — оплата при получении заказа.

        Если параметр отсутствует, заказ будет оплачен при получении.
      enum:
      - PREPAID
      - POSTPAID
      - UNKNOWN
      type: string
    OrderPaymentMethodType:
      description: |
        Способ оплаты заказа.

        Возможные значения, если выбрана оплата при оформлении заказа (`"paymentType": "PREPAID"`):

        * `YANDEX` — банковской картой.

        * `APPLE_PAY` — Apple Pay.

        * `GOOGLE_PAY` — Google Pay.

        * `CREDIT` — в кредит.

        * `TINKOFF_CREDIT` — в кредит в Тинькофф Банке.

        * `TINKOFF_INSTALLMENTS` — рассрочка в Тинькофф Банке.

        * `EXTERNAL_CERTIFICATE` — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).

        * `SBP` — через систему быстрых платежей.

        Возможные значения, если выбрана оплата при получении заказа (`"paymentType": "POSTPAID"`):

        * `CARD_ON_DELIVERY` — банковской картой.

        * `CASH_ON_DELIVERY` — наличными.

        Значение по умолчанию: `CASH_ON_DELIVERY`.

        * `B2B_ACCOUNT_PREPAYMENT` — заказ оплачивает организация.

        * `B2B_ACCOUNT_POSTPAYMENT` — заказ оплачивает организация после доставки.
      enum:
      - SHOP_PREPAID
      - BANK_CARD
      - YANDEX_MONEY
      - CASH_ON_DELIVERY
      - CARD_ON_DELIVERY
      - YANDEX
      - APPLE_PAY
      - EXTERNAL_CERTIFICATE
      - CREDIT
      - INSTALLMENT
      - GOOGLE_PAY
      - TINKOFF_CREDIT
      - SBP
      - TINKOFF_INSTALLMENTS
      - B2B_ACCOUNT_PREPAYMENT
      - B2B_ACCOUNT_POSTPAYMENT
      - UNKNOWN
      type: string
    OrderItemDTO:
      description: Список товаров в заказе.
      example:
        feedCategoryId: feedCategoryId
        offerName: offerName
        subsidy: 1.1730742509559433
        instances:
        - rnpt: rnpt
          gtd: gtd
          cisFull: cisFull
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          cisFull: cisFull
          uin: uin
          cis: cis
        priceBeforeDiscount: 6.84685269835264
        count: 7
        vat: null
        requiredInstanceTypes:
        - null
        - null
        buyerPriceBeforeDiscount: 1.4894159098541704
        shopSku: shopSku
        feedId: 7
        price: 1.2315135367772556
        partnerWarehouseId: partnerWarehouseId
        subsidies:
        - amount: 9.369310271410669
          type: null
        - amount: 9.369310271410669
          type: null
        offerId: offerId
        buyerPrice: 1.0246457001441578
        details:
        - updateDate: 23-09-2022
          itemStatus: null
          itemCount: 9
        - updateDate: 23-09-2022
          itemStatus: null
          itemCount: 9
        id: 4
        promos:
        - subsidy: 5.025004791520295
          shopPromoId: shopPromoId
          discount: 4.965218492984954
          marketPromoId: marketPromoId
          type: null
        - subsidy: 5.025004791520295
          shopPromoId: shopPromoId
          discount: 4.965218492984954
          marketPromoId: marketPromoId
          type: null
      properties:
        id:
          description: Идентификатор товара в заказе.
          format: int64
          type: integer
        feedId:
          description: Идентификатор каталога товаров.
          format: int64
          type: integer
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        feedCategoryId:
          description: "Идентификатор категории, указанный в каталоге."
          type: string
        offerName:
          description: Название товара.
          type: string
        price:
          description: |
            Цена товара в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidy`).

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        buyerPrice:
          description: |
            Цена товара в валюте покупателя. В цене уже учтены скидки по:

            * акциям;
            * купонам;
            * промокодам.

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        buyerPriceBeforeDiscount:
          description: |
            Стоимость товара в валюте покупателя до применения скидок.

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        priceBeforeDiscount:
          description: |
            Стоимость товара в валюте магазина до применения скидок.

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        count:
          description: Количество товара.
          type: integer
        vat:
          $ref: '#/components/schemas/OrderVatType'
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        subsidy:
          description: |
            Общее вознаграждение партнеру за все скидки на товар:

            * по промокодам;
            * по купонам;
            * по баллам кешбэка по подписке Яндекс Плюс;
            * по акциям.

            Передается в валюте заказа, для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        partnerWarehouseId:
          description: |
            Идентификатор склада в системе партнера, на который сформирован заказ.

            {% note alert %}

            Параметр устарел, временно поддерживается, но не доступен для ввода и редактирования.

            {% endnote %}
          type: string
        promos:
          description: "Информация о вознаграждениях партнеру за скидки на товар п\
            о промокодам, купонам и акциям."
          items:
            $ref: '#/components/schemas/OrderItemPromoDTO'
          type: array
        instances:
          description: |
            Информация о маркировке единиц товара.

            Возвращаются данные для маркировки, переданные в запросе `PUT /campaigns/{campaignId}/orders/{orderId}/cis`.

            Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
          type: array
        details:
          description: |
            Информация об удалении товара из заказа.
          items:
            $ref: '#/components/schemas/OrderItemDetailDTO'
          type: array
        subsidies:
          description: Список субсидий по типам.
          items:
            $ref: '#/components/schemas/OrderItemSubsidyDTO'
          type: array
        requiredInstanceTypes:
          description: Список необходимых маркировок товара.
          items:
            $ref: '#/components/schemas/OrderItemInstanceType'
          type: array
      type: object
    OrderItemSubsidyDTO:
      description: |
        Общее вознаграждение партнеру за все скидки на товар:

        * по промокодам;
        * по купонам;
        * по баллам кешбэка по подписке Яндекс Плюс;
        * по акциям.

        Передается в валюте заказа, для отделения целой части от дробной используется точка.
      example:
        amount: 9.369310271410669
        type: null
      properties:
        type:
          $ref: '#/components/schemas/OrderSubsidyType'
        amount:
          description: Сумма субсидии.
          format: decimal
          type: number
      type: object
    OrderDeliveryDTO:
      description: Информация о доставке.
      example:
        dispatchType: null
        address:
          country: country
          city: city
          postcode: postcode
          gps:
            latitude: 8.762042012749001
            longitude: 9.018348186070783
          house: house
          subway: subway
          phone: phone
          street: street
          district: district
          recipient: recipient
          entryphone: entryphone
          block: block
          entrance: entrance
          floor: floor
          apartment: apartment
        liftType: null
        deliveryServiceId: 6
        vat: null
        estimated: true
        dates:
          fromDate: 23-09-2022
          toDate: 23-09-2022
          fromTime: fromTime
          toTime: toTime
          realDeliveryDate: 23-09-2022
        type: null
        serviceName: serviceName
        shipments:
        - boxes:
          - fulfilmentId: fulfilmentId
            id: 2
          - fulfilmentId: fulfilmentId
            id: 2
          id: 1
          shipmentDate: 23-09-2022
          shipmentTime: shipmentTime
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 6
          - trackCode: trackCode
            deliveryServiceId: 6
          status: null
        - boxes:
          - fulfilmentId: fulfilmentId
            id: 2
          - fulfilmentId: fulfilmentId
            id: 2
          id: 1
          shipmentDate: 23-09-2022
          shipmentTime: shipmentTime
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 6
          - trackCode: trackCode
            deliveryServiceId: 6
          status: null
        tracks:
        - trackCode: trackCode
          deliveryServiceId: 6
        - trackCode: trackCode
          deliveryServiceId: 6
        courier:
          vehicleDescription: vehicleDescription
          phone: phone
          phoneExtension: phoneExtension
          fullName: fullName
          vehicleNumber: vehicleNumber
        price: 6.683562403749608
        outletStorageLimitDate: 23-09-2022
        eacType: null
        liftPrice: 3.5571952270680973
        eacCode: eacCode
        id: id
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: null
        deliveryPartnerType: null
        outletCode: outletCode
      properties:
        id:
          description: |
            Идентификатор доставки, присвоенный магазином.

            Указывается, только если магазин передал данный идентификатор в ответе на запрос методом `POST /cart`.
          type: string
        type:
          $ref: '#/components/schemas/OrderDeliveryType'
        serviceName:
          description: Наименование службы доставки.
          type: string
        price:
          description: |
            Стоимость доставки в валюте заказа.

            Для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        deliveryPartnerType:
          $ref: '#/components/schemas/OrderDeliveryPartnerType'
        courier:
          $ref: '#/components/schemas/OrderCourierDTO'
        dates:
          $ref: '#/components/schemas/OrderDeliveryDatesDTO'
        region:
          $ref: '#/components/schemas/RegionDTO'
        address:
          $ref: '#/components/schemas/OrderDeliveryAddressDTO'
        vat:
          $ref: '#/components/schemas/OrderVatType'
        deliveryServiceId:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        liftType:
          $ref: '#/components/schemas/OrderLiftType'
        liftPrice:
          description: Стоимость подъема на этаж.
          format: decimal
          type: number
        outletCode:
          description: |
            Идентификатор пункта самовывоза, выбранного покупателем для получения заказа.

            Идентификатор указывается:

            * в личном кабинете магазина при создании или редактировании точки продаж.

            Параметр указывается, если `type=PICKUP`.
          type: string
        outletStorageLimitDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        dispatchType:
          $ref: '#/components/schemas/OrderDeliveryDispatchType'
        tracks:
          description: Информация для отслеживания перемещений посылки.
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
          type: array
        shipments:
          description: Информация о посылках.
          items:
            $ref: '#/components/schemas/OrderShipmentDTO'
          type: array
        estimated:
          description: Приблизительная ли дата доставки.
          type: boolean
        eacType:
          $ref: '#/components/schemas/OrderDeliveryEacType'
        eacCode:
          description: |
            Код подтверждения ЭАПП (для типа MERCHANT_TO_COURIER).
          type: string
      type: object
    OrderTaxSystemType:
      description: |
        Система налогообложения (СНО) магазина на момент оформления заказа:

        * `ECHN` — единый сельскохозяйственный налог (ЕСХН).

        * `ENVD` — единый налог на вмененный доход (ЕНВД).

        * `OSN` — общая система налогообложения (ОСН).

        * `PSN` — патентная система налогообложения (ПСН).

        * `USN` — упрощенная система налогообложения (УСН).

        * `USN_MINUS_COST` — упрощенная система налогообложения, доходы, уменьшенные на величину расходов (УСН «Доходы минус расходы»).

        Используется только совместно с параметром `payment-method=YANDEX`.
      enum:
      - OSN
      - USN
      - USN_MINUS_COST
      - ENVD
      - ECHN
      - PSN
      - NPD
      - UNKNOWN_VALUE
      type: string
    BriefOrderItemInstanceDTO:
      description: |
        Идентификатор единицы товара.

        Заполните только одно поле в зависимости от того, в какой системе маркирован товар.

        Подробно о работе с маркируемыми товарами рассказано [в Справке](https://yandex.ru/support/marketplace/orders/cz.html).
      example:
        rnpt: rnpt
        gtd: gtd
        uin: uin
        cis: cis
      properties:
        cis:
          description: |
            Код «Честного знака» для единицы товара.

            {% note warning %}

            Не экранируйте косую черту в коде символа-разделителя `\u001d`!

            ✅ `01030410947874432155Qbag!\u001d93Zjqw`

            ❌ `01030410947874432155Qbag!\\u001d93Zjqw`

            Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\` и `\"`

            {% endnote %}
          type: string
        uin:
          description: |
            Уникальный идентификационный номер ювелирного изделия.

            Представляет собой число из 16 цифр.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
      type: object
    ApiResponseStatusType:
      description: Тип ответа.
      enum:
      - OK
      - ERROR
      type: string
    BriefOrderItemDTO:
      description: Информация о маркированном товаре.
      properties:
        id:
          description: Идентификатор товара в заказе.
          format: int64
          type: integer
        vat:
          $ref: '#/components/schemas/OrderVatType'
        count:
          description: Количество единиц товара.
          format: int32
          type: integer
        price:
          description: |
            Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.
          type: number
        feedId:
          description: "Идентификатор каталога, в котором указан товар."
          format: int64
          type: integer
        feedCategoryId:
          description: "Идентификатор категории, в которую входит товар."
          type: string
        offerName:
          description: Название товара.
          type: string
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        instances:
          description: Переданные вами коды маркировки.
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
          type: array
      type: object
    OrderStatusChangeDeliveryDTO:
      description: Информация о доставке.
      example:
        dates:
          realDeliveryDate: 2000-01-23
      properties:
        dates:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDatesDTO'
      type: object
    UpdateOrderStatusDTO:
      description: Список заказов.
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        updateStatus:
          $ref: '#/components/schemas/OrderUpdateStatusType'
        errorDetails:
          description: |
            Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.

            Возвращается, если параметр `updateStatus` принимает значение `ERROR`.
          type: string
      type: object
    ParcelBoxDTO:
      description: "Элемент отображает одно грузовое место. Вложенные поля больше\
        \ не используются, передавайте элемент пустым в запросах и не обращайте вн\
        имание на содержимое в ответах."
      properties:
        id:
          description: Поле больше не используется. Не передавайте его в запросах
            и не обращайте на него внимания в ответах.
          format: int64
          type: integer
        fulfilmentId:
          description: Поле больше не используется. Не передавайте его в запросах
            и не обращайте на него внимания в ответах.
          pattern: "^[\\p{Alnum}- ]*$"
          type: string
      type: object
    OrderBuyerType:
      description: |
        Кто покупатель:

        * `PERSON` — физическое лицо;
        * `BUSINESS` — организация.
      enum:
      - PERSON
      - BUSINESS
      type: string
    EacVerificationStatusType:
      description: |
        Статус проверки кода подтверждения:

        * `ACCEPTED` — код верный;
        * `REJECTED` — код неверный;
        * `NEED_UPDATE` — Маркет отправит новый код. Значение возвращается, если превышено количество попыток отправки кода.
      enum:
      - ACCEPTED
      - REJECTED
      - NEED_UPDATE
      type: string
    ParcelBoxLabelDTO:
      description: Информация о ярлыке для грузового места.
      properties:
        url:
          description: |
            Соответствует URL, по которому выполняется запрос `GET /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label`.
          type: string
        supplierName:
          description: Юридическое название магазина.
          type: string
        deliveryServiceName:
          description: Юридическое название службы доставки.
          type: string
        orderId:
          description: Идентификатор заказа в системе Маркета.
          format: int64
          type: integer
        orderNum:
          description: |
            Идентификатор заказа в информационной системе магазина.

            Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.
          type: string
        recipientName:
          description: Фамилия и инициалы получателя заказа.
          type: string
        fulfilmentId:
          description: |
            Идентификатор грузового места в информационной системе магазина.

            Возвращается в формате: номер заказа на Маркете-номер грузового места. Например, 7206821‑1, 7206821‑2 и т. д.
          type: string
        place:
          description: |
            Номер грузового места в заказе. Возвращается в формате: номер места/общее количество мест.
          type: string
        weight:
          description: |
            Устаревший параметр.

            Общая масса всех товаров в заказе. Возвращается в формате: 'weight' кг.
          type: string
        deliveryServiceId:
          description: Идентификатор службы доставки.
          type: string
        deliveryAddress:
          description: Адрес получателя.
          type: string
        shipmentDate:
          description: Дата отгрузки в формате dd.MM.yyyy.
          type: string
      required:
      - deliveryServiceId
      - deliveryServiceName
      - fulfilmentId
      - orderId
      - orderNum
      - place
      - recipientName
      - supplierName
      - url
      - weight
      type: object
    LogisticPickupPointDTO:
      description: Описание пункта вывоза для возврата.
      properties:
        id:
          description: Идентификатор пункта вывоза.
          format: int64
          type: integer
        name:
          description: Название пункта вывоза.
          type: string
        address:
          $ref: '#/components/schemas/PickupAddressDTO'
        instruction:
          description: Дополнительные инструкции к вывозу.
          type: string
        type:
          $ref: '#/components/schemas/LogisticPointType'
        logisticPartnerId:
          description: "Идентификатор логистического партнера, к которому относитс\
            я логистическая точка."
          format: int64
          type: integer
      type: object
    RecipientType:
      description: |
        Способ возврата товара покупателем:

        * `SHOP` — в точку возврата магазина.

        * `DELIVERY_SERVICE` — отправить курьером.

        * `POST` — почта.
      enum:
      - SHOP
      - DELIVERY_SERVICE
      - POST
      type: string
    ReturnShipmentStatusType:
      description: |
        Статус передачи возврата:

        * CREATED — возврат создан.

        * RECEIVED — принят у покупателя.

        * IN_TRANSIT — возврат в пути.

        * READY_FOR_PICKUP — возврат готов к выдаче магазину.

        * PICKED — возврат выдан магазину.

        * LOST — возврат утерян при транспортировке.

        * CANCELLED — возврат отменен.

        * FULFILMENT_RECEIVED — возврат принят на складе Маркета.

        * PREPARED_FOR_UTILIZATION — возврат передан в утилизацию.

        * UTILIZED — возврат утилизирован.
      enum:
      - CREATED
      - RECEIVED
      - IN_TRANSIT
      - READY_FOR_PICKUP
      - PICKED
      - LOST
      - EXPIRED
      - CANCELLED
      - FULFILMENT_RECEIVED
      - PREPARED_FOR_UTILIZATION
      - NOT_IN_DEMAND
      - UTILIZED
      type: string
    ReturnItemDTO:
      description: Список товаров в возврате.
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        count:
          description: Количество товаров.
          format: int64
          type: integer
        decisions:
          description: Список решений по возврату.
          items:
            $ref: '#/components/schemas/ReturnDecisionDTO'
          type: array
        instances:
          description: Список логистических позиций возврата.
          items:
            $ref: '#/components/schemas/ReturnInstanceDTO'
          type: array
        tracks:
          description: Список трек-кодов для почтовых отправлений.
          items:
            $ref: '#/components/schemas/TrackDTO'
          type: array
      required:
      - count
      - shopSku
      type: object
    ShipmentType:
      description: |
        Способ отгрузки заказов:

        * `IMPORT` — вы самостоятельно привозите заказы в выбранный сортировочный центр или пункт приема заказов.
        * `WITHDRAW` — вы отгружаете заказы со своего склада курьерам Яндекс Маркета.
      enum:
      - IMPORT
      - WITHDRAW
      type: string
    PartnerShipmentWarehouseDTO:
      description: Данные о складе отправления.
      properties:
        id:
          description: Идентификатор склада отправления.
          format: int64
          type: integer
        name:
          description: Наименование склада отправления.
          type: string
        address:
          description: Адрес склада отправления.
          type: string
      type: object
    DeliveryServiceDTO:
      description: Служба доставки.
      properties:
        id:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        name:
          description: Наименование службы доставки.
          type: string
      type: object
    PalletsCountDTO:
      description: Количество палет в отгрузке.
      properties:
        planned:
          description: "Количество палет, которое заявил продавец."
          format: int32
          type: integer
        fact:
          description: "Количество палет, которое приняли в сортировочном центре."
          format: int32
          type: integer
      type: object
    ShipmentStatusChangeDTO:
      description: Статус отгрузки.
      properties:
        status:
          $ref: '#/components/schemas/ShipmentStatusType'
        description:
          description: Описание статуса отгрузки.
          type: string
        updateTime:
          description: Время последнего изменения статуса отгрузки.
          format: date-time
          type: string
      type: object
    ShipmentActionType:
      description: |
        Действия с отгрузкой:

        * `CONFIRM` — подтвердить отгрузку.
        * `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки.
        * `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов.
        * `DOWNLOAD_DISCREPANCY_ACT` — скачать акт о расхождениях.
        * `CHANGE_PALLETS_COUNT` — указать количество палет.
      enum:
      - CONFIRM
      - DOWNLOAD_ACT
      - DOWNLOAD_INBOUND_ACT
      - DOWNLOAD_DISCREPANCY_ACT
      - CHANGE_PALLETS_COUNT
      type: string
    ShipmentInfoDTO:
      description: Список с информацией об отгрузках.
      properties:
        id:
          description: Идентификатор отгрузки.
          format: int64
          type: integer
        planIntervalFrom:
          description: Начало планового интервала отгрузки.
          format: date-time
          type: string
        planIntervalTo:
          description: Конец планового интервала отгрузки.
          format: date-time
          type: string
        shipmentType:
          $ref: '#/components/schemas/ShipmentType'
        externalId:
          description: "Идентификатор отгрузки в вашей системе. Если вы еще не пер\
            едавали идентификатор, вернется идентификатор из параметра `id`."
          type: string
        status:
          $ref: '#/components/schemas/ShipmentStatusType'
        statusDescription:
          description: Описание статуса отгрузки.
          type: string
        deliveryService:
          $ref: '#/components/schemas/DeliveryServiceDTO'
        draftCount:
          description: "Количество заказов, запланированных к отгрузке."
          format: int32
          type: integer
        plannedCount:
          description: Количество отгруженных заказов.
          format: int32
          type: integer
        factCount:
          description: "Количество заказов, принятых в сортировочном центре или пу\
            нкте приема."
          format: int32
          type: integer
      type: object
    GetOfferMappingDTO:
      description: Информация о товаре.
      properties:
        offer:
          $ref: '#/components/schemas/GetOfferDTO'
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
      type: object
    UpdateOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseOfferDTO'
      - properties:
          purchasePrice:
            $ref: '#/components/schemas/BasePriceDTO'
          additionalExpenses:
            $ref: '#/components/schemas/BasePriceDTO'
          cofinancePrice:
            $ref: '#/components/schemas/BasePriceDTO'
        type: object
      description: Параметры товара.
      type: object
    UpdateMappingDTO:
      description: "Карточка на Маркете, которая, с вашей точки зрения, подходит т\
        овару. Чтобы определить идентификатор подходящей карточки, воспользуйтесь\
        \ поиском в кабинете (**Товары** → **Каталог** → **Загрузить товары**)."
      example:
        marketSku: 0
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
      type: object
    OfferName:
      description: |
        Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

        Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

        Оптимальная длина — 50–60 символов, максимальная — 150.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
      example: "Ударная дрель Makita HP1630, 710 Вт"
      maxLength: 150
      type: string
    OfferCategory:
      description: |
        Категория, к которой магазин относит свой товар. Она помогает точнее определить для товара категорию в каталоге Маркета.

        Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.

        Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.
      type: string
    OfferVendor:
      description: "Название бренда или производителя. Должно быть записано так, к\
        ак его пишет сам бренд."
      example: LEVENHUK
      type: string
    OfferBarcodes:
      description: |+
        Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

        Для книг указывайте ISBN.

        Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

        [Что такое GTIN](*gtin)

      items:
        example: "46012300000000"
        type: string
      type: array
    OfferDescription:
      description: |
        Подробное описание товара: например, его преимущества и особенности.

        Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

        Можно использовать теги:

        * \<h>, \<h1>, \<h2> и так далее — для заголовков;
        * \<br> и \<p> — для переноса строки;
        * \<ol> — для нумерованного списка;
        * \<ul> — для маркированного списка;
        * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
        * \<div> — поддерживается, но не влияет на отображение текста.

        Оптимальная длина — 400–600 символов, максимальная — 6000.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
      maxLength: 6000
      type: string
    OfferVendorCode:
      description: Артикул товара от производителя.
      example: VNDR-0005A
      type: string
    BasePriceDTO:
      description: Цена на товар.
      example:
        currencyId: RUR
        value: 0.08008281904610115
      properties:
        value:
          description: Значение.
          exclusiveMinimum: true
          minimum: 0
          type: number
        currencyId:
          description: |
            Валюта.

            Если `BasePriceDTO` присутствует в запросе, указывайте `RUR` — российский рубль.
          example: RUR
          type: string
      required:
      - currencyId
      - value
      type: object
    SuggestedOfferMappingDTO:
      description: Товар с соответствующей карточкой на Маркете.
      properties:
        offer:
          $ref: '#/components/schemas/SuggestedOfferDTO'
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
      type: object
    AddOffersToArchiveErrorDTO:
      description: "Товар, который не удалось поместить в архив."
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        error:
          $ref: '#/components/schemas/AddOffersToArchiveErrorType'
      required:
      - error
      - offerId
      type: object
    OfferMappingDTO:
      description: Информация о текущей карточке товара на Маркете.
      example:
        modelId: 1
        marketSku: 7
        categoryId: 1
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        modelId:
          description: |
            Идентификатор модели для текущей карточки товара на Маркете.

            Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара.
          format: int64
          type: integer
        categoryId:
          description: Идентификатор категории для текущей карточки товара на Маркете.
          format: int64
          type: integer
      type: object
    OfferWeightDimensionsDTO:
      description: |
        Габариты упаковки и вес товара.

        Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.

        ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png)
      example:
        length: 65.55
        width: 50.7
        weight: 1.001
        height: 20
      properties:
        length:
          description: |
            Длина упаковки в см.
          example: 65.55
          type: number
        width:
          description: |
            Ширина упаковки в см.
          example: 50.7
          type: number
        height:
          description: |
            Высота упаковки в см.
          example: 20
          type: number
        weight:
          description: |
            Вес товара в кг с учетом упаковки (брутто).
          example: 1.001
          type: number
      required:
      - height
      - length
      - weight
      - width
      type: object
    DayOfWeekType:
      description: |
        День недели:

        * MONDAY — понедельник;
        * TUESDAY — вторник;
        * WEDNESDAY — среда;
        * THURSDAY — четверг;
        * FRIDAY — пятница;
        * SATURDAY — суббота;
        * SUNDAY — воскресенье.
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    OfferProcessingStateDTO:
      description: Информация о статусе публикации товара на Маркете.
      example:
        notes:
        - payload: payload
          type: null
        - payload: payload
          type: null
        status: null
      properties:
        status:
          $ref: '#/components/schemas/OfferProcessingStatusType'
        notes:
          description: "Причины, по которым товар не прошел модерацию."
          items:
            $ref: '#/components/schemas/OfferProcessingNoteDTO'
          type: array
      type: object
    TimePeriodDTO:
      description: "Временной отрезок с комментарием. Требования к содержанию комм\
        ентария зависят от контекста использования параметра и указаны в описании\
        \ поля, которое его содержит."
      example:
        timePeriod: 4
        comment: comment
        timeUnit: null
      properties:
        timePeriod:
          description: Продолжительность в указанных единицах.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/TimeUnitType'
        comment:
          description: Комментарий.
          type: string
      required:
      - timePeriod
      - timeUnit
      type: object
    EnrichedMappingsOfferDTO:
      allOf:
      - $ref: '#/components/schemas/MappingsOfferDTO'
      - properties:
          marketCategoryId:
            description: |
              Идентификатор категории для рекомендованной карточки товара на Маркете.

              Возвращается только вместе с параметром ##marketSku##.
            format: int64
            type: integer
          marketCategoryName:
            description: |
              Название категории для рекомендованной карточки товара на Маркете.

              Может отсутствовать в ответе.
            type: string
          marketModelId:
            description: |
              Идентификатор модели для рекомендованной карточки товара на Маркете.

              Может отсутствовать в ответе.
            format: int64
            type: integer
          marketModelName:
            description: |
              Название модели для рекомендованной карточки товара на Маркете.

              Возвращается только вместе с параметром ##marketSku##.
            type: string
          marketSku:
            $ref: '#/components/schemas/MarketSku'
          marketSkuName:
            description: |
              Название товара с рекомендованной карточки на Маркете.

              Может отсутствовать в ответе.
            type: string
        type: object
      description: Информация о рекомендованных карточках товаров.
      type: object
    UpdatePriceWithDiscountDTO:
      allOf:
      - $ref: '#/components/schemas/BasePriceDTO'
      - properties:
          discountBase:
            description: Цена до скидки.
            exclusiveMinimum: true
            minimum: 0
            type: number
        type: object
      description: Цена с указанием скидки.
      type: object
    OfferPriceFeedDTO:
      description: "Информация о прайс-листе, содержащем предложение."
      example:
        id: 0
      properties:
        id:
          description: "Идентификатор прайс-листа, содержащего предложение."
          format: int64
          type: integer
      type: object
    PriceDTO:
      description: "Цена с указанием скидки, валюты и времени последнего обновлени\
        я."
      example:
        vat: 5
        discountBase: 1.4658129805029452
        currencyId: RUR
        value: 6.027456183070403
      properties:
        value:
          description: Цена на товар.
          type: number
        discountBase:
          description: Цена на товар без скидки.
          type: number
        currencyId:
          description: |
            Валюта, в которой указана цена на товар.

            Возможно только значение RUR — российский рубль.
          example: RUR
          type: string
        vat:
          description: |
            Идентификатор ставки НДС, применяемой для товара:

            * 2 — 10%.
            * 5 — 0%.
            * 6 — не облагается НДС.
            * 7 — 20%.

            Если параметр не указан, используется ставка НДС, установленная в личном кабинете магазина.
          format: int32
          type: integer
      type: object
    MarketSku:
      description: SKU на Маркете.
      format: int64
      type: integer
    OfferPriceResponseDTO:
      description: Информация об установленной цене на товар.
      properties:
        id:
          description: Идентификатор предложения из прайс-листа.
          type: string
        feed:
          $ref: '#/components/schemas/OfferPriceFeedDTO'
        price:
          $ref: '#/components/schemas/PriceDTO'
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        updatedAt:
          description: Дата и время последнего обновления цены на товар.
          format: date-time
          type: string
      type: object
    OfferPriceByOfferIdsResponseDTO:
      description: Информация об установленной цене.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
        updatedAt:
          description: Дата и время последнего обновления цены.
          format: date-time
          type: string
      type: object
    PriceSuggestOfferDTO:
      description: Товар с ценами для продвижения.
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        priceSuggestion:
          description: |
            Цены для продвижения.
          items:
            $ref: '#/components/schemas/PriceSuggestDTO'
          type: array
      type: object
    QuarantineOfferDTO:
      description: Товар в карантине.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        currentPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        lastValidPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        verdicts:
          description: Причины попадания товара в карантин.
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictDTO'
          type: array
      type: object
    StockItemDTO:
      description: |
        Информация об остатках товара.
      example:
        count: 1205491236
        type: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          description: |
            Количество доступного товара.
          format: int64
          maximum: 2000000000
          minimum: 0
          type: integer
        type:
          $ref: '#/components/schemas/StockType'
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках указанного типа.

            Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      required:
      - count
      - type
      - updatedAt
      type: object
    WarehouseOffersDTO:
      description: Информация об остатках товаров на складе.
      properties:
        warehouseId:
          description: Идентификатор склада.
          format: int64
          type: integer
        offers:
          description: Информация об остатках.
          items:
            $ref: '#/components/schemas/WarehouseOfferDTO'
          type: array
      required:
      - offers
      - warehouseId
      type: object
    DeliveryServiceInfoDTO:
      description: Информация о службе доставки.
      example:
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        name:
          description: Наименование службы доставки.
          type: string
      required:
      - id
      - name
      type: object
    OrdersStatsOrderDTO:
      description: Информация о заказе.
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        creationDate:
          description: |
            Дата создания заказа.
            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        statusUpdateDate:
          description: |
            Дата и время, когда статус заказа был изменен в последний раз.
            Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва).
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/OrderStatsStatusType'
        partnerOrderId:
          description: Идентификатор заказа в информационной системе магазина.
          type: string
        paymentType:
          $ref: '#/components/schemas/OrdersStatsOrderPaymentType'
        fake:
          description: |
            Тип заказа:

            * false — заказ покупателя.

            * true — тестовый заказ Маркета.
          type: boolean
        deliveryRegion:
          $ref: '#/components/schemas/OrdersStatsDeliveryRegionDTO'
        items:
          description: Список товаров в заказе после возможных изменений.
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
          type: array
        initialItems:
          description: Список товаров в заказе до изменений.
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
          type: array
        payments:
          description: Информация о денежных переводах по заказу.
          items:
            $ref: '#/components/schemas/OrdersStatsPaymentDTO'
          type: array
        commissions:
          description: Информация о комиссиях за заказ.
          items:
            $ref: '#/components/schemas/OrdersStatsCommissionDTO'
          type: array
      type: object
    GoodsStatsGoodsDTO:
      description: Информация о товаре.
      properties:
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        name:
          description: Название товара.
          type: string
        price:
          description: "Цена на товар, выставленная партнером."
          type: number
        categoryId:
          description: Идентификатор категории товара на Маркете.
          format: int64
          type: integer
        categoryName:
          description: Название категории товара на Маркете.
          type: string
        weightDimensions:
          $ref: '#/components/schemas/GoodsStatsWeightDimensionsDTO'
        warehouses:
          description: |
            Информация о складах, на которых хранится товар.

            Параметр не приходит, если товара нет ни на одном складе.
          items:
            $ref: '#/components/schemas/GoodsStatsWarehouseDTO'
          type: array
        tariffs:
          description: "Информация о тарифах, по которым нужно заплатить за услуги\
            \ Маркета."
          items:
            $ref: '#/components/schemas/GoodsStatsTariffDTO'
          type: array
        pictures:
          description: Ссылки (URL) изображений товара в хорошем качестве.
          items:
            type: string
          type: array
      type: object
    ReportStatusType:
      description: |
        Статус генерации отчета:

        * `PENDING` — отчет ожидает генерации;
        * `PROCESSING` — отчет генерируется;
        * `FAILED` — во время генерации произошла ошибка;
        * `DONE` — отчет готов.
      enum:
      - PENDING
      - PROCESSING
      - FAILED
      - DONE
      type: string
    ReportSubStatusType:
      description: |
        Подстатус генерации отчета:
        * `NO_DATA` — для такого отчета нет данных;
        * `TOO_LARGE` — отчет превысил допустимый размер — укажите меньший период времени или уточните условия запроса.
      enum:
      - NO_DATA
      - TOO_LARGE
      type: string
    OutletStatusType:
      description: |
        Статус точки продаж.
        Возможные значения:
        * `AT_MODERATION` — проверяется.
        * `FAILED` — не прошла проверку и отклонена модератором.
        * `MODERATED` — проверена и одобрена.
        * `NONMODERATED` — новая точка, нуждается в проверке.
      enum:
      - AT_MODERATION
      - FAILED
      - MODERATED
      - NONMODERATED
      - UNKNOWN
      type: string
    OutletType:
      description: |
        Тип точки продаж.
        Возможные значения:
        * `DEPOT` — пункт выдачи заказов.
        * `MIXED` — смешанный тип точки продаж (торговый зал и пункт выдачи заказов).
        * `RETAIL` — розничная точка продаж (торговый зал).
        Обязательный параметр.
      enum:
      - DEPOT
      - MIXED
      - RETAIL
      - NOT_DEFINED
      type: string
    OutletVisibilityType:
      description: |
        Состояние точки продаж.
        Возможные значения:
        * `HIDDEN` — точка продаж выключена.
        * `VISIBLE` — точка продаж включена.
      enum:
      - HIDDEN
      - VISIBLE
      - UNKNOWN
      type: string
    OutletAddressDTO:
      description: |
        Адрес точки продаж.
        Обязательный параметр.
      properties:
        regionId:
          description: |
            Идентификатор региона.
            Идентификатор можно получить c помощью запроса `GET /regions`.

            {% note alert %}

            При создании и редактировании точек продаж можно указывать только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах type запросов `GET /regions` и `GET /regions/{regionId}`.

            {% endnote %}

            Обязательный параметр.
          format: int64
          type: integer
        street:
          description: Улица.
          maxLength: 512
          type: string
        number:
          description: Номер дома.
          maxLength: 256
          type: string
        building:
          description: Номер строения.
          maxLength: 16
          type: string
        estate:
          description: Номер владения.
          maxLength: 16
          type: string
        block:
          description: Номер корпуса.
          maxLength: 16
          type: string
        additional:
          description: Дополнительная информация.
          type: string
        km:
          description: "Порядковый номер километра дороги, на котором располагаетс\
            я точка продаж, если отсутствует улица."
          format: int32
          type: integer
        city:
          description: |
            {% note alert %}

            Параметр устарел и не рекомендуется к использованию. Город или населенный пункт возвращается в параметре `regionId`.

            {% endnote %}
          maxLength: 200
          type: string
      required:
      - regionId
      type: object
    OutletWorkingScheduleDTO:
      description: |
        Список режимов работы точки продаж.
        Обязательный параметр.
      properties:
        workInHoliday:
          description: |
            Признак, работает ли точка продаж в дни государственных праздников.
            Возможные значения:
            * `false` — точка продаж не работает в дни государственных праздников.
            * `true` — точка продаж работает в дни государственных праздников.
          type: boolean
        scheduleItems:
          description: |
            Список расписаний работы точки продаж.
            Обязательный параметр.
          items:
            $ref: '#/components/schemas/OutletWorkingScheduleItemDTO'
          minItems: 1
          type: array
      required:
      - scheduleItems
      type: object
    OutletDeliveryRuleDTO:
      description: Информация об условиях доставки для данной точки продаж.
      properties:
        cost:
          description: |
            Стоимость самовывоза из точки продаж.
            Обязательный параметр.
          type: number
        minDeliveryDays:
          description: |
            Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.
            Минимальное значение: `0` — доставка в день заказа.
            Максимальное значение: `60`.
            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.
            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.
            Для доставки в другие регионы:
            * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.
            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.
            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          format: int32
          type: integer
        maxDeliveryDays:
          description: |
            Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.
            Минимальное значение: `0` — доставка в день заказа.
            Максимальное значение: `60`.
            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.
            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.
            Для доставки в другие регионы:
            - Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            - Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.
            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.
            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          format: int32
          type: integer
        deliveryServiceId:
          description: |
            Идентификатор службы доставки товаров в точку продаж.
            Идентификаторы и наименования служб доставки можно получить с помощью ресурса `GET /delivery/services`.
          format: int64
          type: integer
        orderBefore:
          description: |
            Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.
            Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.
            Значение по умолчанию: `24`.
          format: int32
          maximum: 24
          minimum: 0
          type: integer
        priceFreePickup:
          description: "Цена товара, начиная с которой действует бесплатный самовы\
            воз товара из точки продаж."
          type: number
        unspecifiedDeliveryInterval:
          description: |
            Признак доставки товаров в точку продаж на заказ.
            Признак выставлен, если:
            * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт);
            * все товары изготавливаются или поставляются на заказ.
            Возможные значения:
            * `true` — товары доставляются в точку продаж на заказ.
            Параметр указывается только со значением `true`.
            Взаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`.
          type: boolean
      type: object
    FullOutletLicenseDTO:
      allOf:
      - $ref: '#/components/schemas/OutletLicenseDTO'
      - properties:
          checkStatus:
            $ref: '#/components/schemas/LicenseCheckStatusType'
          checkComment:
            description: |
              Причина, по которой лицензия не прошла проверку.
              Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`.
            type: string
        type: object
      description: Информация о лицензии.
      type: object
    LicenseType:
      description: |
        Тип лицензии:
        * `ALCOHOL` — лицензия на розничную продажу алкогольной продукции.
      enum:
      - ALCOHOL
      - UNKNOWN
      type: string
    FeedbackDTO:
      description: Отзыв пользователя Яндекс.Маркета об указанном магазине.
      properties:
        id:
          description: Идентификатор отзыва.
          format: int64
          type: integer
        createdAt:
          description: |
            Дата и время создания отзыва.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.
          format: date-time
          type: string
        text:
          description: Комментарий автора отзыва.
          type: string
        state:
          $ref: '#/components/schemas/FeedbackStateType'
        author:
          $ref: '#/components/schemas/FeedbackAuthorDTO'
        pro:
          description: "Достоинства магазина, описанные в отзыве."
          type: string
        contra:
          description: "Недостатки магазина, описанные в отзыве."
          type: string
        comments:
          description: Переписка автора отзыва с магазином.
          items:
            $ref: '#/components/schemas/FeedbackCommentDTO'
          type: array
        shop:
          $ref: '#/components/schemas/FeedbackShopDTO'
        resolved:
          description: |
            Решена ли проблема автора отзыва:

            * `true` — да.
            * `false` — нет.

            Если проблема решена, около отзыва на странице магазина появляется соответствующая надпись.
          type: boolean
        verified:
          description: |
            Является ли отзыв рекомендованным:

            * `true` — да.
            * `false` — нет.

            {% note alert %}

            Параметр устарел и не рекомендуется к использованию.

            {% endnote %}
          type: boolean
        recommend:
          description: |
            Купил бы автор отзыва в магазине снова:

            * `true` — да.
            * `false` — нет.
          type: boolean
        grades:
          $ref: '#/components/schemas/FeedbackGradesDTO'
        order:
          $ref: '#/components/schemas/FeedbackOrderDTO'
      type: object
    OfferDTO:
      description: Предложение.
      properties:
        price:
          description: |
            Цена предложения.

            До версии 2.0 партнерского API у параметра был тип String.
          type: number
        feedId:
          description: |
            Идентификатор прайс-листа, содержащего предложение.

            Параметр доступен начиная с версии 2.0 партнерского API.
          format: int64
          type: integer
        id:
          description: |
            Идентификатор предложения из прайс-листа.

            Параметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.

            Параметр доступен начиная с версии 2.0 партнерского API.
          type: string
        shopCategoryId:
          description: |
            Идентификатор категории предложения, указанный магазином в прайс-листе.

            Параметр выводится только для предложений, у которых указана категория в прайс-листе.

            Параметр доступен начиная с версии 2.0 партнерского API.
          type: string
        marketCategoryId:
          description: |
            Идентификатор категории предложения в дереве категорий Маркета.
            Параметр доступен начиная с версии 2.0 партнерского API.
          format: int32
          type: integer
        preDiscountPrice:
          description: Цена предложения без скидки.
          type: number
        discount:
          description: "Скидка на предложение, в %."
          format: int32
          type: integer
        cutPrice:
          description: |
            Является ли предложение уцененным:

            * `true` — да.
            * `false` — нет.

            Параметр доступен начиная с версии 2.58 партнерского API.
          type: boolean
        url:
          description: URL-адрес предложения на сайте магазина.
          type: string
        modelId:
          description: |
            Идентификатор модели Маркета, с которой соотнесено предложение.

            Если предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.

            {% note info %}

            Идентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.

            {% endnote %}
          format: int64
          type: integer
        name:
          description: Наименование предложения.
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyType'
        bid:
          description: Ставка на клик. deprecated.
          type: number
        cbid:
          description: Ставка на клик. deprecated.
          type: number
        fee:
          description: Процент комиссии на товар при продаже по CPA. deprecated.
          type: number
        blocked:
          description: |
            Признак блокировки предложения.
            Возможные значения:
            * `false` — предложение активно, параметр не выводится.
            * `true` — предложение заблокировано.
            Параметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина.
          type: boolean
      required:
      - modelId
      type: object
    GetCampaignOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseCampaignOfferDTO'
      - properties:
          basicPrice:
            $ref: '#/components/schemas/GetPriceWithDiscountDTO'
          campaignPrice:
            $ref: '#/components/schemas/GetPriceWithVatDTO'
          status:
            $ref: '#/components/schemas/OfferCampaignStatusType'
          errors:
            description: |
              Ошибки, препятствующие размещению товара на витрине.
            items:
              $ref: '#/components/schemas/OfferErrorDTO'
            type: array
          warnings:
            description: |
              Предупреждения, не препятствующие размещению товара на витрине.
            items:
              $ref: '#/components/schemas/OfferErrorDTO'
            type: array
        type: object
      description: Параметры размещения товара в магазине.
      type: object
    BaseCampaignOfferDTO:
      description: Информация о новой цене на товар.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        quantum:
          $ref: '#/components/schemas/QuantumDTO'
        available:
          description: |
            Есть ли товар в продаже.
          type: boolean
      required:
      - offerId
      type: object
    OfferRecommendationDTO:
      description: |
        Информация о состоянии цен и рекомендации.
      properties:
        offer:
          $ref: '#/components/schemas/OfferForRecommendationDTO'
        recommendation:
          $ref: '#/components/schemas/OfferRecommendationInfoDTO'
      type: object
    FeedContentDTO:
      description: "Информация о проверке содержимого прайс-листа, загруженного на\
        \ Маркет."
      example:
        rejectedOffersCount: 6
        error:
          type: null
        status: null
        totalOffersCount: 1
      properties:
        rejectedOffersCount:
          description: |
            Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа.
            Выводится, если параметр `content status=OK`.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/FeedStatusType'
        totalOffersCount:
          description: |
            Количество предложений в прайс-листе.
            Выводится, если параметр `content status=OK`.
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/FeedContentErrorDTO'
      type: object
    FeedDownloadDTO:
      description: Информация о последней загрузке прайс-листа.
      example:
        error:
          description: description
          type: null
          httpStatusCode: 5
        status: null
      properties:
        status:
          $ref: '#/components/schemas/FeedStatusType'
        error:
          $ref: '#/components/schemas/FeedDownloadErrorDTO'
      type: object
    FeedPlacementDTO:
      description: Информация о размещении предложений из прайс-листа на Маркете на
        момент выполнения запроса.
      example:
        status: null
        totalOffersCount: 5
      properties:
        status:
          $ref: '#/components/schemas/FeedStatusType'
        totalOffersCount:
          description: "Количество предложений из прайс-листа, которые размещаются\
            \ на Яндекс Маркете в момент выполнения запроса."
          format: int32
          type: integer
      type: object
    FeedPublicationDTO:
      description: Информация о последней публикации предложений из прайс-листа на
        Маркете.
      example:
        priceAndStockUpdate:
          fileTime: 2000-01-23T04:56:07.000+00:00
          publishedTime: 2000-01-23T04:56:07.000+00:00
        status: null
        full:
          fileTime: 2000-01-23T04:56:07.000+00:00
          publishedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          $ref: '#/components/schemas/FeedStatusType'
        full:
          $ref: '#/components/schemas/FeedPublicationFullDTO'
        priceAndStockUpdate:
          $ref: '#/components/schemas/FeedPublicationPriceAndStockUpdateDTO'
      type: object
    FeedIndexLogsFeedDTO:
      description: Информация о прайс-листе.
      properties:
        id:
          description: Идентификатор прайс-листа.
          format: int64
          type: integer
      type: object
    FeedIndexLogsRecordDTO:
      description: Список отчетов по индексации прайс-листа.
      properties:
        downloadTime:
          description: |
            Дата и время загрузки прайс-листа.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
        fileTime:
          description: |
            Дата и время, которые магазин указал в прайс-листе.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
        generationId:
          description: Идентификатор индексации.
          format: int64
          type: integer
        indexType:
          $ref: '#/components/schemas/FeedIndexLogsIndexType'
        publishedTime:
          description: |
            Дата и время публикации предложений из прайс-листа на Яндекс Маркете.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/FeedIndexLogsStatusType'
        error:
          $ref: '#/components/schemas/FeedIndexLogsErrorDTO'
        offers:
          $ref: '#/components/schemas/FeedIndexLogsOffersDTO'
      type: object
    FeedParameterName:
      description: |
        Название параметра.

        Возможное значение:
        - `reparseIntervalMinutes` — период скачивания прайс-листа.
        Маркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.

        {% note alert %}

        Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.

        {% endnote %}

        Обязательный параметр.
      type: string
    ModelPriceDTO:
      description: Информация о ценах на модель товара.
      properties:
        avg:
          description: Средняя цена предложения для модели в регионе.
          type: number
        max:
          description: Максимальная цена предложения для модели в регионе.
          type: number
        min:
          description: Минимальная цена предложения для модели в регионе.
          type: number
      type: object
    ModelOfferDTO:
      description: Информация о предложении.
      properties:
        discount:
          description: "Скидка на предложение, в %."
          format: int32
          type: integer
        name:
          description: Наименование предложения.
          type: string
        pos:
          description: Позиция предложения в выдаче Маркета на карточке модели.
          format: int32
          type: integer
        preDiscountPrice:
          description: Цена предложения без скидки.
          type: number
        price:
          description: |
            Цена предложения.

            До версии 2.0 партнерского API у параметра был тип String.
          type: number
        regionId:
          description: |
            Идентификатор региона предложения (регион, откуда доставляется товар).

            Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.
          format: int64
          type: integer
        shippingCost:
          description: |
            Стоимость доставки товара в регион.

            Если значение параметра — `0`, доставка осуществляется бесплатно. Если значение параметра — `-1`, магазин не осуществляет доставку этого товара (самовывоз). Если стоимость доставки неизвестна, параметр не выводится.
          type: number
        shopName:
          description: "Название магазина (в том виде, в котором отображается на М\
            аркете)."
          type: string
        shopRating:
          description: |
            Рейтинг магазина.

            Возможные значения:
            * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`.
            * `1`.
            * `2`.
            * `3`.
            * `4`.
            * `5`.
          format: int32
          type: integer
        inStock:
          deprecated: true
          description: |
            {% note alert %}

            Параметр устарел и не рекомендуется к использованию.

            {% endnote %}
          format: int32
          type: integer
      type: object
    Bid:
      description: Значение ставки.
      example: 570
      format: int32
      maximum: 9999
      minimum: 0
      type: integer
    SkuBidRecommendationItemDTO:
      description: Список товаров с рекомендованными ставками.
      properties:
        sku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        bidRecommendations:
          description: |
            Список рекомендованных ставок с соответствующими долями показов. Чем больше ставка, тем большую долю показов она помогает получить.
          items:
            $ref: '#/components/schemas/BidRecommendationItemDTO'
          type: array
        priceRecommendations:
          description: Рекомендованные цены.
          items:
            $ref: '#/components/schemas/PriceRecommendationItemDTO'
          type: array
      required:
      - bid
      - sku
      type: object
    WarehouseDTO:
      description: Информация о складе.
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        campaignId:
          description: Идентификатор кампании в API и идентификатор магазина.
          format: int64
          type: integer
      required:
      - campaignId
      - id
      - name
      type: object
    WarehouseGroupDTO:
      description: Информация о группе складов.
      properties:
        name:
          description: Название группы складов.
          type: string
        mainWarehouse:
          $ref: '#/components/schemas/WarehouseDTO'
        warehouses:
          description: "Список складов, входящих в группу."
          items:
            $ref: '#/components/schemas/WarehouseDTO'
          type: array
      required:
      - mainWarehouse
      - name
      - warehouses
      type: object
    FulfillmentWarehouseDTO:
      description: Склад Маркета (FBY).
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
      required:
      - id
      - name
      type: object
    CategoryParameterDTO:
      description: Характеристика товара.
      properties:
        id:
          description: Идентификатор характеристики.
          format: int64
          type: integer
        name:
          description: Название характеристики.
          type: string
        type:
          $ref: '#/components/schemas/ParameterType'
        description:
          description: Описание характеристики.
          type: string
        recommendationTypes:
          description: "Перечень возможных рекомендаций по заполнению карточки, к\
            \ которым относится данная характеристика."
          items:
            $ref: '#/components/schemas/OfferCardRecommendationType'
          type: array
        required:
          description: Обязательность характеристики.
          type: boolean
        filtering:
          description: Используется ли характеристика в фильтре.
          type: boolean
        distinctive:
          description: Является ли характеристика особенностью варианта.
          type: boolean
        multivalue:
          description: Можно ли передать сразу несколько значений.
          type: boolean
        allowCustomValues:
          description: "Можно ли передавать собственное значение, которого нет в с\
            писке вариантов Маркета. Только для характеристик типа `ENUM`."
          type: boolean
        values:
          description: Список допустимых значений параметра. Только для характеристик
            типа `ENUM`.
          items:
            $ref: '#/components/schemas/ParameterValueOptionDTO'
          type: array
        constraints:
          $ref: '#/components/schemas/ParameterValueConstraintsDTO'
        valueRestrictions:
          description: "Ограничения на значения, накладываемые другими характерист\
            иками. Только для характеристик типа `ENUM`."
          items:
            $ref: '#/components/schemas/ValueRestrictionDTO'
          type: array
      required:
      - allowCustomValues
      - distinctive
      - filtering
      - id
      - multivalue
      - required
      - type
      type: object
    OfferCardDTO:
      description: |
        Информация о состоянии карточки товара.

        Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
        cardStatus:
          $ref: '#/components/schemas/OfferCardStatusType'
        contentRating:
          description: Процент заполненности карточки.
          format: int32
          type: integer
        recommendations:
          description: |
            Список рекомендаций к заполнению карточки.

            Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.
          items:
            $ref: '#/components/schemas/OfferCardRecommendationDTO'
          type: array
        errors:
          description: "Ошибки в контенте, препятствующие размещению товара на вит\
            рине."
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
          type: array
        warnings:
          description: "Связанные с контентом предупреждения, не препятствующие ра\
            змещению товара на витрине."
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
          type: array
      required:
      - offerId
      type: object
    ParameterValueDTO:
      description: |
        Значение характеристики.

        Вы можете указывать несколько значений одной характеристики при условии, что:

        * Тип характеристики — `ENUM`.
        * В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле `multivalue` имеет значение `true`.

        Для этого в `parameterValues` передавайте каждое значение отдельно — несколько объектов с параметрами `parameterId`, `valueId` и `value`. Параметр `parameterId` должен быть одинаковым.
      example:
        valueId: 1
        parameterId: 6
        value: value
      properties:
        parameterId:
          description: Идентификатор характеристики.
          format: int64
          type: integer
        valueId:
          description: |
            Идентификатор значения.

            Обязательно передавайте идентификатор, если передаете значение из перечня допустимых значений, полученного от Маркета.

            Только для характеристик типа `ENUM`.
          format: int64
          type: integer
        value:
          description: Значение.
          type: string
      required:
      - parameterId
      - value
      type: object
    OfferContentErrorDTO:
      description: Сообщение об ошибке.
      properties:
        type:
          $ref: '#/components/schemas/OfferContentErrorType'
        parameterId:
          description: "Идентификатор характеристики, с которой связана ошибка."
          format: int64
          type: integer
        message:
          description: Сообщение об ошибке.
          type: string
      required:
      - message
      - type
      type: object
    CampaignSettingsScheduleSourceType:
      description: |
        Источник информации о расписании работы службы доставки.
        Возможные значения:
        * `WEB` — информация получена из настроек личного кабинета магазина на Яндекс Маркете.
        * `YML` — информация получена из прайс-листа магазина.
      enum:
      - WEB
      - YML
      type: string
    CampaignSettingsDeliveryDTO:
      description: Информация о доставке в своем регионе магазина.
      example:
        schedule:
          customWorkingDays:
          - 23-09-2022
          - 23-09-2022
          period:
            fromDate: 23-09-2022
            toDate: 23-09-2022
          customHolidays:
          - 23-09-2022
          - 23-09-2022
          weeklyHolidays:
          - 1
          - 1
          availableOnHolidays: true
          totalHolidays:
          - 23-09-2022
          - 23-09-2022
      properties:
        schedule:
          $ref: '#/components/schemas/CampaignSettingsScheduleDTO'
      type: object
    OrderVatType:
      description: |
        Ставка налога на добавленную стоимость (НДС) на услугу доставки заказа:

        * `NO_VAT` — НДС не облагается, используется только для отдельных видов услуг.

        * `VAT_0` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.

        * `VAT_10_110` — НДС 10/110. Расчетная ставка НДС 10%, применяется только для случая предоплаты.

        * `VAT_20_120` — НДС 20/120. Расчетная ставка НДС 20%, применяется только для случая предоплаты.

        * `VAT_18_118` — НДС 18/118. Ставка использовалась до 1 января 2019 года.

        Используется только совместно с параметром `payment-method=YANDEX`.
      enum:
      - VAT_18
      - VAT_10
      - VAT_18_118
      - VAT_10_110
      - VAT_0
      - NO_VAT
      - VAT_20
      - VAT_20_120
      - UNKNOWN_VALUE
      type: string
    OrderItemPromoDTO:
      description: "Информация о вознаграждениях партнеру за скидки на товар по пр\
        омокодам, купонам и акциям."
      example:
        subsidy: 5.025004791520295
        shopPromoId: shopPromoId
        discount: 4.965218492984954
        marketPromoId: marketPromoId
        type: null
      properties:
        type:
          $ref: '#/components/schemas/OrderPromoType'
        discount:
          description: |
            Размер пользовательской скидки в валюте покупателя.
          format: decimal
          type: number
        subsidy:
          description: |
            Вознаграждение партнеру за скидку.

            Передается в валюте заказа, для отделения целой части от дробной используется точка.
          format: decimal
          type: number
        shopPromoId:
          description: |
            Идентификатор акции поставщика.
          type: string
        marketPromoId:
          description: |
            Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между маркетплейсом Яндекс Маркета и партнером.

            Параметр передается, только если параметр `type=MARKET_DEAL`.
          type: string
      required:
      - type
      type: object
    OrderItemInstanceDTO:
      description: |
        Переданные вами для данной позиции коды маркировки или УИНы. Коды "Честного знака" возвращаются в двух вариантах — с криптохвостом и без.
      example:
        rnpt: rnpt
        gtd: gtd
        cisFull: cisFull
        uin: uin
        cis: cis
      properties:
        cis:
          description: Код «Честного знака» без криптохвоста.
          type: string
        cisFull:
          description: Код «Честного знака» с криптохвостом.
          type: string
        uin:
          description: |
            УИН ювелирного изделия (16-значный код)
            Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
      type: object
    OrderItemDetailDTO:
      description: Детали по товару в заказе.
      example:
        updateDate: 23-09-2022
        itemStatus: null
        itemCount: 9
      properties:
        itemCount:
          description: Количество единиц товара.
          format: int64
          type: integer
        itemStatus:
          $ref: '#/components/schemas/OrderItemStatusType'
        updateDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      type: object
    OrderItemInstanceType:
      description: Вид маркировки товара.
      enum:
      - CIS
      - UIN
      - RNPT
      - GTD
      type: string
    OrderSubsidyType:
      description: Тип субсидии.
      enum:
      - NOT_SUBSIDY
      - SBER_SPASIBO
      - YANDEX_CASHBACK
      - SUBSIDY
      - DELIVERY
      type: string
    OrderDeliveryType:
      description: |
        Способ доставки заказа:

        * `DELIVERY` — курьерская доставка.

        * `PICKUP` — самовывоз.

        * `POST` — почта.
      enum:
      - DELIVERY
      - PICKUP
      - POST
      - DIGITAL
      - UNKNOWN
      type: string
    OrderDeliveryPartnerType:
      description: |
        Тип сотрудничества со службой доставки в рамках конкретного заказа:

        Принимает значение `YANDEX_MARKET` — магазин работает со службой доставки через Маркет.
      enum:
      - SHOP
      - YANDEX_MARKET
      - UNKNOWN
      type: string
    OrderCourierDTO:
      description: Информация о курьере.
      example:
        vehicleDescription: vehicleDescription
        phone: phone
        phoneExtension: phoneExtension
        fullName: fullName
        vehicleNumber: vehicleNumber
      properties:
        fullName:
          description: Полное имя курьера.
          type: string
        phone:
          description: Номер телефона курьера.
          type: string
        phoneExtension:
          description: Добавочный номер телефона.
          type: string
        vehicleNumber:
          description: Номер транспортного средства.
          type: string
        vehicleDescription:
          description: Полное имя курьера.
          type: string
      type: object
    OrderDeliveryDatesDTO:
      description: Диапазон дат доставки.
      example:
        fromDate: 23-09-2022
        toDate: 23-09-2022
        fromTime: fromTime
        toTime: toTime
        realDeliveryDate: 23-09-2022
      properties:
        fromDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        toDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        fromTime:
          description: |
            Начало интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Минимальное значение: `00:00`.
          format: time
          type: string
        toTime:
          description: |
            Конец интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Максимальное значение: `23:59`.
          format: time
          type: string
        realDeliveryDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      type: object
    OrderDeliveryAddressDTO:
      description: |
        Адрес доставки.

        Указывается, если `type=DELIVERY` или `type=POST`.
      example:
        country: country
        city: city
        postcode: postcode
        gps:
          latitude: 8.762042012749001
          longitude: 9.018348186070783
        house: house
        subway: subway
        phone: phone
        street: street
        district: district
        recipient: recipient
        entryphone: entryphone
        block: block
        entrance: entrance
        floor: floor
        apartment: apartment
      properties:
        country:
          description: |
            Страна.

            Обязательный параметр.
          type: string
        postcode:
          description: |
            Почтовый индекс.

            Указывается, если выбрана доставка почтой (`delivery type=POST`).
          type: string
        city:
          description: |
            Город или населенный пункт.

            Обязательный параметр.
          type: string
        district:
          description: Район.
          type: string
        subway:
          description: Станция метро.
          type: string
        street:
          description: |
            Улица.

            Обязательный параметр.
          type: string
        house:
          description: |
            Дом или владение.

            Обязательный параметр.
          type: string
        block:
          description: Корпус или строение.
          type: string
        entrance:
          description: Подъезд.
          type: string
        entryphone:
          description: Код домофона.
          type: string
        floor:
          description: Этаж.
          type: string
        apartment:
          description: Квартира или офис.
          type: string
        phone:
          description: |
            Телефон получателя заказа.

            Обязательный параметр.
          type: string
        recipient:
          description: |
            Фамилия, имя и отчество получателя заказа.

            Обязательный параметр.
          type: string
        gps:
          $ref: '#/components/schemas/GpsDTO'
      type: object
    OrderLiftType:
      description: Тип подъема заказа на этаж.
      enum:
      - NOT_NEEDED
      - MANUAL
      - ELEVATOR
      - CARGO_ELEVATOR
      - FREE
      - UNKNOWN
      type: string
    DateDdMmYyyy:
      description: |
        Формат даты: `ДД-ММ-ГГГГ`.
      example: 23-09-2022
      format: date-dd-MM-yyyy
      type: string
    OrderTrackDTO:
      description: Информация о трек-номерах.
      example:
        trackCode: trackCode
        deliveryServiceId: 6
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
      type: object
    OrderShipmentDTO:
      description: |
        Список посылок.

        В параметре может указываться несколько посылок.
      example:
        boxes:
        - fulfilmentId: fulfilmentId
          id: 2
        - fulfilmentId: fulfilmentId
          id: 2
        id: 1
        shipmentDate: 23-09-2022
        shipmentTime: shipmentTime
        tracks:
        - trackCode: trackCode
          deliveryServiceId: 6
        - trackCode: trackCode
          deliveryServiceId: 6
        status: null
      properties:
        id:
          description: "Идентификатор посылки, присвоенный Маркетом."
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderParcelStatusType'
        shipmentDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        shipmentTime:
          description: |
            Время, когда нужно отгрузить заказы службе доставки.

            Формат времени: 24-часовой, `ЧЧ:ММ`.

            Если заказ сделан организацией, параметр не возвращается до согласования даты доставки.
          type: string
        tracks:
          description: Информация для отслеживания перемещений посылки.
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
          type: array
        boxes:
          description: Список грузовых мест.
          items:
            $ref: '#/components/schemas/OrderParcelBoxDTO'
          type: array
      type: object
    OrderDeliveryEacType:
      description: |
        Тип кода подтверждения ЭАПП:
        - MERCHANT_TO_COURIER — продавец передает код курьеру.
        - COURIER_TO_MERCHANT — курьер передает код продавцу.
        - CHECKING_BY_MERCHANT - продавец проверяет код на своей стороне.
      enum:
      - MERCHANT_TO_COURIER
      - COURIER_TO_MERCHANT
      - CHECKING_BY_MERCHANT
      type: string
    Cis:
      description: |
        Код «Честного знака» для единицы товара.

        {% note warning %}

        Не экранируйте косую черту в коде символа-разделителя `\u001d`!

        ✅ `01030410947874432155Qbag!\u001d93Zjqw`

        ❌ `01030410947874432155Qbag!\\u001d93Zjqw`

        Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\` и `\"`

        {% endnote %}
      type: string
    OrderStatusChangeDeliveryDatesDTO:
      description: Диапазон дат доставки.
      example:
        realDeliveryDate: 2000-01-23
      properties:
        realDeliveryDate:
          description: |
            Фактическая дата доставки.
          format: date
          type: string
      type: object
    OrderUpdateStatusType:
      description: |
        Изменился ли статус заказа:

        * `OK` — статус изменен.

        * `ERROR` — статус не изменен. В этом случае появится сообщение об ошибке в параметре `errorDetails`.
      enum:
      - OK
      - ERROR
      type: string
    PickupAddressDTO:
      description: Информация об адресе доставки.
      properties:
        country:
          description: Страна.
          example: Россия
          type: string
        city:
          description: Город.
          example: Москва
          type: string
        street:
          description: Улица.
          example: Стрелецкая улица
          type: string
        house:
          description: Номер дома.
          example: 9к2
          type: string
        postcode:
          description: Почтовый индекс.
          example: "123518"
          type: string
      type: object
    LogisticPointType:
      description: |
        Тип логистической точки:
          * WAREHOUSE — склад;
          * PICKUP_POINT — обычная точка выдачи заказов (ПВЗ);
          * PICKUP_TERMINAL — постамат;
          * PICKUP_POST_OFFICE — отделение почтовой связи (ОПС);
          * PICKUP_MIXED — торговый зал и пункт выдачи заказов;
          * PICKUP_RETAIL — торговый зал.
      enum:
      - WAREHOUSE
      - PICKUP_POINT
      - PICKUP_TERMINAL
      - PICKUP_POST_OFFICE
      - PICKUP_MIXED
      - PICKUP_RETAIL
      - UNKNOWN
      type: string
    ReturnDecisionDTO:
      description: Решения по возвратам.
      properties:
        returnItemId:
          description: Идентификатор товара в возврате.
          format: int64
          type: integer
        count:
          description: Количество товаров.
          format: int32
          type: integer
        comment:
          description: Комментарий.
          type: string
        reasonType:
          $ref: '#/components/schemas/ReturnDecisionReasonType'
        subreasonType:
          $ref: '#/components/schemas/ReturnDecisionSubreasonType'
        decisionType:
          $ref: '#/components/schemas/ReturnDecisionType'
        refundAmount:
          description: Сумма возврата.
          format: int64
          type: integer
        partnerCompensation:
          description: Компенсация за обратную доставку.
          format: int64
          type: integer
        images:
          description: Список хеш-кодов фотографий товара от покупателя.
          items:
            type: string
          type: array
      type: object
    ReturnInstanceDTO:
      description: Логистическая информация по возврату.
      properties:
        stockType:
          $ref: '#/components/schemas/ReturnInstanceStockType'
        status:
          $ref: '#/components/schemas/ReturnInstanceStatusType'
        cis:
          description: Контрольный идентификационный знак.
          type: string
        imei:
          description: Международный идентификатор мобильного оборудования.
          type: string
      type: object
    TrackDTO:
      description: Информация о трек-номерах.
      properties:
        trackCode:
          description: Трек-код почтового отправления.
          type: string
      type: object
    GetOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseOfferDTO'
      - properties:
          basicPrice:
            $ref: '#/components/schemas/GetPriceWithDiscountDTO'
          purchasePrice:
            $ref: '#/components/schemas/GetPriceDTO'
          additionalExpenses:
            $ref: '#/components/schemas/GetPriceDTO'
          cofinancePrice:
            $ref: '#/components/schemas/GetPriceDTO'
          cardStatus:
            $ref: '#/components/schemas/OfferCardStatusType'
          campaigns:
            description: |
              Список магазинов, в которых размещен товар.
            items:
              $ref: '#/components/schemas/OfferCampaignStatusDTO'
            type: array
          sellingPrograms:
            description: |
              Информация о том, какие для товара доступны модели размещения.
            items:
              $ref: '#/components/schemas/OfferSellingProgramDTO'
            type: array
          archived:
            description: |
              Товар помещен в архив.
            type: boolean
        type: object
      description: Параметры товара.
      type: object
    GetMappingDTO:
      allOf:
      - $ref: '#/components/schemas/UpdateMappingDTO'
      - properties:
          marketSkuName:
            description: |
              Название карточки товара.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            type: string
          marketModelId:
            description: |
              Идентификатор модели на Маркете.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            format: int64
            type: integer
          marketModelName:
            description: |
              Название модели на Маркете.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            type: string
          marketCategoryId:
            description: |
              Идентификатор категории карточки на Маркете.

              Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
            format: int64
            type: integer
          marketCategoryName:
            description: |
              Название категории карточки на Маркете.

              Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
            type: string
        type: object
      description: Информация о товарах в каталоге.
      type: object
    BaseOfferDTO:
      description: Основные параметры товара.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов, максимальная — 150.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 150
          type: string
        category:
          description: |
            Категория, к которой магазин относит свой товар. Она помогает точнее определить для товара категорию в каталоге Маркета.

            Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.

            Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.
          type: string
        pictures:
          description: |
            Ссылки на изображения товара. Изображение по первой ссылке считается основным, остальные дополнительными.

            **Требования к ссылкам**

            * Ссылок может быть до 10.
            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на изображения и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/images/sku12345.jpg`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/images/sku12345.jpg`

            ❌ `https://www.dropbox.com/s/818f/tovar.jpg`

            Ссылки на изображение должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить изображение, выложите новое изображение по новой ссылке, а ссылку на старое удалите. Если просто заменить изображение по старой ссылке, оно не обновится.

            [Требования к изображениям](https://yandex.ru/support/marketplace/assortment/fields/images.html)
          items:
            type: string
          type: array
        videos:
          description: |
            Ссылка (URL) на видео товара.

            {% note alert %}

            Пока действует временное ограничение: ссылка может быть только одна.

            {% endnote %}

            **Требования к ссылке**

            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на видео и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/video/sku12345.avi`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/video/sku12345.avi`

            ❌ `https://www.dropbox.com/s/818f/super-tovar.avi`

            Ссылки на видео должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить видео, выложите новое видео по новой ссылке, а ссылку на старое удалите. Если просто заменить видео по старой ссылке, оно не обновится.

            [Требования к видео](https://yandex.ru/support/marketplace/assortment/fields/video.html)
          items:
            type: string
          maxItems: 1
          type: array
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          type: array
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов, максимальная — 6000.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        manufacturerCountries:
          description: |
            Страна, где был произведен товар.

            Записывайте названия стран так, как они записаны в [списке](https://yastatic.net/s3/doc-binary/src/support/market/ru/countries.xlsx).
          items:
            example: Россия
            type: string
          type: array
        weightDimensions:
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        tags:
          description: |
            Метки товара, используемые магазином. Покупателям теги не видны. По тегам можно группировать и фильтровать разные товары в каталоге — например, товары одной серии, коллекции или линейки.

            Максимальная длина тега 20 символов. У одного товара может быть максимум 10 тегов. Всего можно создать не больше 50 разных тегов.
          items:
            example: до 500 рублей
            type: string
          type: array
        shelfLife:
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          $ref: '#/components/schemas/TimePeriodDTO'
        customsCommodityCode:
          description: |
            Код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.

            Обязательно укажите, если он есть.
          example: "8517610008"
          type: string
        certificates:
          description: |
            Номера документов на товар: сертификата, декларации соответствия и т. п.

            Передавать можно только номера документов, сканы которого загружены в личном кабинете продавца по [инструкции](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html).
          items:
            type: string
          type: array
        boxCount:
          description: |
            Количество грузовых мест.

            Параметр используется, если товар представляет собой несколько коробок, упаковок и так далее. Например, кондиционер занимает два места — внешний и внутренний блоки в двух коробках.

            Для товаров, занимающих одно место, не передавайте этот параметр.
          format: int32
          type: integer
        condition:
          $ref: '#/components/schemas/OfferConditionDTO'
        type:
          $ref: '#/components/schemas/OfferType'
        downloadable:
          description: |
            Признак цифрового товара. Укажите `true`, если товар доставляется по электронной почте.

            [Как работать с цифровыми товарами](../../step-by-step/digital.md)
          type: boolean
        adult:
          description: |
            Параметр включает для товара пометку 18+. Устанавливайте ее только для товаров, которые относятся к удовлетворению сексуальных потребностей.
          type: boolean
        age:
          $ref: '#/components/schemas/AgeDTO'
        params:
          description: |
            Характеристики, которые есть только у товаров конкретной категории — например, диаметр колес велосипеда или материал подошвы обуви.
          items:
            $ref: '#/components/schemas/OfferParamDTO'
          type: array
      required:
      - offerId
      type: object
    AddOffersToArchiveErrorType:
      description: |
        Причина, по которой товар не удалось поместить в архив:

        * `OFFER_HAS_STOCKS` — товар хранится на складе Маркета.
      enum:
      - OFFER_HAS_STOCKS
      - UNKNOWN
      type: string
    OfferProcessingNoteDTO:
      description: "Причины, по которым товар не прошел модерацию."
      example:
        payload: payload
        type: null
      properties:
        type:
          $ref: '#/components/schemas/OfferProcessingNoteType'
        payload:
          description: |
            Дополнительная информация о причине отклонения товара.
          type: string
      type: object
    TimeUnitType:
      description: |
        Единица измерения времени:

        * `HOUR` — час;
        * `DAY` — сутки;
        * `WEEK` — неделя;
        * `MONTH` — месяц;
        * `YEAR` — год.
      enum:
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
      type: string
    PriceSuggestDTO:
      description: Тип цены.
      properties:
        type:
          $ref: '#/components/schemas/PriceSuggestType'
        price:
          description: Цена в рублях.
          type: number
      type: object
    PriceQuarantineVerdictDTO:
      description: Причина попадания товара в карантин.
      properties:
        type:
          $ref: '#/components/schemas/PriceQuarantineVerdictType'
        params:
          description: "Цена, из-за которой товар попал в карантин, и значения для\
            \ сравнения. Конкретный набор параметров зависит от типа карантина."
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictParameterDTO'
          type: array
      type: object
    StockType:
      description: |
        Этот параметр пока не используется — всегда передавайте значение `FIT`.

        * `FIT` — значение, которое нужно передавать всегда.
        * `ACTUAL` — значение, которое пока не используется.
      enum:
      - FIT
      - ACTUAL
      type: string
    WarehouseOfferDTO:
      description: Информация об остатках товара.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        turnoverSummary:
          $ref: '#/components/schemas/TurnoverDTO'
        stocks:
          description: Информация об остатках.
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
          type: array
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках.

            Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2023-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      required:
      - offerId
      - stocks
      - updatedAt
      type: object
    OrdersStatsOrderPaymentType:
      description: |
        Тип оплаты заказа:
        - `CREDIT` — заказ оформлен в кредит;
        - `POSTPAID` — заказ оплачен после того, как был получен;
        - `PREPAID` — заказ оплачен до того, как был получен.
      enum:
      - CREDIT
      - POSTPAID
      - PREPAID
      - TINKOFF_CREDIT
      type: string
    OrdersStatsDeliveryRegionDTO:
      description: Информация о регионе доставки.
      properties:
        id:
          description: Идентификатор региона доставки.
          format: int64
          type: integer
        name:
          description: Название региона доставки.
          type: string
      type: object
    OrdersStatsItemDTO:
      description: |
        Список товаров в заказе после возможных изменений.

        В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

        * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

        * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
      properties:
        offerName:
          description: Название товара.
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          type: integer
        shopSku:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        count:
          description: |
            Количество единиц товара с учетом удаленных единиц.

            Если из заказа удалены все единицы товара, он попадет только в список `initialItems`.
          format: int32
          type: integer
        prices:
          description: Цена или скидки на товар.
          items:
            $ref: '#/components/schemas/OrdersStatsPriceDTO'
          type: array
        warehouse:
          $ref: '#/components/schemas/OrdersStatsWarehouseDTO'
        details:
          description: Информация об удалении товара из заказа.
          items:
            $ref: '#/components/schemas/OrdersStatsDetailsDTO'
          type: array
        cisList:
          description: Список кодов идентификации товара в системе «Честный ЗНАК».
          items:
            type: string
          type: array
        initialCount:
          description: Первоначальное количество единиц товара.
          format: int32
          type: integer
        bidFee:
          description: |
            Списанная ставка ближайшего конкурента.

            Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
          example: 570
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        cofinanceThreshold:
          description: |
            Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Указан в рублях. Точность — два знака после запятой.
          type: number
        cofinanceValue:
          description: |
            Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Указана в рублях. Точность — два знака после запятой.
          type: number
      type: object
    OrdersStatsPaymentDTO:
      description: Информация о денежных переводах по заказу.
      properties:
        id:
          description: Идентификатор денежного перевода.
          type: string
        date:
          description: |
            Дата денежного перевода.
            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        type:
          $ref: '#/components/schemas/OrdersStatsPaymentType'
        source:
          $ref: '#/components/schemas/OrdersStatsPaymentSourceType'
        total:
          description: |
            Сумма денежного перевода.
            Значение указывается в рублях независимо от способа денежного перевода.
            Точность — два знака после запятой.
          type: number
        paymentOrder:
          $ref: '#/components/schemas/OrdersStatsPaymentOrderDTO'
      type: object
    OrdersStatsCommissionDTO:
      description: Информация о стоимости услуг.
      properties:
        type:
          $ref: '#/components/schemas/OrdersStatsCommissionType'
        actual:
          description: |
            Сумма в рублях, которая была выставлена в момент создания заказа и которую нужно оплатить.
            Точность — два знака после запятой.
          type: number
      type: object
    GoodsStatsWeightDimensionsDTO:
      description: |
        Информация о весе и габаритах товара.

        Если товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.
      properties:
        length:
          description: Длина товара в сантиметрах.
          type: number
        width:
          description: Ширина товара в сантиметрах.
          type: number
        height:
          description: Высота товара в сантиметрах.
          type: number
        weight:
          description: Вес товара в килограммах.
          type: number
      type: object
    GoodsStatsWarehouseDTO:
      description: Информация о складе.
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        stocks:
          description: Информация об остатках товаров на складе.
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
          type: array
      type: object
    GoodsStatsTariffDTO:
      description: "Информация о тарифах, по которым нужно заплатить за услуги Мар\
        кета."
      properties:
        type:
          $ref: '#/components/schemas/GoodsStatsTariffType'
        percent:
          description: Значение тарифа в процентах.
          type: number
        amount:
          description: Значение тарифа в рублях.
          type: number
      type: object
    OutletWorkingScheduleItemDTO:
      description: Расписание работы точки продаж.
      properties:
        startDay:
          $ref: '#/components/schemas/DayOfWeekType'
        endDay:
          $ref: '#/components/schemas/DayOfWeekType'
        startTime:
          description: |
            Точка продаж работает c указанного часа.
            Формат: `ЧЧ:ММ`.
            Обязательный параметр.
          minLength: 1
          type: string
        endTime:
          description: |
            Точка продаж работает до указанного часа.
            Формат: `ЧЧ:ММ`.
            Обязательный параметр.
          minLength: 1
          type: string
      required:
      - endDay
      - endTime
      - startDay
      - startTime
      type: object
    LicenseCheckStatusType:
      description: |
        Статус проверки лицензии:
        * `NEW` — лицензия проверяется.
        * `SUCCESS` — лицензия прошла проверку.
        * `FAIL` — лицензия не прошла проверку.
      enum:
      - NEW
      - SUCCESS
      - FAIL
      - REVOKE
      - DONT_WANT
      - FAIL_MANUAL
      type: string
    FeedbackStateType:
      description: |
        Статус отзыва:

        * `LAST` — актуален.
        * `PREVIOUS` — устарел.
        * `DELETED` — удален.
      enum:
      - LAST
      - PREVIOUS
      - DELETED
      type: string
    FeedbackAuthorDTO:
      description: |
        Информация об авторе отзыва.

        Если отзыв оставлен анонимно, параметр не возвращается.
      properties:
        name:
          description: Имя автора отзыва.
          type: string
        region:
          $ref: '#/components/schemas/RegionDTO'
      type: object
    FeedbackCommentDTO:
      description: Комментарий к отзыву на магазин.
      properties:
        id:
          description: Идентификатор ответа.
          format: int64
          type: integer
        parentId:
          description: Идентификатор родительского ответа.
          format: int64
          type: integer
        body:
          description: Текст ответа.
          type: string
        createdAt:
          description: |
            Дата и время создания ответа.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.
          format: date-time
          type: string
        updatedAt:
          description: |
            Дата и время изменения ответа.

            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.
          format: date-time
          type: string
        author:
          $ref: '#/components/schemas/FeedbackCommentAuthorDTO'
        children:
          description: Дочерние ответы.
          items:
            $ref: '#/components/schemas/FeedbackCommentDTO'
          type: array
      type: object
    FeedbackShopDTO:
      description: Информация о магазине.
      properties:
        name:
          description: Название магазина.
          type: string
      type: object
    FeedbackGradesDTO:
      description: "Информация об оценках, которые поставил автор отзыва магазину\
        , и об оценках полезности отзыва от других пользователей Маркета."
      properties:
        average:
          description: "Общая оценка, указанная в отзыве: от `1` («Ужасный магазин\
            ») до `5` («Отличный магазин»)."
          type: number
        agreeCount:
          description: "Количество пользователей, считающих отзыв полезным."
          format: int64
          type: integer
        rejectCount:
          description: "Количество пользователей, считающих отзыв бесполезным."
          format: int64
          type: integer
        factors:
          description: |
            Информация об оценках по параметрам, указанных в отзыве.

            При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.
          items:
            $ref: '#/components/schemas/FeedbackFactorDTO'
          type: array
      type: object
    FeedbackOrderDTO:
      description: "Информация о заказе, указанная в отзыве."
      properties:
        shopOrderId:
          description: "Номер заказа, указанный в отзыве."
          type: string
        delivery:
          $ref: '#/components/schemas/FeedbackDeliveryType'
      type: object
    GetPriceWithDiscountDTO:
      allOf:
      - $ref: '#/components/schemas/UpdatePriceWithDiscountDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием скидки и времени последнего обновления.
      type: object
    GetPriceWithVatDTO:
      allOf:
      - $ref: '#/components/schemas/PriceDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием ставки НДС и времени последнего обновления.
      type: object
    OfferErrorDTO:
      description: "Сообщение об ошибке, связанной с размещением товара."
      properties:
        message:
          description: Тип ошибки.
          type: string
        comment:
          description: Пояснение.
          type: string
      type: object
    QuantumDTO:
      description: Настройка продажи квантами.
      properties:
        minQuantity:
          description: |
            Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.

            ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        stepQuantity:
          description: |
            На сколько единиц покупатель сможет увеличить количество товара в корзине.

            Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.

            ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      type: object
    OfferForRecommendationDTO:
      description: Информация о состоянии цены товара.
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        price:
          $ref: '#/components/schemas/BasePriceDTO'
        cofinancePrice:
          $ref: '#/components/schemas/GetPriceDTO'
        competitiveness:
          $ref: '#/components/schemas/PriceCompetitivenessType'
        shows:
          description: Количество показов карточки товара за последние 7 дней.
          format: int64
          type: integer
      type: object
    OfferRecommendationInfoDTO:
      description: "Рекомендации, касающиеся цены товара."
      properties:
        offerId:
          description: |2


            **Ваш SKU**

            Идентификатор товара в магазине. Разрешены английские и русские буквы, цифры и символы `. , / \ ( ) [ ] - = _`

            Максимальная длина — 80 знаков.

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields).
          maxLength: 80
          minLength: 1
          pattern: "^[0-9a-zа-яА-ЯA-ZёËëЁ.,\\\\\\/()\\[\\]\\-=_]{1,80}$"
          type: string
        recommendedCofinancePrice:
          $ref: '#/components/schemas/BasePriceDTO'
        competitivenessThresholds:
          $ref: '#/components/schemas/PriceCompetitivenessThresholdsDTO'
      type: object
    FeedStatusType:
      description: |
        Статус прайс-листа.
        Возможные значения:
          * `ERROR` — найдены ошибки.
          * `NA` — прайс-лист не загружался более семи дней или на этапе загрузки произошла ошибка.
          * `OK` — ошибок не найдено.
      enum:
      - ERROR
      - NA
      - OK
      type: string
    FeedContentErrorDTO:
      description: |
        Информация об ошибке в содержимом прайс-листа.
        Выводится, если параметр `content status=ERROR`.
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/FeedContentErrorType'
      type: object
    FeedDownloadErrorDTO:
      description: |
        Информация об ошибке при загрузке прайс-листа.
        Выводится, если параметр `download status=ERROR`.
      example:
        description: description
        type: null
        httpStatusCode: 5
      properties:
        httpStatusCode:
          description: |
            HTTP-код ошибки индексации прайс-листа.
            Выводится, если `type=DOWNLOAD_HTTP_ERROR`.
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/FeedDownloadErrorType'
        description:
          description: |
            Описание ошибки.
            Выводится, если `type=DOWNLOAD_ERROR`.
          type: string
      type: object
    FeedPublicationFullDTO:
      description: |
        Информация о последней публикации предложений из прайс-листа на Маркете.
      example:
        fileTime: 2000-01-23T04:56:07.000+00:00
        publishedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        fileTime:
          description: |
            Дата и время, которые магазин указал в прайс-листе.
            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
        publishedTime:
          description: |
            Дата и время публикации предложений из прайс-листа на Маркете.
            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      type: object
    FeedPublicationPriceAndStockUpdateDTO:
      description: |
        Последнее обновление цен и наличия товаров на Маркете.
        Если последнее по времени обновление было полным, в параметре выводятся те же данные, что и в параметре `full`.
        Выводится, если параметр `publication status=OK`.
      example:
        fileTime: 2000-01-23T04:56:07.000+00:00
        publishedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        fileTime:
          description: |
            Дата и время, которые магазин указал в прайс-листе.
            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
        publishedTime:
          description: |
            Дата и время публикации предложений из прайс-листа на Маркете.
            Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      type: object
    FeedIndexLogsIndexType:
      description: |
        Тип обновления.

        Возможные значения:
        * `DIFF` — частичное обновление данных на Яндекс Маркете (например, обновление цен ранее опубликованных предложений и публикация новых).
        * `FAST_PRICE` — только обновление цен ранее опубликованных предложений.
        * `FULL` — полное обновление данных на Яндекс Маркете.
      enum:
      - DIFF
      - FAST_PRICE
      - FULL
      type: string
    FeedIndexLogsErrorDTO:
      description: |
        Информация об ошибке, произошедшей во время индексации прайс-листа.

        Выводится, если во время индексации произошли ошибки (`index-log-record status=ERROR`).
      properties:
        httpStatusCode:
          description: |
            HTTP-код ошибки индексации прайс-листа.

            Выводится, если `type=DOWNLOAD_HTTP_ERROR`.
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/FeedIndexLogsErrorType'
        description:
          description: |
            Описание ошибки.

            Выводится, если `type=DOWNLOAD_ERROR`.
          type: string
      type: object
    FeedIndexLogsOffersDTO:
      description: Информация о предложениях прайс-листа.
      properties:
        rejectedCount:
          description: "Количество предложений, который не опубликованы на Маркете\
            \ из-за найденных ошибок."
          format: int64
          type: integer
        totalCount:
          description: Количество предложений в прайс-листе.
          format: int64
          type: integer
      type: object
    BidRecommendationItemDTO:
      description: Рекомендованная ставка и возможная доля показов.
      properties:
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        showPercent:
          description: |
            Доля показов.
          format: int64
          maximum: 100
          minimum: 0
          type: integer
      required:
      - bid
      - showPercent
      type: object
    PriceRecommendationItemDTO:
      description: Рекомендованная цена.
      properties:
        campaignId:
          description: Идентификатор кампании.
          format: int64
          type: integer
        price:
          description: |
            Рекомендованная цена товара. Чтобы продвижение хорошо работало, цена товара должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)
          format: decimal
          minimum: 1
          type: number
      required:
      - campaignId
      - price
      type: object
    ParameterType:
      description: |
        Тип данных:

        * `TEXT` — текст;
        * `ENUM` — список возможных значений;
        * `BOOLEAN` — `true` или `false`;
        * `NUMERIC` — число.
      enum:
      - TEXT
      - ENUM
      - BOOLEAN
      - NUMERIC
      type: string
    OfferCardRecommendationType:
      description: |
        Рекомендация по дополнению или замене контента.

        Часть рекомендаций относятся к **основным параметрам**, которые есть у товаров любых категорий. Другие — к тем **характеристикам**, которые есть у товара потому, что он относится к определенной категории.

        **1. Рекомендации, относящиеся к основным параметрам**

        Каждая такая рекомендация относится к **единственному параметру**. Чтобы заполнить этот параметр, пользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        |Рекомендация        |Содержание                                                           |Параметр в updateOfferMappings|
        |--------------------|---------------------------------------------------------------------|------------------------------|
        |`HAS_VIDEO`         |Добавьте на карточку видео.                                          |`videos`                      |
        |`RECOGNIZED_VENDOR` |Напишите название производителя так, как его пишет сам производитель.|`vendor`                      |
        |`PICTURE_COUNT`     |Добавьте изображения.                                                |`pictures`                    |
        |`HAS_DESCRIPTION`   |Заполните описание.                                                  |`description`                 |
        |`HAS_BARCODE`       |Укажите штрихкод.                                                    |`barcode`                     |
        |`FIRST_PICTURE_SIZE`|Замените первое изображение более крупным.                           |`pictures`                    |

        **2. Рекомендации, относящиеся к характеристикам по категориям**

        Каждая такая рекомендация предполагает заполнение **одной или нескольких характеристик**. Чтобы узнать, какие именно характеристики нужно заполнить, воспользуйтесь запросом POST category/{categoryId}/parameters. Например, если вы получили рекомендацию `MAIN`, нужно заполнить характеристики, имеющие `MAIN` в массиве `recommendationTypes`.

        |Рекомендация |Содержание                                                                  |
        |-------------|----------------------------------------------------------------------------|
        |`MAIN`       |Заполните ключевые характеристики товара.                                   |
        |`ADDITIONAL` |Заполните дополнительные характеристики товара.                             |
        |`FILTERABLE` |Заполните характеристики, используемые в фильтрах.                          |
        |`DISTINCTIVE`|Заполните характеристики, которыми отличаются друг от друга варианты товара.|
      enum:
      - HAS_VIDEO
      - RECOGNIZED_VENDOR
      - MAIN
      - ADDITIONAL
      - DISTINCTIVE
      - FILTERABLE
      - PICTURE_COUNT
      - HAS_DESCRIPTION
      - HAS_BARCODE
      - FIRST_PICTURE_SIZE
      type: string
    ParameterValueOptionDTO:
      description: Значение характеристики.
      properties:
        id:
          description: Идентификатор значения.
          format: int64
          type: integer
        value:
          description: Значение.
          type: string
        description:
          description: Описание значения.
          type: string
      required:
      - id
      - value
      type: object
    ParameterValueConstraintsDTO:
      description: Ограничения на значения характеристик.
      properties:
        minValue:
          description: Минимальное число.
          format: double
          type: number
        maxValue:
          description: Максимальное число.
          format: double
          type: number
        maxLength:
          description: Максимальная длина текста.
          format: int32
          type: integer
      type: object
    ValueRestrictionDTO:
      description: |
        Ограничение на возможные значения, накладываемое другой характеристикой.

        Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.

        **Пример**

        Характеристика **размер** сама по себе может принимать девять разных значений: `S`, `M`, `L`, `44`, `46`, `48`, `42/164`, `46/176`, `44S`.

        Если ограничивающая характеристика **размерная сетка** принимает значение `RU`, список возможных значений размера сокращается до `44`, `46`, `48`.
      properties:
        limitingParameterId:
          description: Идентификатор ограничивающей характеристики.
          format: int64
          type: integer
        limitedValues:
          description: Значения ограничивающей характеристики и соответствующие допустимые
            значения текущей характеристики.
          items:
            $ref: '#/components/schemas/OptionValuesLimitedDTO'
          type: array
      required:
      - limitedValues
      - limitingParameterId
      type: object
    OfferCardRecommendationDTO:
      description: Рекомендация по заполнению карточки товара.
      properties:
        type:
          $ref: '#/components/schemas/OfferCardRecommendationType'
        percent:
          description: Процент выполнения рекомендации. Указывается для рекомендаций
            некоторых типов.
          exclusiveMaximum: true
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - type
      type: object
    OfferContentErrorType:
      description: |
        Типы ошибок:

        * `OFFER_NOT_FOUND` — такого товара нет в каталоге;
        * `UNKNOWN_CATEGORY` — указана неизвестная категория;
        * `CATEGORY_MISMATCH` — указанная категория не совпадает с категорией товара;
        * `UNKNOWN_PARAMETER` — передана характеристика, отсутствующая среди характеристик категории;
        * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое;
        * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа;
        * `VALUE_BLANK` — передано пустое значение.
      enum:
      - OFFER_NOT_FOUND
      - UNKNOWN_CATEGORY
      - CATEGORY_MISMATCH
      - UNKNOWN_PARAMETER
      - UNEXPECTED_BOOLEAN_VALUE
      - NUMBER_FORMAT
      - VALUE_BLANK
      type: string
    CampaignSettingsScheduleDTO:
      description: Расписание работы службы доставки в своем регионе.
      example:
        customWorkingDays:
        - 23-09-2022
        - 23-09-2022
        period:
          fromDate: 23-09-2022
          toDate: 23-09-2022
        customHolidays:
        - 23-09-2022
        - 23-09-2022
        weeklyHolidays:
        - 1
        - 1
        availableOnHolidays: true
        totalHolidays:
        - 23-09-2022
        - 23-09-2022
      properties:
        availableOnHolidays:
          description: |
            Признак работы службы доставки в государственные праздники.
            Возможные значения.
            * `false` — служба доставки не работает в праздничные дни.
            * `true` — служба доставки работает в праздничные дни.
          type: boolean
        customHolidays:
          description: "Список дней, в которые служба доставки не работает. Дни ма\
            газин указал в личном кабинете на Маркете."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        customWorkingDays:
          description: "Список выходных и праздничных дней, в которые служба доста\
            вки работает. Дни магазин указал в личном кабинете на Маркете."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        period:
          $ref: '#/components/schemas/CampaignSettingsTimePeriodDTO'
        totalHolidays:
          description: "Итоговый список нерабочих дней службы доставки. Список рас\
            считывается с учетом выходных, нерабочих дней и государственных праздн\
            иков. Информацию по ним магазин указывает в личном кабинете на Маркете\
            ."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        weeklyHolidays:
          description: Список выходных дней недели и государственных праздников.
          items:
            description: |
              Номер дня недели.
              Возможные значения:
              * `1` — понедельник.
              * `2` — вторник.
              * `3` — среда.
              * `4` — четверг.
              * `5` — пятница.
              * `6` — суббота.
              * `7` — воскресенье.
              Для формата JSON выводится номер дня в виде числа.
            format: int32
            maximum: 7
            minimum: 1
            type: integer
          type: array
      type: object
    OrderPromoType:
      description: |
        Тип скидки:

        * `MARKET_COUPON` — скидка по промокоду от Маркета.
        * `MARKET_DEAL` — скидка в рамках соглашения на оказание услуг по продвижению сервиса между маркетплейсом Яндекс Маркета и партнером.
        * `MARKET_COIN` — скидка по купонам.
      enum:
      - DIRECT_DISCOUNT
      - BLUE_SET
      - BLUE_FLASH
      - GENERIC_BUNDLE
      - MARKET_COUPON
      - MARKET_PROMOCODE
      - MARKET_DEAL
      - MARKET_BLUE
      - MARKET_PRIME
      - YANDEX_PLUS
      - BERU_PLUS
      - MARKET_COIN
      - YANDEX_EMPLOYEE
      - LIMITED_FREE_DELIVERY_PROMO
      - FREE_DELIVERY_THRESHOLD
      - MULTICART_DISCOUNT
      - PRICE_DROP_AS_YOU_SHOP
      - FREE_DELIVERY_FOR_LDI
      - FREE_DELIVERY_FOR_LSC
      - SECRET_SALE
      - FREE_PICKUP
      - CHEAPEST_AS_GIFT
      - CASHBACK
      - SUPPLIER_MULTICART_DISCOUNT
      - SPREAD_DISCOUNT_COUNT
      - SPREAD_DISCOUNT_RECEIPT
      - ANNOUNCEMENT_PROMO
      - DISCOUNT_BY_PAYMENT_TYPE
      - PERCENT_DISCOUNT
      - EMPTY_PROMO
      - UNKNOWN
      type: string
    OrderItemStatusType:
      description: Возвращенный или невыкупленный товар.
      enum:
      - REJECTED
      - RETURNED
      type: string
    GpsDTO:
      description: |
        GPS-координаты широты и долготы.
      example:
        latitude: 8.762042012749001
        longitude: 9.018348186070783
      properties:
        latitude:
          description: Широта.
          format: decimal
          type: number
        longitude:
          description: Долгота.
          format: decimal
          type: number
      required:
      - latitude
      - longitude
      type: object
    OrderParcelStatusType:
      description: Статус заказа в партнерской службе доставки.
      enum:
      - NEW
      - CREATED
      - READY_TO_SHIP
      - ERROR
      - UNKNOWN
      type: string
    OrderParcelBoxDTO:
      description: Информация о грузоместе.
      example:
        fulfilmentId: fulfilmentId
        id: 2
      properties:
        id:
          description: Идентификатор грузоместа.
          format: int64
          type: integer
        fulfilmentId:
          description: Идентификатор грузового места в информационной системе магазина.
          type: string
      type: object
    ReturnDecisionReasonType:
      description: |
        Причины возврата:

        * BAD_QUALITY — бракованный товар (есть недостатки).

        * DO_NOT_FIT — товар не подошел.

        * WRONG_ITEM — привезли не тот товар.

        * DAMAGE_DELIVERY — товар поврежден при доставке.

        * LOYALTY_FAIL — невозможно установить виновного в браке/пересорте.

        * CONTENT_FAIL — ошибочное описание товара по вине Маркета.

        * UNKNOWN — причина не известна.
      enum:
      - BAD_QUALITY
      - DOES_NOT_FIT
      - WRONG_ITEM
      - DAMAGE_DELIVERY
      - LOYALTY_FAIL
      - CONTENT_FAIL
      - UNKNOWN
      type: string
    ReturnDecisionSubreasonType:
      description: |
        Детали причин возврата:
          * DO_NOT_FIT:
            * USER_DID_NOT_LIKE — товар не понравился.
            * USER_CHANGED_MIND — передумал покупать.
            * DELIVERED_TOO_LONG — длительный срок доставки, поэтому передумал.

          * BAD_QUALITY:
            * BAD_PACKAGE — упаковка товара была нарушена
            * DAMAGED — царапины, сколы.
            * NOT_WORKING — не включается / не работает.
            * INCOMPLETENESS — некомплект (не хватает детали в наборе, к товару).

          * WRONG_ITEM:
            * WRONG_ITEM — не тот товар.
            * WRONG_COLOR — не соответствует по цвету.
            * DID_NOT_MATCH_DESCRIPTION — не соответствует заявленным характеристикам/описанию.
      enum:
      - USER_DID_NOT_LIKE
      - USER_CHANGED_MIND
      - DELIVERED_TOO_LONG
      - BAD_PACKAGE
      - DAMAGED
      - NOT_WORKING
      - INCOMPLETENESS
      - WRONG_ITEM
      - WRONG_COLOR
      - DID_NOT_MATCH_DESCRIPTION
      - UNKNOWN
      type: string
    ReturnDecisionType:
      description: |
        Решение по возврату:

        * REFUND_MONEY — вернуть деньги покупателю.

        * REFUND_MONEY_INCLUDING_SHIPMENT — вернуть деньги за товар и пересылку.

        * REPAIR — отремонтировать товар.

        * REPLACE — заменить товар.

        * SEND_TO_EXAMINATION — взять товар на экспертизу.

        * DECLINE_REFUND — отказать в возврате.

        * OTHER_DECISION — другое решение.
      enum:
      - REFUND_MONEY
      - REFUND_MONEY_INCLUDING_SHIPMENT
      - REPAIR
      - REPLACE
      - SEND_TO_EXAMINATION
      - DECLINE_REFUND
      - OTHER_DECISION
      - UNKNOWN
      type: string
    ReturnInstanceStockType:
      description: Тип остатка на складе.
      enum:
      - FIT
      - DEFECT
      - ANOMALY
      - SURPLUS
      - EXPIRED
      - MISGRADING
      - UNDEFINED
      - INCORRECT_IMEI
      - INCORRECT_SERIAL_NUMBER
      - INCORRECT_CIS
      - PART_MISSING
      - NON_COMPLIENT
      - NOT_ACCEPTABLE
      - UNKNOWN
      type: string
    ReturnInstanceStatusType:
      description: Логистический статус конкретного товара.
      enum:
      - CREATED
      - RECEIVED
      - IN_TRANSIT
      - READY_FOR_PICKUP
      - PICKED
      - RECEIVED_ON_FULFILLMENT
      - CANCELLED
      - LOST
      - UTILIZED
      - PREPARED_FOR_UTILIZATION
      - NOT_IN_DEMAND
      type: string
    GetPriceDTO:
      allOf:
      - $ref: '#/components/schemas/BasePriceDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием времени последнего обновления.
      type: object
    OfferCampaignStatusDTO:
      description: Статус товара в магазине.
      properties:
        campaignId:
          description: |
            Идентификатор кампании.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OfferCampaignStatusType'
      required:
      - campaignId
      - status
      type: object
    OfferSellingProgramDTO:
      description: "Информация о том, по каким моделям можно продавать товар, а по\
        \ каким нельзя."
      properties:
        sellingProgram:
          $ref: '#/components/schemas/SellingProgramType'
        status:
          $ref: '#/components/schemas/OfferSellingProgramStatusType'
      required:
      - sellingProgram
      - status
      type: object
    OfferConditionDTO:
      description: |
        Состояние уцененного товара.
      properties:
        type:
          $ref: '#/components/schemas/OfferConditionType'
        quality:
          $ref: '#/components/schemas/OfferConditionQualityType'
        reason:
          description: |
            Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
          type: string
      type: object
    OfferType:
      description: |
        Особый тип товара:

        * `MEDICINE` — лекарства.
        * `BOOK` — книги.
        * `AUDIOBOOK` — аудиокниги.
        * `ARTIST_TITLE` — музыкальная и видеопродукция.
        * `ON_DEMAND` — товары на заказ.
      enum:
      - DEFAULT
      - MEDICINE
      - BOOK
      - AUDIOBOOK
      - ARTIST_TITLE
      - ON_DEMAND
      type: string
    AgeDTO:
      description: Возраст в заданных единицах измерения.
      properties:
        value:
          description: |
            Значение.
          minimum: 0
          type: number
        ageUnit:
          $ref: '#/components/schemas/AgeUnitType'
      required:
      - ageUnit
      - value
      type: object
    OfferParamDTO:
      description: |
        Параметры товара.

        {% note tip "" %}

        Используйте [POST businesses/{businessId}/offer-cards/update](../../reference/content/updateOfferContent.md) для передачи характеристик товара, которые специфичны для его категории. Так переданные характеристики с большей вероятностью попадут на карточку.

        {% endnote %}
      properties:
        name:
          description: |
            Название.

            Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).
          example: Wi-Fi
          type: string
        value:
          description: |
            Значение.
          example: есть
          type: string
      required:
      - name
      - value
      type: object
    OfferProcessingNoteType:
      description: |
        Тип причины, по которой товар не прошел модерацию:

        * `ASSORTMENT` — товар производится в разных вариантах. Каждый из них нужно описать как отдельный товар (входной параметр `offer-mapping-entry` запроса POST /campaigns/{campaignId}/offer-mapping-entries/updates или строка в каталоге, если вы загружаете товары через личный кабинет магазина).
        * `CANCELLED` — товар отозван с модерации по вашей инициативе.
        * `CONFLICTING_INFORMATION` _(ранее ошибочно `CONFLICTING`)_ — вы предоставили противоречивую информацию о товаре. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `DEPARTMENT_FROZEN` — правила размещения товаров в данной категории перерабатываются, поэтому товар пока не может пройти модерацию.
        * `INCORRECT_INFORMATION` — информация о товаре, которую вы предоставили, противоречит описанию от производителя. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `LEGAL_CONFLICT` — товар не прошел модерацию по юридическим причинам. Например, он официально не продается в России или у вас нет разрешения на его продажу.
        * `NEED_CLASSIFICATION_INFORMATION` — информации о товаре, которую вы предоставили, не хватает, чтобы отнести его к категории. Проверьте, что правильно указали название, категорию, производителя и страны производства товара, а также URL изображений или страниц с описанием, по которым можно идентифицировать товар.
        * `NEED_INFORMATION` — товар раньше не продавался в России и пока не размещается на Маркете. Для него можно создать карточку. Подробнее см. в разделе [Работа с карточкой товара](https://yandex.ru/support/marketplace/assortment/content/index.html) Справки Маркета для продавцов.
        * `NEED_PICTURES` — для идентификации товара нужны его изображения. Отправьте URL изображений товара в запросе POST /campaigns/{campaignId}/offer-mapping-entries/updates или загрузите обновленный каталог через личный кабинет магазина.
        * `NEED_VENDOR` — неверно указан производитель товара.
        * `NO_CATEGORY`, `NO_KNOWLEDGE` — товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию.
        * `NO_PARAMETERS_IN_SHOP_TITLE` — товар производится в разных вариантах, и из указанного названия непонятно, о каком идет речь. Параметры, которые нужно добавить в название товара, указаны в параметре `payload`.
        * `NO_SIZE_MEASURE` — для этого товара нужна размерная сетка. Отправьте ее в службу поддержки или вашему менеджеру. Требования к размерной сетке указаны в параметре `payload`.
        * `UNKNOWN` — товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру.
      enum:
      - ASSORTMENT
      - CANCELLED
      - CONFLICTING_INFORMATION
      - OTHER
      - DEPARTMENT_FROZEN
      - INCORRECT_INFORMATION
      - LEGAL_CONFLICT
      - NEED_CLASSIFICATION_INFORMATION
      - NEED_INFORMATION
      - NEED_PICTURES
      - NEED_VENDOR
      - NO_CATEGORY
      - NO_KNOWLEDGE
      - NO_PARAMETERS_IN_SHOP_TITLE
      - NO_SIZE_MEASURE
      - SAMPLE_LINE
      type: string
    PriceSuggestType:
      description: |
        Тип цены:

        * `BUYBOX` — самая низкая цена на товар, по которой он продается сейчас. Эта цена обновляется в режиме реального времени. Если вы установите цену ниже, начнет показываться ваше предложение. Если для этого значения в параметре `price` указана цена, которая совпадает с вашей, значит, ваш товар уже показывается на витрине. Если кроме вас этот товар продают другие продавцы по такой же цене, их предложения также будут отображаться вместе с вашими по очереди.
        * `DEFAULT_OFFER` — рекомендованная Маркетом цена, которая привлекает покупателей. Рассчитывается только для популярных на сервисе товаров и обновляется раз в четыре часа.
        * `MIN_PRICE_MARKET` — минимальная цена на Маркете. Самая низкая цена среди всех предложений товара на Маркете во всех регионах, включая те, которые не видны на витрине. Эта цена обновляется в режиме реального времени и обеспечивает большее количество показов на Маркете, чем самая низкая или рекомендованная цена.
        * `MAX_DISCOUNT_BASE` — максимальная цена товара без скидки (старая цена), при которой он может быть показан со скидкой. Данная цена рассчитывается автоматически на основе SKU на Яндексе.

        {% note info %}

        Если цена типа `MAX_DISCOUNT_BASE` не возвращается, скидка на товар не будет показана, так как для него еще не накопилась история цен.

        {% endnote %}

        * `MARKET_OUTLIER_PRICE` — максимальная цена товара, которая обеспечивает показы на Маркете. Если ваша цена выше указанной, товар будет скрыт, так как цена превышает рекомендованную Маркетом на 40 % или больше.
      enum:
      - BUYBOX
      - DEFAULT_OFFER
      - MIN_PRICE_MARKET
      - MAX_DISCOUNT_BASE
      - MARKET_OUTLIER_PRICE
      - MAX_DISCOUNT_PRICE
      - PROMO
      type: string
    PriceQuarantineVerdictType:
      description: |
        Типы карантина:

        * `PRICE_CHANGE` — новая цена слишком сильно отличается от прежней. В поле `params` будет  новая цена `CURRENT_PRICE` и последняя цена до попадания в карантин `LAST_VALID_PRICE`.
        * `LOW_PRICE` — установленная цена слишком сильно отличается от рыночной. В поле `params` будет установленная вами цена `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
        * `LOW_PRICE_PROMO` — цена после применения акций слишком сильно отличается от рыночной. В поле `params` будет цена после применения акций `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
      enum:
      - PRICE_CHANGE
      - LOW_PRICE
      - LOW_PRICE_PROMO
      type: string
    PriceQuarantineVerdictParameterDTO:
      description: Параметр карантина.
      properties:
        name:
          $ref: '#/components/schemas/PriceQuarantineVerdictParamNameType'
        value:
          description: Значение параметра.
          type: string
      required:
      - name
      - value
      type: object
    TurnoverDTO:
      description: Информация об оборачиваемости товара.
      properties:
        turnover:
          $ref: '#/components/schemas/TurnoverType'
        turnoverDays:
          description: "Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)"
          format: double
          type: number
      required:
      - turnover
      type: object
    WarehouseStockDTO:
      description: Информация об остатках товара.
      properties:
        type:
          $ref: '#/components/schemas/WarehouseStockType'
        count:
          description: Значение остатков.
          format: int64
          type: integer
      required:
      - count
      - type
      type: object
    OrdersStatsPriceDTO:
      description: Цена или скидки на товар.
      properties:
        type:
          $ref: '#/components/schemas/OrdersStatsPriceType'
        costPerItem:
          description: |
            Цена или скидка на единицу товара в заказе.
            Указана в рублях.
            Точность — два знака после запятой.
          type: number
        total:
          description: |
            Суммарная цена или скидка на все единицы товара в заказе.
            Указана в рублях.
            Точность — два знака после запятой.
          type: number
      type: object
    OrdersStatsWarehouseDTO:
      description: "Информация о складе, на котором хранится товар."
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
      type: object
    OrdersStatsDetailsDTO:
      description: Информация об удалении товара из заказа.
      properties:
        itemStatus:
          $ref: '#/components/schemas/OrdersStatsItemStatusType'
        itemCount:
          description: "Количество товара со статусом, указанном в параметре `itemStatus`."
          format: int64
          type: integer
        updateDate:
          description: |
            Дата, когда товар получил статус, указанный в параметре `itemStatus`.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        stockType:
          $ref: '#/components/schemas/OrdersStatsStockType'
      type: object
    OrdersStatsPaymentType:
      description: |
        Тип денежного перевода:
        - `PAYMENT` — оплата;
        - `REFUND` — возврат.
      enum:
      - PAYMENT
      - REFUND
      - UNKNOWN
      type: string
    OrdersStatsPaymentSourceType:
      description: |
        Способ денежного перевода:
        - `BUYER` — оплата или возврат деньгами;
        - `CASHBACK` — оплата или возврат баллами кешбэка по подписке Яндекс Плюс;
        - `MARKETPLACE` — оплата или возврат купонами;
        - `SPASIBO` — оплата или возврат бонусами СберСпасибо.
      enum:
      - BUYER
      - CASHBACK
      - MARKETPLACE
      - SPASIBO
      type: string
    OrdersStatsPaymentOrderDTO:
      description: Информация о платежном получении.
      properties:
        id:
          description: Номер платежного поручения.
          type: string
        date:
          description: |
            Дата платежного поручения.
            Формат даты: `ГГГГ‑ММ‑ДД`.
          format: date
          type: string
      type: object
    OrdersStatsCommissionType:
      description: |
        Услуга:

        * `FEE` — размещение товара на Маркете;
        * `FULFILLMENT` — складская обработка;
        * `LOYALTY_PARTICIPATION_FEE` — участие в программе лояльности и отзывы за баллы, если они подключены;
        * `AUCTION_PROMOTION` — буст продаж;
        * `INSTALLMENT` — рассрочка;
        * `DELIVERY_TO_CUSTOMER` — доставка покупателю;
        * `EXPRESS_DELIVERY_TO_CUSTOMER` — экспресс-доставка покупателю;
        * `AGENCY` — прием платежа покупателя;
        * `PAYMENT_TRANSFER` — перевод платежа покупателя;
        * `RETURNED_ORDERS_STORAGE` — хранение невыкупов и возвратов;
        * `SORTING` — обработка заказа.
      enum:
      - FEE
      - FULFILLMENT
      - LOYALTY_PARTICIPATION_FEE
      - AUCTION_PROMOTION
      - INSTALLMENT
      - DELIVERY_TO_CUSTOMER
      - EXPRESS_DELIVERY_TO_CUSTOMER
      - AGENCY
      - PAYMENT_TRANSFER
      - RETURNED_ORDERS_STORAGE
      - SORTING
      type: string
    GoodsStatsTariffType:
      description: |
        Услуга Маркета, за которую начисляется тариф:

        * `AGENCY_COMMISSION` — прием платежа покупателя.

        * `PAYMENT_TRANSFER` — перевод платежа покупателя.

        * `FULFILLMENT` — обработка товара на складе Маркета.

        * `STORAGE` — хранение товара на складе Маркета в течение суток.

        * `SURPLUS` — хранение излишков на складе Маркета.

        * `WITHDRAW` — вывоз товара со склада Маркета.

        * `FEE` — размещение товара на Маркете.

        Все тарифы описаны [в Справке для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).
      enum:
      - AGENCY_COMMISSION
      - PAYMENT_TRANSFER
      - FULFILLMENT
      - STORAGE
      - WITHDRAW
      - SURPLUS
      - FEE
      type: string
    FeedbackCommentAuthorDTO:
      description: Информация об авторе ответа.
      properties:
        type:
          $ref: '#/components/schemas/FeedbackCommentAuthorType'
        name:
          description: Имя автора отзыва или название магазина.
          type: string
      type: object
    FeedbackFactorDTO:
      description: |
        Информация об оценках по параметрам, указанных в отзыве.

        При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.
      properties:
        id:
          description: Идентификатор параметра.
          format: int64
          type: integer
        title:
          description: "Название параметра. Например, `Скорость обработки заказа`."
          type: string
        description:
          description: "Описание параметра. Например, `Как быстро с вами связались\
            \ для подтверждения заказа?`."
          type: string
        value:
          description: |
            Оценка по параметру, указанная в отзыве: от `1` (низшая оценка) до `5` (высшая оценка).
          format: int32
          type: integer
      type: object
    FeedbackDeliveryType:
      description: |
        Способ покупки, указанный в отзыве:

        * `DELIVERY` — доставка.
        * `PICKUP` — самовывоз.
        * `INSTORE` — в магазине.
      enum:
      - DELIVERY
      - PICKUP
      - INSTORE
      type: string
    UpdateTimeDTO:
      description: Время последнего обновления.
      properties:
        updatedAt:
          description: Время последнего обновления.
          format: date-time
          type: string
      required:
      - updatedAt
      type: object
    PriceCompetitivenessThresholdsDTO:
      description: "Максимальные значения цены, при которых она является привлекат\
        ельной или умеренной."
      properties:
        optimalPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        averagePrice:
          $ref: '#/components/schemas/BasePriceDTO'
      type: object
    FeedContentErrorType:
      description: |
        Тип ошибки в содержимом прайс-листа.
        Возможные значения:
        * `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать.
        * `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно.
        * `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.
      enum:
      - PARSE_ERROR
      - PARSE_XML_ERROR
      - TOO_MANY_REJECTED_OFFERS
      type: string
    FeedDownloadErrorType:
      description: "Тип ошибки загрузки прайс-листа.\nВозможные значения:\n\n* `DOWNLOAD_ERROR`\
        \ — ошибка загрузки прайс-листа. Например, проблема с DNS-сервером или обр\
        ыв интернет-соединения. \n  Проблема описана в параметре `description`.\n\n\
        * `DOWNLOAD_HTTP_ERROR` — Яндекс Маркет передал запрос на получение прайс\
        -листа и получил в ответ HTTP-код, отличный от 2xx. \n\nHTTP-код выведен в\
        \ параметре `httpStatusCode`.\n"
      enum:
      - DOWNLOAD_ERROR
      - DOWNLOAD_HTTP_ERROR
      type: string
    FeedIndexLogsErrorType:
      description: |
        Тип ошибки индексации прайс-листа.

        Возможные значения:

        * `DOWNLOAD_ERROR` — ошибка загрузки прайс-листа. Например, проблема с DNS-сервером или обрыв интернет-соединения.
           Проблема описана в параметре `description`.

        * `DOWNLOAD_HTTP_ERROR` — Маркет передал запрос на получение прайс-листа и получил в ответ HTTP-код, отличный от 2xx.
           HTTP-код выведен в параметре `httpStatusCode`.

        * `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать.

        * `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно.

        * `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.
      enum:
      - DOWNLOAD_ERROR
      - DOWNLOAD_HTTP_ERROR
      - PARSE_ERROR
      - PARSE_XML_ERROR
      - TOO_MANY_REJECTED_OFFERS
      - NOT_INDEXED
      type: string
    OptionValuesLimitedDTO:
      description: Значение ограничивающей характеристики и список допустимых значений
        ограничиваемой характеристики.
      properties:
        limitingOptionValueId:
          description: Идентификатор значения ограничивающей характеристики.
          format: int64
          type: integer
        optionValueIds:
          description: |
            Идентификаторы допустимых значений ограничиваемой характеристики.
          items:
            format: int64
            type: integer
          type: array
      required:
      - limitingOptionValueId
      - optionValueIds
      type: object
    CampaignSettingsTimePeriodDTO:
      description: "Период, за который рассчитывается итоговый список нерабочих дн\
        ей службы доставки."
      example:
        fromDate: 23-09-2022
        toDate: 23-09-2022
      properties:
        fromDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        toDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      type: object
    SellingProgramType:
      description: |
        Модель размещения:

        * `FBY` — FBY.
        * `FBS` — FBS.
        * `DBS` — DBS.
        * `EXPRESS` — Экспресс.
      enum:
      - FBY
      - FBS
      - DBS
      - EXPRESS
      type: string
    OfferSellingProgramStatusType:
      description: |
        Информация о доступности или недоступности.

        * `FINE` — доступно.
        * `REJECT` — недоступно.
      enum:
      - FINE
      - REJECT
      type: string
    OfferConditionType:
      description: |
        Тип уценки:

        * `PREOWNED` —  бывший в употреблении товар, раньше принадлежал другому человеку.
        * `SHOWCASESAMPLE` — витринный образец.
        * `REFURBISHED` — повторная продажа товара.
        * `REDUCTION` — товар с дефектами.
        * `RENOVATED` — восстановленный товар.

        `REFURBISHED` — специальное значение для одежды, обуви и аксессуаров. Используется только для уцененных товаров из этой категории. Другие значения для одежды, обуви и аксессуаров не используются.
      enum:
      - PREOWNED
      - SHOWCASESAMPLE
      - REFURBISHED
      - REDUCTION
      - RENOVATED
      type: string
    OfferConditionQualityType:
      description: |
        Внешний вид товара:

        * `PERFECT` — идеальный.
        * `EXCELLENT` — отличный.
        * `GOOD` — хороший.
      enum:
      - PERFECT
      - EXCELLENT
      - GOOD
      type: string
    AgeUnitType:
      description: |
        Единицы измерения возраста:

        * `YEAR` — год.
        * `MONTH` — месяц.
      enum:
      - YEAR
      - MONTH
      type: string
    PriceQuarantineVerdictParamNameType:
      description: |
        Имя параметра причины скрытия товара по цене.
        * `CURRENT_PRICE` — цена, из-за которой товар попал в карантин;
        * `LAST_VALID_PRICE` — последняя цена до попадания в карантин (только для карантина типа `PRICE_CHANGE`);
        * `MIN_PRICE` — порог попадания в карантин (только для карантина типов `LOW_PRICE` и `LOW_PRICE_PROMO`);
        * `CURRENCY` — валюта.
      enum:
      - CURRENT_PRICE
      - LAST_VALID_PRICE
      - MIN_PRICE
      - CURRENCY
      type: string
    TurnoverType:
      description: |
        Оценка оборачиваемости.

        |enum|Диапазон оборачиваемости|Комментарий|
        |-|-|-|
        |`LOW`|`turnoverDays` ≥ 120||
        |`ALMOST_LOW`|100 ≤ `turnoverDays` < 120||
        |`HIGH`|45 ≤ `turnoverDays` < 100||
        |`VERY_HIGH`|0 ≤ `turnoverDays` < 45||
        |`NO_SALES`|—|Продаж нет.|
        |`FREE_STORE`|Любое значение.|Товары этой категории сейчас хранятся бесплатно.|
      enum:
      - LOW
      - ALMOST_LOW
      - HIGH
      - VERY_HIGH
      - NO_SALES
      - FREE_STORE
      type: string
    WarehouseStockType:
      description: |
        Тип остатков товаров на складе:

        * `AVAILABLE` (соответствует типу «Доступный к заказу» в отчете «Остатки на складе» в личном кабинете магазина) — товар, доступный для продажи.

        * `DEFECT` (соответствует типу «Брак») — товар с браком.

        * `EXPIRED` (соответствует типу «Просрочен») — товар с истекшим сроком годности.

        * `FIT` (соответствует типу «Годный») — товар, который доступен для продажи или уже зарезервирован.

        * `FREEZE` — товар, который зарезервирован для заказов.

        * `QUARANTINE` (соответствует типу «Карантин») — товар, временно недоступный для продажи (например, товар перемещают из одного помещения склада в другое).

        * `UTILIZATION` — товар, который будет утилизирован.
      enum:
      - FIT
      - FREEZE
      - AVAILABLE
      - QUARANTINE
      - UTILIZATION
      - DEFECT
      - EXPIRED
      type: string
    OrdersStatsPriceType:
      description: |
        Тип скидки или цена на товар:
        - `BUYER` — цена на товар с учетом скидок, в том числе купонов;
        - `CASHBACK` — баллы кешбэка по подписке Яндекс Плюс;
        - `MARKETPLACE` — купоны;
        - `SPASIBO` — бонусы СберСпасибо.
      enum:
      - BUYER
      - CASHBACK
      - MARKETPLACE
      - SPASIBO
      type: string
    OrdersStatsItemStatusType:
      description: |
        Статус товара:

        * `REJECTED` — товар был добавлен в созданный заказ, но не был оплачен;
        * `RETURNED` — товар вернули.
      enum:
      - REJECTED
      - RETURNED
      type: string
    OrdersStatsStockType:
      description: |
        Тип товара:

        * `DEFECT` — товар бракованный.

        * `FIT` — товар надлежащего качества.
      enum:
      - FIT
      - FREEZE
      - AVAILABLE
      - QUARANTINE
      - UTILIZATION
      - DEFECT
      - EXPIRED
      type: string
    FeedbackCommentAuthorType:
      description: |
        Тип автора ответа:

        * `USER` — пользователь.
        * `SHOP` — магазин.
      enum:
      - USER
      - SHOP
      type: string
  securitySchemes:
    OAuth:
      flows:
        implicit:
          authorizationUrl: https://oauth.yandex.ru/authorize
          scopes:
            market:partner-api: API Яндекс.Маркета / Поиска по товарам для партнеров
      type: oauth2
