/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ya-client

import (
	"encoding/json"
)

// checks if the FeedContentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedContentDTO{}

// FeedContentDTO Информация о проверке содержимого прайс-листа, загруженного на Маркет.
type FeedContentDTO struct {
	// Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`. 
	RejectedOffersCount *int64 `json:"rejectedOffersCount,omitempty"`
	Status *FeedStatusType `json:"status,omitempty"`
	// Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`. 
	TotalOffersCount *int64 `json:"totalOffersCount,omitempty"`
	Error *FeedContentErrorDTO `json:"error,omitempty"`
}

// NewFeedContentDTO instantiates a new FeedContentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedContentDTO() *FeedContentDTO {
	this := FeedContentDTO{}
	return &this
}

// NewFeedContentDTOWithDefaults instantiates a new FeedContentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedContentDTOWithDefaults() *FeedContentDTO {
	this := FeedContentDTO{}
	return &this
}

// GetRejectedOffersCount returns the RejectedOffersCount field value if set, zero value otherwise.
func (o *FeedContentDTO) GetRejectedOffersCount() int64 {
	if o == nil || IsNil(o.RejectedOffersCount) {
		var ret int64
		return ret
	}
	return *o.RejectedOffersCount
}

// GetRejectedOffersCountOk returns a tuple with the RejectedOffersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedContentDTO) GetRejectedOffersCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RejectedOffersCount) {
		return nil, false
	}
	return o.RejectedOffersCount, true
}

// HasRejectedOffersCount returns a boolean if a field has been set.
func (o *FeedContentDTO) HasRejectedOffersCount() bool {
	if o != nil && !IsNil(o.RejectedOffersCount) {
		return true
	}

	return false
}

// SetRejectedOffersCount gets a reference to the given int64 and assigns it to the RejectedOffersCount field.
func (o *FeedContentDTO) SetRejectedOffersCount(v int64) {
	o.RejectedOffersCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FeedContentDTO) GetStatus() FeedStatusType {
	if o == nil || IsNil(o.Status) {
		var ret FeedStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedContentDTO) GetStatusOk() (*FeedStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FeedContentDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given FeedStatusType and assigns it to the Status field.
func (o *FeedContentDTO) SetStatus(v FeedStatusType) {
	o.Status = &v
}

// GetTotalOffersCount returns the TotalOffersCount field value if set, zero value otherwise.
func (o *FeedContentDTO) GetTotalOffersCount() int64 {
	if o == nil || IsNil(o.TotalOffersCount) {
		var ret int64
		return ret
	}
	return *o.TotalOffersCount
}

// GetTotalOffersCountOk returns a tuple with the TotalOffersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedContentDTO) GetTotalOffersCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalOffersCount) {
		return nil, false
	}
	return o.TotalOffersCount, true
}

// HasTotalOffersCount returns a boolean if a field has been set.
func (o *FeedContentDTO) HasTotalOffersCount() bool {
	if o != nil && !IsNil(o.TotalOffersCount) {
		return true
	}

	return false
}

// SetTotalOffersCount gets a reference to the given int64 and assigns it to the TotalOffersCount field.
func (o *FeedContentDTO) SetTotalOffersCount(v int64) {
	o.TotalOffersCount = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *FeedContentDTO) GetError() FeedContentErrorDTO {
	if o == nil || IsNil(o.Error) {
		var ret FeedContentErrorDTO
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedContentDTO) GetErrorOk() (*FeedContentErrorDTO, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *FeedContentDTO) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given FeedContentErrorDTO and assigns it to the Error field.
func (o *FeedContentDTO) SetError(v FeedContentErrorDTO) {
	o.Error = &v
}

func (o FeedContentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedContentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RejectedOffersCount) {
		toSerialize["rejectedOffersCount"] = o.RejectedOffersCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalOffersCount) {
		toSerialize["totalOffersCount"] = o.TotalOffersCount
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableFeedContentDTO struct {
	value *FeedContentDTO
	isSet bool
}

func (v NullableFeedContentDTO) Get() *FeedContentDTO {
	return v.value
}

func (v *NullableFeedContentDTO) Set(val *FeedContentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedContentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedContentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedContentDTO(val *FeedContentDTO) *NullableFeedContentDTO {
	return &NullableFeedContentDTO{value: val, isSet: true}
}

func (v NullableFeedContentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedContentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


